{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///axios.min.js","webpack:///webpack/bootstrap 89bee1a5dbefd9f783d6","webpack:///./index.js","webpack:///./lib/gaxios.js","webpack:///./lib/axios.js","webpack:///./lib/utils.js","webpack:///./lib/helpers/bind.js","webpack:///./~/is-buffer/index.js","webpack:///./lib/core/Axios.js","webpack:///./lib/helpers/buildURL.js","webpack:///./lib/core/InterceptorManager.js","webpack:///./lib/core/dispatchRequest.js","webpack:///./lib/core/transformData.js","webpack:///./lib/cancel/isCancel.js","webpack:///./lib/defaults.js","webpack:///./lib/helpers/normalizeHeaderName.js","webpack:///./lib/adapters/xhr.js","webpack:///./lib/core/settle.js","webpack:///./lib/core/createError.js","webpack:///./lib/core/enhanceError.js","webpack:///./lib/helpers/parseHeaders.js","webpack:///./lib/helpers/isURLSameOrigin.js","webpack:///./lib/helpers/cookies.js","webpack:///./lib/helpers/isAbsoluteURL.js","webpack:///./lib/helpers/combineURLs.js","webpack:///./lib/core/mergeConfig.js","webpack:///./lib/cancel/Cancel.js","webpack:///./lib/cancel/CancelToken.js","webpack:///./lib/helpers/spread.js","webpack:///./lib/helpers/gbuffer.js","webpack:///./~/protobufjs/index.js","webpack:///./~/protobufjs/src/index.js","webpack:///./~/protobufjs/src/index-light.js","webpack:///./~/protobufjs/src/index-minimal.js","webpack:///./~/protobufjs/src/writer.js","webpack:///./~/protobufjs/src/util/minimal.js","webpack:///./~/@protobufjs/aspromise/index.js","webpack:///./~/@protobufjs/base64/index.js","webpack:///./~/@protobufjs/eventemitter/index.js","webpack:///./~/@protobufjs/float/index.js","webpack:///./~/@protobufjs/inquire/index.js","webpack:///./~/@protobufjs/utf8/index.js","webpack:///./~/@protobufjs/pool/index.js","webpack:///./~/protobufjs/src/util/longbits.js","webpack:///./~/protobufjs/src/writer_buffer.js","webpack:///./~/protobufjs/src/reader.js","webpack:///./~/protobufjs/src/reader_buffer.js","webpack:///./~/protobufjs/src/rpc.js","webpack:///./~/protobufjs/src/rpc/service.js","webpack:///./~/protobufjs/src/roots.js","webpack:///./~/protobufjs/src/encoder.js","webpack:///./~/protobufjs/src/enum.js","webpack:///./~/protobufjs/src/object.js","webpack:///./~/protobufjs/src/util.js","webpack:///./~/@protobufjs/codegen/index.js","webpack:///./~/@protobufjs/fetch/index.js","webpack:///./~/@protobufjs/path/index.js","webpack:///./~/protobufjs/src/type.js","webpack:///./~/protobufjs/src/namespace.js","webpack:///./~/protobufjs/src/field.js","webpack:///./~/protobufjs/src/types.js","webpack:///./~/protobufjs/src/oneof.js","webpack:///./~/protobufjs/src/mapfield.js","webpack:///./~/protobufjs/src/service.js","webpack:///./~/protobufjs/src/method.js","webpack:///./~/protobufjs/src/message.js","webpack:///./~/protobufjs/src/decoder.js","webpack:///./~/protobufjs/src/verifier.js","webpack:///./~/protobufjs/src/converter.js","webpack:///./~/protobufjs/src/wrappers.js","webpack:///./~/protobufjs/src/root.js","webpack:///./~/protobufjs/src/tokenize.js","webpack:///./~/protobufjs/src/parse.js","webpack:///./~/protobufjs/src/common.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","axios","gbuffer","requestGbuf","url","method","payload","protoFile","message","options","arguments","length","undefined","Promise","resolve","reject","trim","indexOf","responseType","then","response","Uint8Array","data","decode","catch","err","encode","window","buffer","slice","headers","Content-Type","Error","getGbuf","deleteGbuf","postGbuf","putGbuf","patchGbuf","createInstance","defaultConfig","context","Axios","instance","bind","prototype","request","utils","extend","mergeConfig","defaults","create","instanceConfig","Cancel","CancelToken","isCancel","all","promises","spread","default","_typeof","obj","Symbol","iterator","constructor","isArray","val","toString","isArrayBuffer","isFormData","FormData","isArrayBufferView","result","ArrayBuffer","isView","isString","isNumber","isUndefined","isObject","isDate","isFile","isBlob","isFunction","isStream","pipe","isURLSearchParams","URLSearchParams","str","replace","isStandardBrowserEnv","navigator","product","document","forEach","fn","i","l","key","Object","hasOwnProperty","merge","assignValue","deepMerge","a","b","thisArg","isBuffer","args","Array","apply","interceptors","InterceptorManager","buildURL","dispatchRequest","config","toLowerCase","chain","promise","interceptor","unshift","fulfilled","rejected","push","shift","getUri","params","paramsSerializer","encodeURIComponent","serializedParams","parts","v","toISOString","JSON","stringify","join","hashmarkIndex","handlers","use","eject","h","throwIfCancellationRequested","cancelToken","throwIfRequested","transformData","isAbsoluteURL","combineURLs","baseURL","transformRequest","common","adapter","transformResponse","reason","fns","value","__CANCEL__","setContentTypeIfUnset","getDefaultAdapter","process","XMLHttpRequest","normalizeHeaderName","DEFAULT_CONTENT_TYPE","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","Accept","normalizedName","name","toUpperCase","settle","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","auth","username","password","Authorization","btoa","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseData","responseText","statusText","onabort","onerror","ontimeout","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","send","enhanceError","code","error","isAxiosError","toJSON","description","number","fileName","lineNumber","columnNumber","stack","ignoreDuplicateOf","parsed","split","line","substr","concat","resolveURL","href","msie","urlParsingNode","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","originURL","test","userAgent","createElement","location","requestURL","write","expires","path","domain","secure","cookie","Date","toGMTString","match","RegExp","decodeURIComponent","remove","now","relativeURL","config1","config2","prop","executor","TypeError","resolvePromise","token","source","callback","arr","protobuf","load","ProtoMessage","lookupType","errMsg","verify","finish","object","toObject","enums","String","longs","bytes","arrays","objects","oneofs","build","tokenize","Root","_configure","Type","filename","loadSync","encoder","decoder","verifier","converter","ReflectionObject","Namespace","Enum","Field","OneOf","MapField","Service","Method","Message","wrappers","types","util","configure","Reader","BufferReader","Writer","BufferWriter","rpc","roots","Op","len","next","noop","State","writer","head","tail","states","writeByte","buf","pos","writeVarint32","VarintOp","writeVarint64","hi","lo","writeFixed32","LongBits","base64","utf8","Buffer","alloc","size","pool","subarray","_push","uint32","int32","fromNumber","sint32","uint64","bits","from","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","float","writeFloatLE","double","writeDoubleLE","writeBytes","set","string","fork","reset","ldelim","BufferWriter_","global","dst","src","ifNotSet","keys","newError","CustomError","properties","defineProperty","get","captureStackTrace","asPromise","EventEmitter","inquire","self","emptyArray","freeze","emptyObject","isNode","Boolean","versions","node","isInteger","Number","isFinite","Math","floor","isset","isSet","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","toHash","zeroHash","longFromHash","unsigned","fromHash","fromBits","toNumber","lcFirst","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","json","encoding","allocUnsafe","ctx","offset","index","pending","n","ceil","b64","s64","start","end","t","chunk","j","fromCharCode","invalidEncoding","charCodeAt","_listeners","on","evt","off","listeners","splice","emit","Float32Array","writeFloat_f32_cpy","f32","f8b","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","le","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","log","LN2","mantissa","pow","readFloat_ieee754","readUint","uint","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","writeDouble_f64_cpy","f64","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","moduleName","mod","eval","c1","c2","SIZE","MAX","slab","zero","zzDecode","parseInt","fromString","low","high","toLong","mask","part0","part1","part2","writeStringBuffer","writeBytesBuffer","copy","byteLength","indexOutOfRange","reader","writeLength","RangeError","readLongVarint","readFixed32_end","readFixed64","create_array","_slice","skip","skipType","wireType","BufferReader_","utf8Slice","min","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","setTimeout","endedByRPC","genTypePartial","gen","field","fieldIndex","ref","resolvedType","group","mtype","codegen","fields","fieldsArray","sort","compareFieldsById","_fieldsArray","type","basic","safeProp","map","mapKey","keyType","repeated","packed","optional","values","comment","comments","valuesById","reserved","className","fromJSON","enm","keepComments","add","isReservedId","isReservedName","allow_alias","parent","resolved","defineProperties","ptr","fullName","onAdd","_handleAdd","onRemove","_handleRemove","getOption","setOption","setOptions","Root_","fetch","fs","toArray","array","safePropBackslashRe","safePropQuoteRe","isReserved","ucFirst","camelCaseRe","camelCase","$0","$1","decorateType","ctor","typeName","$type","decorateRoot","enumerable","decorateEnumIndex","decorateEnum","functionParams","functionName","Codegen","formatStringOrScope","verbose","console","scopeKeys","scopeParams","scopeValues","scopeOffset","Function","formatParams","formatOffset","body","functionNameOverride","xhr","readFile","contents","binary","overrideMimeType","isAbsolute","normalize","absolute","prefix","originPath","includePath","alreadyNormalized","extensions","_fieldsById","_oneofsArray","_ctor","clearCache","fieldsById","names","oneofsArray","generateConstructor","ctorProperties","oneof","nested","methods","inherited","arrayToJSON","filter","declaringField","resolveAll","setup","fromObject","wrapper","originalThis","encodeDelimited","decodeDelimited","d","target","_nestedArray","namespace","addJSON","nestedArray","nestedJson","ns","getEnum","prev","part","lookup","filterTypes","parentAlreadyChecked","found","lookupEnum","lookupTypeOrEnum","lookupService","Type_","Service_","Enum_","rule","ruleRe","required","partOf","typeDefault","defaultValue","long","extensionField","_packed","fieldId","fieldType","fieldRule","fieldName","bake","o","s","addFieldsToParent","oneofName","resolvedKeyType","fieldKeyType","fieldValueType","_methodsArray","service","methodsArray","rpcService","methodName","q","resolvedRequestType","resolvedResponseType","requestType","requestStream","responseStream","missing","rfield","invalid","expected","genVerifyValue","genVerifyKey","seenFirstField","oneofProp","genValuePartial_fromObject","isUnsigned","genValuePartial_toObject","repeatedFields","mapFields","normalFields","arrayDefault","hasKs2","type_url","lastIndexOf","deferred","files","SYNC","tryHandleExtension","extendedType","sisterField","resolvePath","cb","sync","imports","weakImports","queued","weak","idx","altname","readFileSync","exposeRe","parse_","common_","unescape","unescapeRe","unescapeMap","alternateCommentMode","illegal","subject","readString","re","stringDelim","stringSingleRe","stringDoubleRe","lastIndex","exec","setComment","commentType","commentLine","commentLineEmpty","lookback","commentOffset","lines","setCommentSplitRe","setCommentAltRe","setCommentRe","commentText","isDoubleSlashCommentLine","startOffset","endOffset","findEndOfLine","lineText","isComment","cursor","repeat","curr","isDoc","whitespaceRe","delimRe","delim","peek","actual","equals","cmnt","trailingLine","ret","0","r","insideTryCatch","tn","readValue","acceptTypeRef","parseNumber","typeRefRe","readRanges","acceptStrings","parseId","base10Re","base16Re","base8Re","numberRe","parseFloat","acceptNegative","base10NegRe","base16NegRe","base8NegRe","parsePackage","pkg","parseImport","whichImports","parseSyntax","syntax","isProto3","parseCommon","parseOption","parseType","parseEnum","parseService","parseExtension","ifBlock","fnIf","fnElse","nameRe","parseMapField","parseField","parseOneOf","parseGroup","applyCase","parseInlineOptions","valueType","parseEnumValue","dummy","isCustom","fqTypeRefRe","parseOptionValue","parseMethod","reference","keepCase","package","commonRe","google","Any","timeType","Duration","seconds","nanos","Timestamp","Empty","Struct","Value","kind","nullValue","numberValue","stringValue","boolValue","structValue","listValue","NullValue","NULL_VALUE","ListValue","DoubleValue","FloatValue","Int64Value","UInt64Value","Int32Value","UInt32Value","BoolValue","StringValue","BytesValue","FieldMask","paths","file"],"mappings":"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","file":"axios.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axios\"] = factory();\n\telse\n\t\troot[\"axios\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axios\"] = factory();\n\telse\n\t\troot[\"axios\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Google protocol buffer extension for axios\n\t *\n\t */\n\t// Dependecies\n\tvar axios = __webpack_require__(2);\n\t\n\tvar gbuffer = __webpack_require__(27);\n\t/**\n\t * Method that create request to the url with payload plain json,\n\t * that converted to Google protocol buffer, and returned Google protocol buffer to the plain json\n\t *\n\t * @param {string} url url address\n\t * @param {string} method method for request\n\t * @param {string} protoFile .proto file which describes format of buffer\n\t * @param {string} message Google protocol buffer message from .proto file\n\t * @param {object} options options like headers and etc\n\t * @returns {Promise} result of axios.get and decoding Google protocol buffer buffer to plain json\n\t */\n\t\n\t\n\taxios.requestGbuf = function (url, method, payload, protoFile, message) {\n\t  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\t  return new Promise(function (resolve, reject) {\n\t    // Check params\n\t    url = typeof url === 'string' && url.trim().length > 0 ? url : false;\n\t    method = typeof method === 'string' && method.trim().length > 0 && ['delete', 'get', 'post', 'put', 'patch'].indexOf(method > -1) ? method : false;\n\t    protoFile = typeof protoFile === 'string' && protoFile.trim().length > 0 ? protoFile : false;\n\t    message = typeof message === 'string' && message.trim().length > 0 ? message : false; // Common options to request\n\t\n\t    options.method = method;\n\t    options.url = url;\n\t    options.responseType = 'arraybuffer'; //console.log(url, method, protoFile, message);\n\t\n\t    if (url && method && protoFile && message) {\n\t      // Handler for method with no payload\n\t      if (['delete', 'get', 'head', 'options'].indexOf(method) > -1) {\n\t        axios(options) // Check response object\n\t        .then(function (response) {\n\t          return new Uint8Array(response.data, 0, response.data.length);\n\t        }).then(function (data) {\n\t          resolve(gbuffer.decode(data, protoFile, message));\n\t        }) // Error handler\n\t        .catch(function (err) {\n\t          reject(err);\n\t        });\n\t      } else {\n\t        // Handler for method (post, put, patch) with payload\n\t        gbuffer.encode(payload, protoFile, message) // Send built-in axios requst\n\t        .then(function (data) {\n\t          // Options to send data\n\t          data = typeof window === 'undefined' ? data : data.buffer.slice(0, data.length);\n\t          options.data = data;\n\t          options.headers = {\n\t            'Content-Type': 'application/octet-stream'\n\t          };\n\t          return axios(options);\n\t        }) // Check response object\n\t        .then(function (response) {\n\t          return new Uint8Array(response.data, 0, response.data.length);\n\t        }).then(function (data) {\n\t          // Return decoded from Gbuf to plain json\n\t          resolve(gbuffer.decode(data, protoFile, message));\n\t        }) // Error handler\n\t        .catch(function (err) {\n\t          reject(err);\n\t        });\n\t      }\n\t    } else {\n\t      // Reject if one of the params is invalid\n\t      reject(new Error('Function params are invalid'));\n\t    }\n\t  });\n\t};\n\t/**\n\t * Add methods that 'delete', 'get'\n\t * from ulr Google protocol buffer buffer and convert it to the plain json\n\t *\n\t * @param {*} url url address\n\t * @param {*} protoFile .proto file which describes format of buffer\n\t * @param {*} message Google protocol buffer message from .proto file\n\t * @param {object} options options like headers and etc\n\t * @returns {Promise} result of axios.get and decoding Google protocol buffer buffer to plain json\n\t */\n\t\n\t\n\taxios.getGbuf = function (url, protoFile, message) {\n\t  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t  return axios.requestGbuf(url, 'get', {}, protoFile, message, options);\n\t};\n\t\n\taxios.deleteGbuf = function (url, protoFile, message) {\n\t  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t  return axios.requestGbuf(url, 'delete', {}, protoFile, message, options);\n\t};\n\t/**\n\t * Add methods that 'post', 'put', 'patch' Google protocol buffer to ulr\n\t * and convert returned Google protocol buffer to the plain json\n\t *\n\t * @param {*} url url address\n\t * @param {*} protoFile .proto file which describes format of buffer\n\t * @param {*} message Google protocol buffer message from .proto file\n\t * @param {object} options options like headers and etc\n\t * @returns {Promise} result of axios.get and decoding Google protocol buffer to plain json\n\t */\n\t\n\t\n\taxios.postGbuf = function (url, payload, protoFile, message) {\n\t  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\t  return axios.requestGbuf(url, 'post', payload, protoFile, message, options);\n\t};\n\t\n\taxios.putGbuf = function (url, payload, protoFile, message) {\n\t  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\t  return axios.requestGbuf(url, 'put', payload, protoFile, message, options);\n\t};\n\t\n\taxios.patchGbuf = function (url, payload, protoFile, message) {\n\t  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\t  return axios.requestGbuf(url, 'patch', payload, protoFile, message, options);\n\t}; // Export the module\n\t\n\t\n\tmodule.exports = axios;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\t\n\tvar bind = __webpack_require__(4);\n\t\n\tvar Axios = __webpack_require__(6);\n\t\n\tvar mergeConfig = __webpack_require__(23);\n\t\n\tvar defaults = __webpack_require__(12);\n\t/**\n\t * Create an instance of Axios\n\t *\n\t * @param {Object} defaultConfig The default config for the instance\n\t * @return {Axios} A new instance of Axios\n\t */\n\t\n\t\n\tfunction createInstance(defaultConfig) {\n\t  var context = new Axios(defaultConfig);\n\t  var instance = bind(Axios.prototype.request, context); // Copy axios.prototype to instance\n\t\n\t  utils.extend(instance, Axios.prototype, context); // Copy context to instance\n\t\n\t  utils.extend(instance, context);\n\t  return instance;\n\t} // Create the default instance to be exported\n\t\n\t\n\tvar axios = createInstance(defaults); // Expose Axios class to allow class inheritance\n\t\n\taxios.Axios = Axios; // Factory for creating new instances\n\t\n\taxios.create = function create(instanceConfig) {\n\t  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n\t}; // Expose Cancel & CancelToken\n\t\n\t\n\taxios.Cancel = __webpack_require__(24);\n\taxios.CancelToken = __webpack_require__(25);\n\taxios.isCancel = __webpack_require__(11); // Expose all/spread\n\t\n\taxios.all = function all(promises) {\n\t  return Promise.all(promises);\n\t};\n\t\n\taxios.spread = __webpack_require__(26);\n\tmodule.exports = axios; // Allow use of default import syntax in TypeScript\n\t\n\tmodule.exports.default = axios;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\t\n\tvar bind = __webpack_require__(4);\n\t\n\tvar isBuffer = __webpack_require__(5);\n\t/*global toString:true*/\n\t// utils is a library of generic helper functions non-specific to axios\n\t\n\t\n\tvar toString = Object.prototype.toString;\n\t/**\n\t * Determine if a value is an Array\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is an Array, otherwise false\n\t */\n\t\n\tfunction isArray(val) {\n\t  return toString.call(val) === '[object Array]';\n\t}\n\t/**\n\t * Determine if a value is an ArrayBuffer\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n\t */\n\t\n\t\n\tfunction isArrayBuffer(val) {\n\t  return toString.call(val) === '[object ArrayBuffer]';\n\t}\n\t/**\n\t * Determine if a value is a FormData\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is an FormData, otherwise false\n\t */\n\t\n\t\n\tfunction isFormData(val) {\n\t  return typeof FormData !== 'undefined' && val instanceof FormData;\n\t}\n\t/**\n\t * Determine if a value is a view on an ArrayBuffer\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n\t */\n\t\n\t\n\tfunction isArrayBufferView(val) {\n\t  var result;\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n\t    result = ArrayBuffer.isView(val);\n\t  } else {\n\t    result = val && val.buffer && val.buffer instanceof ArrayBuffer;\n\t  }\n\t\n\t  return result;\n\t}\n\t/**\n\t * Determine if a value is a String\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a String, otherwise false\n\t */\n\t\n\t\n\tfunction isString(val) {\n\t  return typeof val === 'string';\n\t}\n\t/**\n\t * Determine if a value is a Number\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a Number, otherwise false\n\t */\n\t\n\t\n\tfunction isNumber(val) {\n\t  return typeof val === 'number';\n\t}\n\t/**\n\t * Determine if a value is undefined\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if the value is undefined, otherwise false\n\t */\n\t\n\t\n\tfunction isUndefined(val) {\n\t  return typeof val === 'undefined';\n\t}\n\t/**\n\t * Determine if a value is an Object\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is an Object, otherwise false\n\t */\n\t\n\t\n\tfunction isObject(val) {\n\t  return val !== null && _typeof(val) === 'object';\n\t}\n\t/**\n\t * Determine if a value is a Date\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a Date, otherwise false\n\t */\n\t\n\t\n\tfunction isDate(val) {\n\t  return toString.call(val) === '[object Date]';\n\t}\n\t/**\n\t * Determine if a value is a File\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a File, otherwise false\n\t */\n\t\n\t\n\tfunction isFile(val) {\n\t  return toString.call(val) === '[object File]';\n\t}\n\t/**\n\t * Determine if a value is a Blob\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a Blob, otherwise false\n\t */\n\t\n\t\n\tfunction isBlob(val) {\n\t  return toString.call(val) === '[object Blob]';\n\t}\n\t/**\n\t * Determine if a value is a Function\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a Function, otherwise false\n\t */\n\t\n\t\n\tfunction isFunction(val) {\n\t  return toString.call(val) === '[object Function]';\n\t}\n\t/**\n\t * Determine if a value is a Stream\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a Stream, otherwise false\n\t */\n\t\n\t\n\tfunction isStream(val) {\n\t  return isObject(val) && isFunction(val.pipe);\n\t}\n\t/**\n\t * Determine if a value is a URLSearchParams object\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n\t */\n\t\n\t\n\tfunction isURLSearchParams(val) {\n\t  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n\t}\n\t/**\n\t * Trim excess whitespace off the beginning and end of a string\n\t *\n\t * @param {String} str The String to trim\n\t * @returns {String} The String freed of excess whitespace\n\t */\n\t\n\t\n\tfunction trim(str) {\n\t  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n\t}\n\t/**\n\t * Determine if we're running in a standard browser environment\n\t *\n\t * This allows axios to run in a web worker, and react-native.\n\t * Both environments support XMLHttpRequest, but not fully standard globals.\n\t *\n\t * web workers:\n\t *  typeof window -> undefined\n\t *  typeof document -> undefined\n\t *\n\t * react-native:\n\t *  navigator.product -> 'ReactNative'\n\t * nativescript\n\t *  navigator.product -> 'NativeScript' or 'NS'\n\t */\n\t\n\t\n\tfunction isStandardBrowserEnv() {\n\t  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' || navigator.product === 'NativeScript' || navigator.product === 'NS')) {\n\t    return false;\n\t  }\n\t\n\t  return typeof window !== 'undefined' && typeof document !== 'undefined';\n\t}\n\t/**\n\t * Iterate over an Array or an Object invoking a function for each item.\n\t *\n\t * If `obj` is an Array callback will be called passing\n\t * the value, index, and complete array for each item.\n\t *\n\t * If 'obj' is an Object callback will be called passing\n\t * the value, key, and complete object for each property.\n\t *\n\t * @param {Object|Array} obj The object to iterate\n\t * @param {Function} fn The callback to invoke for each item\n\t */\n\t\n\t\n\tfunction forEach(obj, fn) {\n\t  // Don't bother if no value provided\n\t  if (obj === null || typeof obj === 'undefined') {\n\t    return;\n\t  } // Force an array if not already something iterable\n\t\n\t\n\t  if (_typeof(obj) !== 'object') {\n\t    /*eslint no-param-reassign:0*/\n\t    obj = [obj];\n\t  }\n\t\n\t  if (isArray(obj)) {\n\t    // Iterate over array values\n\t    for (var i = 0, l = obj.length; i < l; i++) {\n\t      fn.call(null, obj[i], i, obj);\n\t    }\n\t  } else {\n\t    // Iterate over object keys\n\t    for (var key in obj) {\n\t      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t        fn.call(null, obj[key], key, obj);\n\t      }\n\t    }\n\t  }\n\t}\n\t/**\n\t * Accepts varargs expecting each argument to be an object, then\n\t * immutably merges the properties of each object and returns result.\n\t *\n\t * When multiple objects contain the same key the later object in\n\t * the arguments list will take precedence.\n\t *\n\t * Example:\n\t *\n\t * ```js\n\t * var result = merge({foo: 123}, {foo: 456});\n\t * console.log(result.foo); // outputs 456\n\t * ```\n\t *\n\t * @param {Object} obj1 Object to merge\n\t * @returns {Object} Result of all merge properties\n\t */\n\t\n\t\n\tfunction merge()\n\t/* obj1, obj2, obj3, ... */\n\t{\n\t  var result = {};\n\t\n\t  function assignValue(val, key) {\n\t    if (_typeof(result[key]) === 'object' && _typeof(val) === 'object') {\n\t      result[key] = merge(result[key], val);\n\t    } else {\n\t      result[key] = val;\n\t    }\n\t  }\n\t\n\t  for (var i = 0, l = arguments.length; i < l; i++) {\n\t    forEach(arguments[i], assignValue);\n\t  }\n\t\n\t  return result;\n\t}\n\t/**\n\t * Function equal to merge with the difference being that no reference\n\t * to original objects is kept.\n\t *\n\t * @see merge\n\t * @param {Object} obj1 Object to merge\n\t * @returns {Object} Result of all merge properties\n\t */\n\t\n\t\n\tfunction deepMerge()\n\t/* obj1, obj2, obj3, ... */\n\t{\n\t  var result = {};\n\t\n\t  function assignValue(val, key) {\n\t    if (_typeof(result[key]) === 'object' && _typeof(val) === 'object') {\n\t      result[key] = deepMerge(result[key], val);\n\t    } else if (_typeof(val) === 'object') {\n\t      result[key] = deepMerge({}, val);\n\t    } else {\n\t      result[key] = val;\n\t    }\n\t  }\n\t\n\t  for (var i = 0, l = arguments.length; i < l; i++) {\n\t    forEach(arguments[i], assignValue);\n\t  }\n\t\n\t  return result;\n\t}\n\t/**\n\t * Extends object a by mutably adding to it the properties of object b.\n\t *\n\t * @param {Object} a The object to be extended\n\t * @param {Object} b The object to copy properties from\n\t * @param {Object} thisArg The object to bind function to\n\t * @return {Object} The resulting value of object a\n\t */\n\t\n\t\n\tfunction extend(a, b, thisArg) {\n\t  forEach(b, function assignValue(val, key) {\n\t    if (thisArg && typeof val === 'function') {\n\t      a[key] = bind(val, thisArg);\n\t    } else {\n\t      a[key] = val;\n\t    }\n\t  });\n\t  return a;\n\t}\n\t\n\tmodule.exports = {\n\t  isArray: isArray,\n\t  isArrayBuffer: isArrayBuffer,\n\t  isBuffer: isBuffer,\n\t  isFormData: isFormData,\n\t  isArrayBufferView: isArrayBufferView,\n\t  isString: isString,\n\t  isNumber: isNumber,\n\t  isObject: isObject,\n\t  isUndefined: isUndefined,\n\t  isDate: isDate,\n\t  isFile: isFile,\n\t  isBlob: isBlob,\n\t  isFunction: isFunction,\n\t  isStream: isStream,\n\t  isURLSearchParams: isURLSearchParams,\n\t  isStandardBrowserEnv: isStandardBrowserEnv,\n\t  forEach: forEach,\n\t  merge: merge,\n\t  deepMerge: deepMerge,\n\t  extend: extend,\n\t  trim: trim\n\t};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function bind(fn, thisArg) {\n\t  return function wrap() {\n\t    var args = new Array(arguments.length);\n\t\n\t    for (var i = 0; i < args.length; i++) {\n\t      args[i] = arguments[i];\n\t    }\n\t\n\t    return fn.apply(thisArg, args);\n\t  };\n\t};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t/*!\n\t * Determine if an object is a Buffer\n\t *\n\t * @author   Feross Aboukhadijeh <https://feross.org>\n\t * @license  MIT\n\t */\n\tmodule.exports = function isBuffer(obj) {\n\t  return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n\t};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\t\n\tvar buildURL = __webpack_require__(7);\n\t\n\tvar InterceptorManager = __webpack_require__(8);\n\t\n\tvar dispatchRequest = __webpack_require__(9);\n\t\n\tvar mergeConfig = __webpack_require__(23);\n\t/**\n\t * Create a new instance of Axios\n\t *\n\t * @param {Object} instanceConfig The default config for the instance\n\t */\n\t\n\t\n\tfunction Axios(instanceConfig) {\n\t  this.defaults = instanceConfig;\n\t  this.interceptors = {\n\t    request: new InterceptorManager(),\n\t    response: new InterceptorManager()\n\t  };\n\t}\n\t/**\n\t * Dispatch a request\n\t *\n\t * @param {Object} config The config specific for this request (merged with this.defaults)\n\t */\n\t\n\t\n\tAxios.prototype.request = function request(config) {\n\t  /*eslint no-param-reassign:0*/\n\t  // Allow for axios('example/url'[, config]) a la fetch API\n\t  if (typeof config === 'string') {\n\t    config = arguments[1] || {};\n\t    config.url = arguments[0];\n\t  } else {\n\t    config = config || {};\n\t  }\n\t\n\t  config = mergeConfig(this.defaults, config);\n\t  config.method = config.method ? config.method.toLowerCase() : 'get'; // Hook up interceptors middleware\n\t\n\t  var chain = [dispatchRequest, undefined];\n\t  var promise = Promise.resolve(config);\n\t  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n\t    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n\t  });\n\t  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n\t    chain.push(interceptor.fulfilled, interceptor.rejected);\n\t  });\n\t\n\t  while (chain.length) {\n\t    promise = promise.then(chain.shift(), chain.shift());\n\t  }\n\t\n\t  return promise;\n\t};\n\t\n\tAxios.prototype.getUri = function getUri(config) {\n\t  config = mergeConfig(this.defaults, config);\n\t  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n\t}; // Provide aliases for supported request methods\n\t\n\t\n\tutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n\t  /*eslint func-names:0*/\n\t  Axios.prototype[method] = function (url, config) {\n\t    return this.request(utils.merge(config || {}, {\n\t      method: method,\n\t      url: url\n\t    }));\n\t  };\n\t});\n\tutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n\t  /*eslint func-names:0*/\n\t  Axios.prototype[method] = function (url, data, config) {\n\t    return this.request(utils.merge(config || {}, {\n\t      method: method,\n\t      url: url,\n\t      data: data\n\t    }));\n\t  };\n\t});\n\tmodule.exports = Axios;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\t\n\tfunction encode(val) {\n\t  return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n\t}\n\t/**\n\t * Build a URL by appending params to the end\n\t *\n\t * @param {string} url The base of the url (e.g., http://www.google.com)\n\t * @param {object} [params] The params to be appended\n\t * @returns {string} The formatted url\n\t */\n\t\n\t\n\tmodule.exports = function buildURL(url, params, paramsSerializer) {\n\t  /*eslint no-param-reassign:0*/\n\t  if (!params) {\n\t    return url;\n\t  }\n\t\n\t  var serializedParams;\n\t\n\t  if (paramsSerializer) {\n\t    serializedParams = paramsSerializer(params);\n\t  } else if (utils.isURLSearchParams(params)) {\n\t    serializedParams = params.toString();\n\t  } else {\n\t    var parts = [];\n\t    utils.forEach(params, function serialize(val, key) {\n\t      if (val === null || typeof val === 'undefined') {\n\t        return;\n\t      }\n\t\n\t      if (utils.isArray(val)) {\n\t        key = key + '[]';\n\t      } else {\n\t        val = [val];\n\t      }\n\t\n\t      utils.forEach(val, function parseValue(v) {\n\t        if (utils.isDate(v)) {\n\t          v = v.toISOString();\n\t        } else if (utils.isObject(v)) {\n\t          v = JSON.stringify(v);\n\t        }\n\t\n\t        parts.push(encode(key) + '=' + encode(v));\n\t      });\n\t    });\n\t    serializedParams = parts.join('&');\n\t  }\n\t\n\t  if (serializedParams) {\n\t    var hashmarkIndex = url.indexOf('#');\n\t\n\t    if (hashmarkIndex !== -1) {\n\t      url = url.slice(0, hashmarkIndex);\n\t    }\n\t\n\t    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n\t  }\n\t\n\t  return url;\n\t};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\t\n\tfunction InterceptorManager() {\n\t  this.handlers = [];\n\t}\n\t/**\n\t * Add a new interceptor to the stack\n\t *\n\t * @param {Function} fulfilled The function to handle `then` for a `Promise`\n\t * @param {Function} rejected The function to handle `reject` for a `Promise`\n\t *\n\t * @return {Number} An ID used to remove interceptor later\n\t */\n\t\n\t\n\tInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n\t  this.handlers.push({\n\t    fulfilled: fulfilled,\n\t    rejected: rejected\n\t  });\n\t  return this.handlers.length - 1;\n\t};\n\t/**\n\t * Remove an interceptor from the stack\n\t *\n\t * @param {Number} id The ID that was returned by `use`\n\t */\n\t\n\t\n\tInterceptorManager.prototype.eject = function eject(id) {\n\t  if (this.handlers[id]) {\n\t    this.handlers[id] = null;\n\t  }\n\t};\n\t/**\n\t * Iterate over all the registered interceptors\n\t *\n\t * This method is particularly useful for skipping over any\n\t * interceptors that may have become `null` calling `eject`.\n\t *\n\t * @param {Function} fn The function to call for each interceptor\n\t */\n\t\n\t\n\tInterceptorManager.prototype.forEach = function forEach(fn) {\n\t  utils.forEach(this.handlers, function forEachHandler(h) {\n\t    if (h !== null) {\n\t      fn(h);\n\t    }\n\t  });\n\t};\n\t\n\tmodule.exports = InterceptorManager;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\t\n\tvar transformData = __webpack_require__(10);\n\t\n\tvar isCancel = __webpack_require__(11);\n\t\n\tvar defaults = __webpack_require__(12);\n\t\n\tvar isAbsoluteURL = __webpack_require__(21);\n\t\n\tvar combineURLs = __webpack_require__(22);\n\t/**\n\t * Throws a `Cancel` if cancellation has been requested.\n\t */\n\t\n\t\n\tfunction throwIfCancellationRequested(config) {\n\t  if (config.cancelToken) {\n\t    config.cancelToken.throwIfRequested();\n\t  }\n\t}\n\t/**\n\t * Dispatch a request to the server using the configured adapter.\n\t *\n\t * @param {object} config The config that is to be used for the request\n\t * @returns {Promise} The Promise to be fulfilled\n\t */\n\t\n\t\n\tmodule.exports = function dispatchRequest(config) {\n\t  throwIfCancellationRequested(config); // Support baseURL config\n\t\n\t  if (config.baseURL && !isAbsoluteURL(config.url)) {\n\t    config.url = combineURLs(config.baseURL, config.url);\n\t  } // Ensure headers exist\n\t\n\t\n\t  config.headers = config.headers || {}; // Transform request data\n\t\n\t  config.data = transformData(config.data, config.headers, config.transformRequest); // Flatten headers\n\t\n\t  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});\n\t  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {\n\t    delete config.headers[method];\n\t  });\n\t  var adapter = config.adapter || defaults.adapter;\n\t  return adapter(config).then(function onAdapterResolution(response) {\n\t    throwIfCancellationRequested(config); // Transform response data\n\t\n\t    response.data = transformData(response.data, response.headers, config.transformResponse);\n\t    return response;\n\t  }, function onAdapterRejection(reason) {\n\t    if (!isCancel(reason)) {\n\t      throwIfCancellationRequested(config); // Transform response data\n\t\n\t      if (reason && reason.response) {\n\t        reason.response.data = transformData(reason.response.data, reason.response.headers, config.transformResponse);\n\t      }\n\t    }\n\t\n\t    return Promise.reject(reason);\n\t  });\n\t};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\t/**\n\t * Transform the data for a request or a response\n\t *\n\t * @param {Object|String} data The data to be transformed\n\t * @param {Array} headers The headers for the request or response\n\t * @param {Array|Function} fns A single function or Array of functions\n\t * @returns {*} The resulting transformed data\n\t */\n\t\n\t\n\tmodule.exports = function transformData(data, headers, fns) {\n\t  /*eslint no-param-reassign:0*/\n\t  utils.forEach(fns, function transform(fn) {\n\t    data = fn(data, headers);\n\t  });\n\t  return data;\n\t};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function isCancel(value) {\n\t  return !!(value && value.__CANCEL__);\n\t};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\t\n\tvar normalizeHeaderName = __webpack_require__(13);\n\t\n\tvar DEFAULT_CONTENT_TYPE = {\n\t  'Content-Type': 'application/x-www-form-urlencoded'\n\t};\n\t\n\tfunction setContentTypeIfUnset(headers, value) {\n\t  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n\t    headers['Content-Type'] = value;\n\t  }\n\t}\n\t\n\tfunction getDefaultAdapter() {\n\t  var adapter; // Only Node.JS has a process variable that is of [[Class]] process\n\t\n\t  if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n\t    // For node use HTTP adapter\n\t    adapter = __webpack_require__(14);\n\t  } else if (typeof XMLHttpRequest !== 'undefined') {\n\t    // For browsers use XHR adapter\n\t    adapter = __webpack_require__(14);\n\t  }\n\t\n\t  return adapter;\n\t}\n\t\n\tvar defaults = {\n\t  adapter: getDefaultAdapter(),\n\t  transformRequest: [function transformRequest(data, headers) {\n\t    normalizeHeaderName(headers, 'Accept');\n\t    normalizeHeaderName(headers, 'Content-Type');\n\t\n\t    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {\n\t      return data;\n\t    }\n\t\n\t    if (utils.isArrayBufferView(data)) {\n\t      return data.buffer;\n\t    }\n\t\n\t    if (utils.isURLSearchParams(data)) {\n\t      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n\t      return data.toString();\n\t    }\n\t\n\t    if (utils.isObject(data)) {\n\t      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n\t      return JSON.stringify(data);\n\t    }\n\t\n\t    return data;\n\t  }],\n\t  transformResponse: [function transformResponse(data) {\n\t    /*eslint no-param-reassign:0*/\n\t    if (typeof data === 'string') {\n\t      try {\n\t        data = JSON.parse(data);\n\t      } catch (e) {\n\t        /* Ignore */\n\t      }\n\t    }\n\t\n\t    return data;\n\t  }],\n\t\n\t  /**\n\t   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n\t   * timeout is not created.\n\t   */\n\t  timeout: 0,\n\t  xsrfCookieName: 'XSRF-TOKEN',\n\t  xsrfHeaderName: 'X-XSRF-TOKEN',\n\t  maxContentLength: -1,\n\t  validateStatus: function validateStatus(status) {\n\t    return status >= 200 && status < 300;\n\t  }\n\t};\n\tdefaults.headers = {\n\t  common: {\n\t    'Accept': 'application/json, text/plain, */*'\n\t  }\n\t};\n\tutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n\t  defaults.headers[method] = {};\n\t});\n\tutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n\t  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n\t});\n\tmodule.exports = defaults;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\t\n\tmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n\t  utils.forEach(headers, function processHeader(value, name) {\n\t    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n\t      headers[normalizedName] = value;\n\t      delete headers[name];\n\t    }\n\t  });\n\t};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\t\n\tvar settle = __webpack_require__(15);\n\t\n\tvar buildURL = __webpack_require__(7);\n\t\n\tvar parseHeaders = __webpack_require__(18);\n\t\n\tvar isURLSameOrigin = __webpack_require__(19);\n\t\n\tvar createError = __webpack_require__(16);\n\t\n\tmodule.exports = function xhrAdapter(config) {\n\t  return new Promise(function dispatchXhrRequest(resolve, reject) {\n\t    var requestData = config.data;\n\t    var requestHeaders = config.headers;\n\t\n\t    if (utils.isFormData(requestData)) {\n\t      delete requestHeaders['Content-Type']; // Let the browser set it\n\t    }\n\t\n\t    var request = new XMLHttpRequest(); // HTTP basic authentication\n\t\n\t    if (config.auth) {\n\t      var username = config.auth.username || '';\n\t      var password = config.auth.password || '';\n\t      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n\t    }\n\t\n\t    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true); // Set the request timeout in MS\n\t\n\t    request.timeout = config.timeout; // Listen for ready state\n\t\n\t    request.onreadystatechange = function handleLoad() {\n\t      if (!request || request.readyState !== 4) {\n\t        return;\n\t      } // The request errored out and we didn't get a response, this will be\n\t      // handled by onerror instead\n\t      // With one exception: request that using file: protocol, most browsers\n\t      // will return status as 0 even though it's a successful request\n\t\n\t\n\t      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n\t        return;\n\t      } // Prepare the response\n\t\n\t\n\t      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n\t      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n\t      var response = {\n\t        data: responseData,\n\t        status: request.status,\n\t        statusText: request.statusText,\n\t        headers: responseHeaders,\n\t        config: config,\n\t        request: request\n\t      };\n\t      settle(resolve, reject, response); // Clean up request\n\t\n\t      request = null;\n\t    }; // Handle browser request cancellation (as opposed to a manual cancellation)\n\t\n\t\n\t    request.onabort = function handleAbort() {\n\t      if (!request) {\n\t        return;\n\t      }\n\t\n\t      reject(createError('Request aborted', config, 'ECONNABORTED', request)); // Clean up request\n\t\n\t      request = null;\n\t    }; // Handle low level network errors\n\t\n\t\n\t    request.onerror = function handleError() {\n\t      // Real errors are hidden from us by the browser\n\t      // onerror should only fire if it's a network error\n\t      reject(createError('Network Error', config, null, request)); // Clean up request\n\t\n\t      request = null;\n\t    }; // Handle timeout\n\t\n\t\n\t    request.ontimeout = function handleTimeout() {\n\t      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', request)); // Clean up request\n\t\n\t      request = null;\n\t    }; // Add xsrf header\n\t    // This is only done if running in a standard browser environment.\n\t    // Specifically not if we're in a web worker, or react-native.\n\t\n\t\n\t    if (utils.isStandardBrowserEnv()) {\n\t      var cookies = __webpack_require__(20); // Add xsrf header\n\t\n\t\n\t      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n\t\n\t      if (xsrfValue) {\n\t        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n\t      }\n\t    } // Add headers to the request\n\t\n\t\n\t    if ('setRequestHeader' in request) {\n\t      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n\t        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n\t          // Remove Content-Type if data is undefined\n\t          delete requestHeaders[key];\n\t        } else {\n\t          // Otherwise add header to the request\n\t          request.setRequestHeader(key, val);\n\t        }\n\t      });\n\t    } // Add withCredentials to request if needed\n\t\n\t\n\t    if (config.withCredentials) {\n\t      request.withCredentials = true;\n\t    } // Add responseType to request if needed\n\t\n\t\n\t    if (config.responseType) {\n\t      try {\n\t        request.responseType = config.responseType;\n\t      } catch (e) {\n\t        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n\t        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n\t        if (config.responseType !== 'json') {\n\t          throw e;\n\t        }\n\t      }\n\t    } // Handle progress if needed\n\t\n\t\n\t    if (typeof config.onDownloadProgress === 'function') {\n\t      request.addEventListener('progress', config.onDownloadProgress);\n\t    } // Not all browsers support upload events\n\t\n\t\n\t    if (typeof config.onUploadProgress === 'function' && request.upload) {\n\t      request.upload.addEventListener('progress', config.onUploadProgress);\n\t    }\n\t\n\t    if (config.cancelToken) {\n\t      // Handle cancellation\n\t      config.cancelToken.promise.then(function onCanceled(cancel) {\n\t        if (!request) {\n\t          return;\n\t        }\n\t\n\t        request.abort();\n\t        reject(cancel); // Clean up request\n\t\n\t        request = null;\n\t      });\n\t    }\n\t\n\t    if (requestData === undefined) {\n\t      requestData = null;\n\t    } // Send the request\n\t\n\t\n\t    request.send(requestData);\n\t  });\n\t};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar createError = __webpack_require__(16);\n\t/**\n\t * Resolve or reject a Promise based on response status.\n\t *\n\t * @param {Function} resolve A function that resolves the promise.\n\t * @param {Function} reject A function that rejects the promise.\n\t * @param {object} response The response.\n\t */\n\t\n\t\n\tmodule.exports = function settle(resolve, reject, response) {\n\t  var validateStatus = response.config.validateStatus;\n\t\n\t  if (!validateStatus || validateStatus(response.status)) {\n\t    resolve(response);\n\t  } else {\n\t    reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));\n\t  }\n\t};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar enhanceError = __webpack_require__(17);\n\t/**\n\t * Create an Error with the specified message, config, error code, request and response.\n\t *\n\t * @param {string} message The error message.\n\t * @param {Object} config The config.\n\t * @param {string} [code] The error code (for example, 'ECONNABORTED').\n\t * @param {Object} [request] The request.\n\t * @param {Object} [response] The response.\n\t * @returns {Error} The created error.\n\t */\n\t\n\t\n\tmodule.exports = function createError(message, config, code, request, response) {\n\t  var error = new Error(message);\n\t  return enhanceError(error, config, code, request, response);\n\t};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * Update an Error with the specified config, error code, and response.\n\t *\n\t * @param {Error} error The error to update.\n\t * @param {Object} config The config.\n\t * @param {string} [code] The error code (for example, 'ECONNABORTED').\n\t * @param {Object} [request] The request.\n\t * @param {Object} [response] The response.\n\t * @returns {Error} The error.\n\t */\n\t\n\tmodule.exports = function enhanceError(error, config, code, request, response) {\n\t  error.config = config;\n\t\n\t  if (code) {\n\t    error.code = code;\n\t  }\n\t\n\t  error.request = request;\n\t  error.response = response;\n\t  error.isAxiosError = true;\n\t\n\t  error.toJSON = function () {\n\t    return {\n\t      // Standard\n\t      message: this.message,\n\t      name: this.name,\n\t      // Microsoft\n\t      description: this.description,\n\t      number: this.number,\n\t      // Mozilla\n\t      fileName: this.fileName,\n\t      lineNumber: this.lineNumber,\n\t      columnNumber: this.columnNumber,\n\t      stack: this.stack,\n\t      // Axios\n\t      config: this.config,\n\t      code: this.code\n\t    };\n\t  };\n\t\n\t  return error;\n\t};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3); // Headers whose duplicates are ignored by node\n\t// c.f. https://nodejs.org/api/http.html#http_message_headers\n\t\n\t\n\tvar ignoreDuplicateOf = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];\n\t/**\n\t * Parse headers into an object\n\t *\n\t * ```\n\t * Date: Wed, 27 Aug 2014 08:58:49 GMT\n\t * Content-Type: application/json\n\t * Connection: keep-alive\n\t * Transfer-Encoding: chunked\n\t * ```\n\t *\n\t * @param {String} headers Headers needing to be parsed\n\t * @returns {Object} Headers parsed into an object\n\t */\n\t\n\tmodule.exports = function parseHeaders(headers) {\n\t  var parsed = {};\n\t  var key;\n\t  var val;\n\t  var i;\n\t\n\t  if (!headers) {\n\t    return parsed;\n\t  }\n\t\n\t  utils.forEach(headers.split('\\n'), function parser(line) {\n\t    i = line.indexOf(':');\n\t    key = utils.trim(line.substr(0, i)).toLowerCase();\n\t    val = utils.trim(line.substr(i + 1));\n\t\n\t    if (key) {\n\t      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n\t        return;\n\t      }\n\t\n\t      if (key === 'set-cookie') {\n\t        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n\t      } else {\n\t        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n\t      }\n\t    }\n\t  });\n\t  return parsed;\n\t};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\t\n\tmodule.exports = utils.isStandardBrowserEnv() ? // Standard browser envs have full support of the APIs needed to test\n\t// whether the request URL is of the same origin as current location.\n\tfunction standardBrowserEnv() {\n\t  var msie = /(msie|trident)/i.test(navigator.userAgent);\n\t  var urlParsingNode = document.createElement('a');\n\t  var originURL;\n\t  /**\n\t  * Parse a URL to discover it's components\n\t  *\n\t  * @param {String} url The URL to be parsed\n\t  * @returns {Object}\n\t  */\n\t\n\t  function resolveURL(url) {\n\t    var href = url;\n\t\n\t    if (msie) {\n\t      // IE needs attribute set twice to normalize properties\n\t      urlParsingNode.setAttribute('href', href);\n\t      href = urlParsingNode.href;\n\t    }\n\t\n\t    urlParsingNode.setAttribute('href', href); // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n\t\n\t    return {\n\t      href: urlParsingNode.href,\n\t      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n\t      host: urlParsingNode.host,\n\t      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n\t      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n\t      hostname: urlParsingNode.hostname,\n\t      port: urlParsingNode.port,\n\t      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\n\t    };\n\t  }\n\t\n\t  originURL = resolveURL(window.location.href);\n\t  /**\n\t  * Determine if a URL shares the same origin as the current location\n\t  *\n\t  * @param {String} requestURL The URL to test\n\t  * @returns {boolean} True if URL shares the same origin, otherwise false\n\t  */\n\t\n\t  return function isURLSameOrigin(requestURL) {\n\t    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;\n\t    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\n\t  };\n\t}() : // Non standard browser envs (web workers, react-native) lack needed support.\n\tfunction nonStandardBrowserEnv() {\n\t  return function isURLSameOrigin() {\n\t    return true;\n\t  };\n\t}();\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\t\n\tmodule.exports = utils.isStandardBrowserEnv() ? // Standard browser envs support document.cookie\n\tfunction standardBrowserEnv() {\n\t  return {\n\t    write: function write(name, value, expires, path, domain, secure) {\n\t      var cookie = [];\n\t      cookie.push(name + '=' + encodeURIComponent(value));\n\t\n\t      if (utils.isNumber(expires)) {\n\t        cookie.push('expires=' + new Date(expires).toGMTString());\n\t      }\n\t\n\t      if (utils.isString(path)) {\n\t        cookie.push('path=' + path);\n\t      }\n\t\n\t      if (utils.isString(domain)) {\n\t        cookie.push('domain=' + domain);\n\t      }\n\t\n\t      if (secure === true) {\n\t        cookie.push('secure');\n\t      }\n\t\n\t      document.cookie = cookie.join('; ');\n\t    },\n\t    read: function read(name) {\n\t      var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n\t      return match ? decodeURIComponent(match[3]) : null;\n\t    },\n\t    remove: function remove(name) {\n\t      this.write(name, '', Date.now() - 86400000);\n\t    }\n\t  };\n\t}() : // Non standard browser env (web workers, react-native) lack needed support.\n\tfunction nonStandardBrowserEnv() {\n\t  return {\n\t    write: function write() {},\n\t    read: function read() {\n\t      return null;\n\t    },\n\t    remove: function remove() {}\n\t  };\n\t}();\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * Determines whether the specified URL is absolute\n\t *\n\t * @param {string} url The URL to test\n\t * @returns {boolean} True if the specified URL is absolute, otherwise false\n\t */\n\t\n\tmodule.exports = function isAbsoluteURL(url) {\n\t  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n\t  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n\t  // by any combination of letters, digits, plus, period, or hyphen.\n\t  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n\t};\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * Creates a new URL by combining the specified URLs\n\t *\n\t * @param {string} baseURL The base URL\n\t * @param {string} relativeURL The relative URL\n\t * @returns {string} The combined URL\n\t */\n\t\n\tmodule.exports = function combineURLs(baseURL, relativeURL) {\n\t  return relativeURL ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '') : baseURL;\n\t};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\t/**\n\t * Config-specific merge-function which creates a new config-object\n\t * by merging two configuration objects together.\n\t *\n\t * @param {Object} config1\n\t * @param {Object} config2\n\t * @returns {Object} New object resulting from merging config2 to config1\n\t */\n\t\n\t\n\tmodule.exports = function mergeConfig(config1, config2) {\n\t  // eslint-disable-next-line no-param-reassign\n\t  config2 = config2 || {};\n\t  var config = {};\n\t  utils.forEach(['url', 'method', 'params', 'data'], function valueFromConfig2(prop) {\n\t    if (typeof config2[prop] !== 'undefined') {\n\t      config[prop] = config2[prop];\n\t    }\n\t  });\n\t  utils.forEach(['headers', 'auth', 'proxy'], function mergeDeepProperties(prop) {\n\t    if (utils.isObject(config2[prop])) {\n\t      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n\t    } else if (typeof config2[prop] !== 'undefined') {\n\t      config[prop] = config2[prop];\n\t    } else if (utils.isObject(config1[prop])) {\n\t      config[prop] = utils.deepMerge(config1[prop]);\n\t    } else if (typeof config1[prop] !== 'undefined') {\n\t      config[prop] = config1[prop];\n\t    }\n\t  });\n\t  utils.forEach(['baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer', 'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName', 'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken', 'socketPath'], function defaultToConfig2(prop) {\n\t    if (typeof config2[prop] !== 'undefined') {\n\t      config[prop] = config2[prop];\n\t    } else if (typeof config1[prop] !== 'undefined') {\n\t      config[prop] = config1[prop];\n\t    }\n\t  });\n\t  return config;\n\t};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * A `Cancel` is an object that is thrown when an operation is canceled.\n\t *\n\t * @class\n\t * @param {string=} message The message.\n\t */\n\t\n\tfunction Cancel(message) {\n\t  this.message = message;\n\t}\n\t\n\tCancel.prototype.toString = function toString() {\n\t  return 'Cancel' + (this.message ? ': ' + this.message : '');\n\t};\n\t\n\tCancel.prototype.__CANCEL__ = true;\n\tmodule.exports = Cancel;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Cancel = __webpack_require__(24);\n\t/**\n\t * A `CancelToken` is an object that can be used to request cancellation of an operation.\n\t *\n\t * @class\n\t * @param {Function} executor The executor function.\n\t */\n\t\n\t\n\tfunction CancelToken(executor) {\n\t  if (typeof executor !== 'function') {\n\t    throw new TypeError('executor must be a function.');\n\t  }\n\t\n\t  var resolvePromise;\n\t  this.promise = new Promise(function promiseExecutor(resolve) {\n\t    resolvePromise = resolve;\n\t  });\n\t  var token = this;\n\t  executor(function cancel(message) {\n\t    if (token.reason) {\n\t      // Cancellation has already been requested\n\t      return;\n\t    }\n\t\n\t    token.reason = new Cancel(message);\n\t    resolvePromise(token.reason);\n\t  });\n\t}\n\t/**\n\t * Throws a `Cancel` if cancellation has been requested.\n\t */\n\t\n\t\n\tCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n\t  if (this.reason) {\n\t    throw this.reason;\n\t  }\n\t};\n\t/**\n\t * Returns an object that contains a new `CancelToken` and a function that, when called,\n\t * cancels the `CancelToken`.\n\t */\n\t\n\t\n\tCancelToken.source = function source() {\n\t  var cancel;\n\t  var token = new CancelToken(function executor(c) {\n\t    cancel = c;\n\t  });\n\t  return {\n\t    token: token,\n\t    cancel: cancel\n\t  };\n\t};\n\t\n\tmodule.exports = CancelToken;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * Syntactic sugar for invoking a function and expanding an array for arguments.\n\t *\n\t * Common use case would be to use `Function.prototype.apply`.\n\t *\n\t *  ```js\n\t *  function f(x, y, z) {}\n\t *  var args = [1, 2, 3];\n\t *  f.apply(null, args);\n\t *  ```\n\t *\n\t * With `spread` this example can be re-written.\n\t *\n\t *  ```js\n\t *  spread(function(x, y, z) {})([1, 2, 3]);\n\t *  ```\n\t *\n\t * @param {Function} callback\n\t * @returns {Function}\n\t */\n\t\n\tmodule.exports = function spread(callback) {\n\t  return function wrap(arr) {\n\t    return callback.apply(null, arr);\n\t  };\n\t};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Helpers for encode/decode plain json to/from grpc buffer\n\t *\n\t */\n\t// Dependencies\n\tvar protobuf = __webpack_require__(28); // Container\n\t\n\t\n\tvar gbuffer = {};\n\t/**\n\t * Encode plain object to grpc buffer\n\t *\n\t * @param {String} payload json string to convert to grpc format\n\t * @param {String} protoFile protoFile.proto contains file in proto3 syntax\n\t * @param {String} message message that is described int proto file\n\t * @returns Promise\n\t *\n\t */\n\t\n\tgbuffer.encode = function (payload, protoFile, message) {\n\t  return new Promise(function (resolve, reject) {\n\t    // Check the protoFile\n\t    if (protoFile || protoFile.length === 0) {\n\t      // Load protoFile\n\t      protobuf.load(protoFile, function (err, root) {\n\t        if (err) {\n\t          reject(new Error(err));\n\t        } // Obtain a message type\n\t\n\t\n\t        var ProtoMessage = root.lookupType(message); // Verify the payload\n\t\n\t        var errMsg = ProtoMessage.verify(payload);\n\t\n\t        if (errMsg) {\n\t          reject(new Error(errMsg));\n\t        } // Encode a message\n\t\n\t\n\t        var buffer = ProtoMessage.encode(ProtoMessage.create(payload)).finish();\n\t        resolve(buffer);\n\t      });\n\t    } else {\n\t      // Return error\n\t      reject(new Error('There is not any protoFile'));\n\t    }\n\t  });\n\t};\n\t/**\n\t * Decode the grpc buffer to plain object\n\t *\n\t * @param {String} payload json string to convert to grpc format\n\t * @param {String} protoFile protoFile.proto contains file in proto3 syntax\n\t * @param {String} message message that is described int proto file\n\t * @returns Promise\n\t *\n\t */\n\t\n\t\n\tgbuffer.decode = function (payload, protoFile, message) {\n\t  return new Promise(function (resolve, reject) {\n\t    // Check the protoFile\n\t    if (protoFile || protoFile.length === 0) {\n\t      // Load protoFile\n\t      protobuf.load(protoFile, function (err, root) {\n\t        if (err) {\n\t          reject(new Error(err));\n\t        } // Obtain a message type\n\t\n\t\n\t        var ProtoMessage = root.lookupType(message); // Decode a message\n\t\n\t        var buffer = ProtoMessage.decode(payload); // Convert buffer to plain object\n\t\n\t        var object = ProtoMessage.toObject(buffer, {\n\t          enums: String,\n\t          // enums as string names\n\t          longs: String,\n\t          // longs as strings (requires long.js)\n\t          bytes: String,\n\t          // bytes as base64 encoded strings\n\t          defaults: true,\n\t          // includes default values\n\t          arrays: true,\n\t          // populates empty arrays (repeated fields) even if defaults=false\n\t          objects: true,\n\t          // populates empty objects (map fields) even if defaults=false\n\t          oneofs: true // includes virtual oneof fields set to the present field's name\n\t\n\t        });\n\t        resolve(object);\n\t      });\n\t    } else {\n\t      // Return error\n\t      reject(new Error('There is not any protoFile'));\n\t    }\n\t  });\n\t}; // Export the module\n\t\n\t\n\tmodule.exports = gbuffer;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// full library entry point.\n\t\"use strict\";\n\t\n\tmodule.exports = __webpack_require__(29);\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar protobuf = module.exports = __webpack_require__(30);\n\t\n\tprotobuf.build = \"full\"; // Parser\n\t\n\tprotobuf.tokenize = __webpack_require__(69);\n\tprotobuf.parse = __webpack_require__(70);\n\tprotobuf.common = __webpack_require__(71); // Configure parser\n\t\n\tprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar protobuf = module.exports = __webpack_require__(31);\n\t\n\tprotobuf.build = \"light\";\n\t/**\r\n\t * A node-style callback as used by {@link load} and {@link Root#load}.\r\n\t * @typedef LoadCallback\r\n\t * @type {function}\r\n\t * @param {Error|null} error Error, if any, otherwise `null`\r\n\t * @param {Root} [root] Root, if there hasn't been an error\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t/**\r\n\t * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n\t * @param {string|string[]} filename One or multiple files to load\r\n\t * @param {Root} root Root namespace, defaults to create a new one if omitted.\r\n\t * @param {LoadCallback} callback Callback function\r\n\t * @returns {undefined}\r\n\t * @see {@link Root#load}\r\n\t */\n\t\n\tfunction load(filename, root, callback) {\n\t  if (typeof root === \"function\") {\n\t    callback = root;\n\t    root = new protobuf.Root();\n\t  } else if (!root) root = new protobuf.Root();\n\t\n\t  return root.load(filename, callback);\n\t}\n\t/**\r\n\t * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n\t * @name load\r\n\t * @function\r\n\t * @param {string|string[]} filename One or multiple files to load\r\n\t * @param {LoadCallback} callback Callback function\r\n\t * @returns {undefined}\r\n\t * @see {@link Root#load}\r\n\t * @variation 2\r\n\t */\n\t// function load(filename:string, callback:LoadCallback):undefined\n\t\n\t/**\r\n\t * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\r\n\t * @name load\r\n\t * @function\r\n\t * @param {string|string[]} filename One or multiple files to load\r\n\t * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n\t * @returns {Promise<Root>} Promise\r\n\t * @see {@link Root#load}\r\n\t * @variation 3\r\n\t */\n\t// function load(filename:string, [root:Root]):Promise<Root>\n\t\n\t\n\tprotobuf.load = load;\n\t/**\r\n\t * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\r\n\t * @param {string|string[]} filename One or multiple files to load\r\n\t * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n\t * @returns {Root} Root namespace\r\n\t * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n\t * @see {@link Root#loadSync}\r\n\t */\n\t\n\tfunction loadSync(filename, root) {\n\t  if (!root) root = new protobuf.Root();\n\t  return root.loadSync(filename);\n\t}\n\t\n\tprotobuf.loadSync = loadSync; // Serialization\n\t\n\tprotobuf.encoder = __webpack_require__(48);\n\tprotobuf.decoder = __webpack_require__(64);\n\tprotobuf.verifier = __webpack_require__(65);\n\tprotobuf.converter = __webpack_require__(66); // Reflection\n\t\n\tprotobuf.ReflectionObject = __webpack_require__(50);\n\tprotobuf.Namespace = __webpack_require__(56);\n\tprotobuf.Root = __webpack_require__(68);\n\tprotobuf.Enum = __webpack_require__(49);\n\tprotobuf.Type = __webpack_require__(55);\n\tprotobuf.Field = __webpack_require__(57);\n\tprotobuf.OneOf = __webpack_require__(59);\n\tprotobuf.MapField = __webpack_require__(60);\n\tprotobuf.Service = __webpack_require__(61);\n\tprotobuf.Method = __webpack_require__(62); // Runtime\n\t\n\tprotobuf.Message = __webpack_require__(63);\n\tprotobuf.wrappers = __webpack_require__(67); // Utility\n\t\n\tprotobuf.types = __webpack_require__(58);\n\tprotobuf.util = __webpack_require__(51); // Set up possibly cyclic reflection dependencies\n\t\n\tprotobuf.ReflectionObject._configure(protobuf.Root);\n\t\n\tprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\n\t\n\tprotobuf.Root._configure(protobuf.Type);\n\t\n\tprotobuf.Field._configure(protobuf.Type);\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar protobuf = exports;\n\t/**\r\n\t * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n\t * @name build\r\n\t * @type {string}\r\n\t * @const\r\n\t */\n\t\n\tprotobuf.build = \"minimal\"; // Serialization\n\t\n\tprotobuf.Writer = __webpack_require__(32);\n\tprotobuf.BufferWriter = __webpack_require__(42);\n\tprotobuf.Reader = __webpack_require__(43);\n\tprotobuf.BufferReader = __webpack_require__(44); // Utility\n\t\n\tprotobuf.util = __webpack_require__(33);\n\tprotobuf.rpc = __webpack_require__(45);\n\tprotobuf.roots = __webpack_require__(47);\n\tprotobuf.configure = configure;\n\t/* istanbul ignore next */\n\t\n\t/**\r\n\t * Reconfigures the library according to the environment.\r\n\t * @returns {undefined}\r\n\t */\n\t\n\tfunction configure() {\n\t  protobuf.Reader._configure(protobuf.BufferReader);\n\t\n\t  protobuf.util._configure();\n\t} // Set up buffer utility according to the environment\n\t\n\t\n\tprotobuf.Writer._configure(protobuf.BufferWriter);\n\t\n\tconfigure();\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = Writer;\n\t\n\tvar util = __webpack_require__(33);\n\t\n\tvar BufferWriter; // cyclic\n\t\n\tvar LongBits = util.LongBits,\n\t    base64 = util.base64,\n\t    utf8 = util.utf8;\n\t/**\r\n\t * Constructs a new writer operation instance.\r\n\t * @classdesc Scheduled writer operation.\r\n\t * @constructor\r\n\t * @param {function(*, Uint8Array, number)} fn Function to call\r\n\t * @param {number} len Value byte length\r\n\t * @param {*} val Value to write\r\n\t * @ignore\r\n\t */\n\t\n\tfunction Op(fn, len, val) {\n\t  /**\r\n\t   * Function to call.\r\n\t   * @type {function(Uint8Array, number, *)}\r\n\t   */\n\t  this.fn = fn;\n\t  /**\r\n\t   * Value byte length.\r\n\t   * @type {number}\r\n\t   */\n\t\n\t  this.len = len;\n\t  /**\r\n\t   * Next operation.\r\n\t   * @type {Writer.Op|undefined}\r\n\t   */\n\t\n\t  this.next = undefined;\n\t  /**\r\n\t   * Value to write.\r\n\t   * @type {*}\r\n\t   */\n\t\n\t  this.val = val; // type varies\n\t}\n\t/* istanbul ignore next */\n\t\n\t\n\tfunction noop() {} // eslint-disable-line no-empty-function\n\t\n\t/**\r\n\t * Constructs a new writer state instance.\r\n\t * @classdesc Copied writer state.\r\n\t * @memberof Writer\r\n\t * @constructor\r\n\t * @param {Writer} writer Writer to copy state from\r\n\t * @ignore\r\n\t */\n\t\n\t\n\tfunction State(writer) {\n\t  /**\r\n\t   * Current head.\r\n\t   * @type {Writer.Op}\r\n\t   */\n\t  this.head = writer.head;\n\t  /**\r\n\t   * Current tail.\r\n\t   * @type {Writer.Op}\r\n\t   */\n\t\n\t  this.tail = writer.tail;\n\t  /**\r\n\t   * Current buffer length.\r\n\t   * @type {number}\r\n\t   */\n\t\n\t  this.len = writer.len;\n\t  /**\r\n\t   * Next state.\r\n\t   * @type {State|null}\r\n\t   */\n\t\n\t  this.next = writer.states;\n\t}\n\t/**\r\n\t * Constructs a new writer instance.\r\n\t * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n\t * @constructor\r\n\t */\n\t\n\t\n\tfunction Writer() {\n\t  /**\r\n\t   * Current length.\r\n\t   * @type {number}\r\n\t   */\n\t  this.len = 0;\n\t  /**\r\n\t   * Operations head.\r\n\t   * @type {Object}\r\n\t   */\n\t\n\t  this.head = new Op(noop, 0, 0);\n\t  /**\r\n\t   * Operations tail\r\n\t   * @type {Object}\r\n\t   */\n\t\n\t  this.tail = this.head;\n\t  /**\r\n\t   * Linked forked states.\r\n\t   * @type {Object|null}\r\n\t   */\n\t\n\t  this.states = null; // When a value is written, the writer calculates its byte length and puts it into a linked\n\t  // list of operations to perform when finish() is called. This both allows us to allocate\n\t  // buffers of the exact required size and reduces the amount of work we have to do compared\n\t  // to first calculating over objects and then encoding over objects. In our case, the encoding\n\t  // part is just a linked list walk calling operations with already prepared values.\n\t}\n\t/**\r\n\t * Creates a new writer.\r\n\t * @function\r\n\t * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n\t */\n\t\n\t\n\tWriter.create = util.Buffer ? function create_buffer_setup() {\n\t  return (Writer.create = function create_buffer() {\n\t    return new BufferWriter();\n\t  })();\n\t}\n\t/* istanbul ignore next */\n\t: function create_array() {\n\t  return new Writer();\n\t};\n\t/**\r\n\t * Allocates a buffer of the specified size.\r\n\t * @param {number} size Buffer size\r\n\t * @returns {Uint8Array} Buffer\r\n\t */\n\t\n\tWriter.alloc = function alloc(size) {\n\t  return new util.Array(size);\n\t}; // Use Uint8Array buffer pool in the browser, just like node does with buffers\n\t\n\t/* istanbul ignore else */\n\t\n\t\n\tif (util.Array !== Array) Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\t/**\r\n\t * Pushes a new operation to the queue.\r\n\t * @param {function(Uint8Array, number, *)} fn Function to call\r\n\t * @param {number} len Value byte length\r\n\t * @param {number} val Value to write\r\n\t * @returns {Writer} `this`\r\n\t * @private\r\n\t */\n\t\n\tWriter.prototype._push = function push(fn, len, val) {\n\t  this.tail = this.tail.next = new Op(fn, len, val);\n\t  this.len += len;\n\t  return this;\n\t};\n\t\n\tfunction writeByte(val, buf, pos) {\n\t  buf[pos] = val & 255;\n\t}\n\t\n\tfunction writeVarint32(val, buf, pos) {\n\t  while (val > 127) {\n\t    buf[pos++] = val & 127 | 128;\n\t    val >>>= 7;\n\t  }\n\t\n\t  buf[pos] = val;\n\t}\n\t/**\r\n\t * Constructs a new varint writer operation instance.\r\n\t * @classdesc Scheduled varint writer operation.\r\n\t * @extends Op\r\n\t * @constructor\r\n\t * @param {number} len Value byte length\r\n\t * @param {number} val Value to write\r\n\t * @ignore\r\n\t */\n\t\n\t\n\tfunction VarintOp(len, val) {\n\t  this.len = len;\n\t  this.next = undefined;\n\t  this.val = val;\n\t}\n\t\n\tVarintOp.prototype = Object.create(Op.prototype);\n\tVarintOp.prototype.fn = writeVarint32;\n\t/**\r\n\t * Writes an unsigned 32 bit value as a varint.\r\n\t * @param {number} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\tWriter.prototype.uint32 = function write_uint32(value) {\n\t  // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n\t  // uint32 is by far the most frequently used operation and benefits significantly from this.\n\t  this.len += (this.tail = this.tail.next = new VarintOp((value = value >>> 0) < 128 ? 1 : value < 16384 ? 2 : value < 2097152 ? 3 : value < 268435456 ? 4 : 5, value)).len;\n\t  return this;\n\t};\n\t/**\r\n\t * Writes a signed 32 bit value as a varint.\r\n\t * @function\r\n\t * @param {number} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\t\n\tWriter.prototype.int32 = function write_int32(value) {\n\t  return value < 0 ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n\t  : this.uint32(value);\n\t};\n\t/**\r\n\t * Writes a 32 bit value as a varint, zig-zag encoded.\r\n\t * @param {number} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\t\n\tWriter.prototype.sint32 = function write_sint32(value) {\n\t  return this.uint32((value << 1 ^ value >> 31) >>> 0);\n\t};\n\t\n\tfunction writeVarint64(val, buf, pos) {\n\t  while (val.hi) {\n\t    buf[pos++] = val.lo & 127 | 128;\n\t    val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n\t    val.hi >>>= 7;\n\t  }\n\t\n\t  while (val.lo > 127) {\n\t    buf[pos++] = val.lo & 127 | 128;\n\t    val.lo = val.lo >>> 7;\n\t  }\n\t\n\t  buf[pos++] = val.lo;\n\t}\n\t/**\r\n\t * Writes an unsigned 64 bit value as a varint.\r\n\t * @param {Long|number|string} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t * @throws {TypeError} If `value` is a string and no long library is present.\r\n\t */\n\t\n\t\n\tWriter.prototype.uint64 = function write_uint64(value) {\n\t  var bits = LongBits.from(value);\n\t  return this._push(writeVarint64, bits.length(), bits);\n\t};\n\t/**\r\n\t * Writes a signed 64 bit value as a varint.\r\n\t * @function\r\n\t * @param {Long|number|string} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t * @throws {TypeError} If `value` is a string and no long library is present.\r\n\t */\n\t\n\t\n\tWriter.prototype.int64 = Writer.prototype.uint64;\n\t/**\r\n\t * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n\t * @param {Long|number|string} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t * @throws {TypeError} If `value` is a string and no long library is present.\r\n\t */\n\t\n\tWriter.prototype.sint64 = function write_sint64(value) {\n\t  var bits = LongBits.from(value).zzEncode();\n\t  return this._push(writeVarint64, bits.length(), bits);\n\t};\n\t/**\r\n\t * Writes a boolish value as a varint.\r\n\t * @param {boolean} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\t\n\tWriter.prototype.bool = function write_bool(value) {\n\t  return this._push(writeByte, 1, value ? 1 : 0);\n\t};\n\t\n\tfunction writeFixed32(val, buf, pos) {\n\t  buf[pos] = val & 255;\n\t  buf[pos + 1] = val >>> 8 & 255;\n\t  buf[pos + 2] = val >>> 16 & 255;\n\t  buf[pos + 3] = val >>> 24;\n\t}\n\t/**\r\n\t * Writes an unsigned 32 bit value as fixed 32 bits.\r\n\t * @param {number} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\t\n\tWriter.prototype.fixed32 = function write_fixed32(value) {\n\t  return this._push(writeFixed32, 4, value >>> 0);\n\t};\n\t/**\r\n\t * Writes a signed 32 bit value as fixed 32 bits.\r\n\t * @function\r\n\t * @param {number} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\t\n\tWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\t/**\r\n\t * Writes an unsigned 64 bit value as fixed 64 bits.\r\n\t * @param {Long|number|string} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t * @throws {TypeError} If `value` is a string and no long library is present.\r\n\t */\n\t\n\tWriter.prototype.fixed64 = function write_fixed64(value) {\n\t  var bits = LongBits.from(value);\n\t  return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n\t};\n\t/**\r\n\t * Writes a signed 64 bit value as fixed 64 bits.\r\n\t * @function\r\n\t * @param {Long|number|string} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t * @throws {TypeError} If `value` is a string and no long library is present.\r\n\t */\n\t\n\t\n\tWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\t/**\r\n\t * Writes a float (32 bit).\r\n\t * @function\r\n\t * @param {number} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\tWriter.prototype.float = function write_float(value) {\n\t  return this._push(util.float.writeFloatLE, 4, value);\n\t};\n\t/**\r\n\t * Writes a double (64 bit float).\r\n\t * @function\r\n\t * @param {number} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\t\n\tWriter.prototype.double = function write_double(value) {\n\t  return this._push(util.float.writeDoubleLE, 8, value);\n\t};\n\t\n\tvar writeBytes = util.Array.prototype.set ? function writeBytes_set(val, buf, pos) {\n\t  buf.set(val, pos); // also works for plain array values\n\t}\n\t/* istanbul ignore next */\n\t: function writeBytes_for(val, buf, pos) {\n\t  for (var i = 0; i < val.length; ++i) {\n\t    buf[pos + i] = val[i];\n\t  }\n\t};\n\t/**\r\n\t * Writes a sequence of bytes.\r\n\t * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\tWriter.prototype.bytes = function write_bytes(value) {\n\t  var len = value.length >>> 0;\n\t  if (!len) return this._push(writeByte, 1, 0);\n\t\n\t  if (util.isString(value)) {\n\t    var buf = Writer.alloc(len = base64.length(value));\n\t    base64.decode(value, buf, 0);\n\t    value = buf;\n\t  }\n\t\n\t  return this.uint32(len)._push(writeBytes, len, value);\n\t};\n\t/**\r\n\t * Writes a string.\r\n\t * @param {string} value Value to write\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\t\n\tWriter.prototype.string = function write_string(value) {\n\t  var len = utf8.length(value);\n\t  return len ? this.uint32(len)._push(utf8.write, len, value) : this._push(writeByte, 1, 0);\n\t};\n\t/**\r\n\t * Forks this writer's state by pushing it to a stack.\r\n\t * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\t\n\tWriter.prototype.fork = function fork() {\n\t  this.states = new State(this);\n\t  this.head = this.tail = new Op(noop, 0, 0);\n\t  this.len = 0;\n\t  return this;\n\t};\n\t/**\r\n\t * Resets this instance to the last state.\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\t\n\tWriter.prototype.reset = function reset() {\n\t  if (this.states) {\n\t    this.head = this.states.head;\n\t    this.tail = this.states.tail;\n\t    this.len = this.states.len;\n\t    this.states = this.states.next;\n\t  } else {\n\t    this.head = this.tail = new Op(noop, 0, 0);\n\t    this.len = 0;\n\t  }\n\t\n\t  return this;\n\t};\n\t/**\r\n\t * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n\t * @returns {Writer} `this`\r\n\t */\n\t\n\t\n\tWriter.prototype.ldelim = function ldelim() {\n\t  var head = this.head,\n\t      tail = this.tail,\n\t      len = this.len;\n\t  this.reset().uint32(len);\n\t\n\t  if (len) {\n\t    this.tail.next = head.next; // skip noop\n\t\n\t    this.tail = tail;\n\t    this.len += len;\n\t  }\n\t\n\t  return this;\n\t};\n\t/**\r\n\t * Finishes the write operation.\r\n\t * @returns {Uint8Array} Finished buffer\r\n\t */\n\t\n\t\n\tWriter.prototype.finish = function finish() {\n\t  var head = this.head.next,\n\t      // skip noop\n\t  buf = this.constructor.alloc(this.len),\n\t      pos = 0;\n\t\n\t  while (head) {\n\t    head.fn(head.val, buf, pos);\n\t    pos += head.len;\n\t    head = head.next;\n\t  } // this.head = this.tail = null;\n\t\n\t\n\t  return buf;\n\t};\n\t\n\tWriter._configure = function (BufferWriter_) {\n\t  BufferWriter = BufferWriter_;\n\t};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\tfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\t\n\tvar util = exports; // used to return a Promise where callback is omitted\n\t\n\tutil.asPromise = __webpack_require__(34); // converts to / from base64 encoded strings\n\t\n\tutil.base64 = __webpack_require__(35); // base class of rpc.Service\n\t\n\tutil.EventEmitter = __webpack_require__(36); // float handling accross browsers\n\t\n\tutil.float = __webpack_require__(37); // requires modules optionally and hides the call from bundlers\n\t\n\tutil.inquire = __webpack_require__(38); // converts to / from utf8 encoded strings\n\t\n\tutil.utf8 = __webpack_require__(39); // provides a node-like buffer pool in the browser\n\t\n\tutil.pool = __webpack_require__(40); // utility to work with the low and high bits of a 64 bit value\n\t\n\tutil.LongBits = __webpack_require__(41); // global object reference\n\t\n\tutil.global = typeof window !== \"undefined\" && window || typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || this; // eslint-disable-line no-invalid-this\n\t\n\t/**\r\n\t * An immuable empty array.\r\n\t * @memberof util\r\n\t * @type {Array.<*>}\r\n\t * @const\r\n\t */\n\t\n\tutil.emptyArray = Object.freeze ? Object.freeze([]) :\n\t/* istanbul ignore next */\n\t[]; // used on prototypes\n\t\n\t/**\r\n\t * An immutable empty object.\r\n\t * @type {Object}\r\n\t * @const\r\n\t */\n\t\n\tutil.emptyObject = Object.freeze ? Object.freeze({}) :\n\t/* istanbul ignore next */\n\t{}; // used on prototypes\n\t\n\t/**\r\n\t * Whether running within node or not.\r\n\t * @memberof util\r\n\t * @type {boolean}\r\n\t * @const\r\n\t */\n\t\n\tutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\n\t/**\r\n\t * Tests if the specified value is an integer.\r\n\t * @function\r\n\t * @param {*} value Value to test\r\n\t * @returns {boolean} `true` if the value is an integer\r\n\t */\n\t\n\tutil.isInteger = Number.isInteger ||\n\t/* istanbul ignore next */\n\tfunction isInteger(value) {\n\t  return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n\t};\n\t/**\r\n\t * Tests if the specified value is a string.\r\n\t * @param {*} value Value to test\r\n\t * @returns {boolean} `true` if the value is a string\r\n\t */\n\t\n\t\n\tutil.isString = function isString(value) {\n\t  return typeof value === \"string\" || value instanceof String;\n\t};\n\t/**\r\n\t * Tests if the specified value is a non-null object.\r\n\t * @param {*} value Value to test\r\n\t * @returns {boolean} `true` if the value is a non-null object\r\n\t */\n\t\n\t\n\tutil.isObject = function isObject(value) {\n\t  return value && _typeof(value) === \"object\";\n\t};\n\t/**\r\n\t * Checks if a property on a message is considered to be present.\r\n\t * This is an alias of {@link util.isSet}.\r\n\t * @function\r\n\t * @param {Object} obj Plain object or message instance\r\n\t * @param {string} prop Property name\r\n\t * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n\t */\n\t\n\t\n\tutil.isset =\n\t/**\r\n\t * Checks if a property on a message is considered to be present.\r\n\t * @param {Object} obj Plain object or message instance\r\n\t * @param {string} prop Property name\r\n\t * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n\t */\n\tutil.isSet = function isSet(obj, prop) {\n\t  var value = obj[prop];\n\t  if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n\t    return _typeof(value) !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n\t  return false;\n\t};\n\t/**\r\n\t * Any compatible Buffer instance.\r\n\t * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n\t * @interface Buffer\r\n\t * @extends Uint8Array\r\n\t */\n\t\n\t/**\r\n\t * Node's Buffer class if available.\r\n\t * @type {Constructor<Buffer>}\r\n\t */\n\t\n\t\n\tutil.Buffer = function () {\n\t  try {\n\t    var Buffer = util.inquire(\"buffer\").Buffer; // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n\t\n\t    return Buffer.prototype.utf8Write ? Buffer :\n\t    /* istanbul ignore next */\n\t    null;\n\t  } catch (e) {\n\t    /* istanbul ignore next */\n\t    return null;\n\t  }\n\t}(); // Internal alias of or polyfull for Buffer.from.\n\t\n\t\n\tutil._Buffer_from = null; // Internal alias of or polyfill for Buffer.allocUnsafe.\n\t\n\tutil._Buffer_allocUnsafe = null;\n\t/**\r\n\t * Creates a new buffer of whatever type supported by the environment.\r\n\t * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n\t * @returns {Uint8Array|Buffer} Buffer\r\n\t */\n\t\n\tutil.newBuffer = function newBuffer(sizeOrArray) {\n\t  /* istanbul ignore next */\n\t  return typeof sizeOrArray === \"number\" ? util.Buffer ? util._Buffer_allocUnsafe(sizeOrArray) : new util.Array(sizeOrArray) : util.Buffer ? util._Buffer_from(sizeOrArray) : typeof Uint8Array === \"undefined\" ? sizeOrArray : new Uint8Array(sizeOrArray);\n\t};\n\t/**\r\n\t * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n\t * @type {Constructor<Uint8Array>}\r\n\t */\n\t\n\t\n\tutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array\n\t/* istanbul ignore next */\n\t: Array;\n\t/**\r\n\t * Any compatible Long instance.\r\n\t * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n\t * @interface Long\r\n\t * @property {number} low Low bits\r\n\t * @property {number} high High bits\r\n\t * @property {boolean} unsigned Whether unsigned or not\r\n\t */\n\t\n\t/**\r\n\t * Long.js's Long class if available.\r\n\t * @type {Constructor<Long>}\r\n\t */\n\t\n\tutil.Long =\n\t/* istanbul ignore next */\n\tutil.global.dcodeIO &&\n\t/* istanbul ignore next */\n\tutil.global.dcodeIO.Long ||\n\t/* istanbul ignore next */\n\tutil.global.Long || util.inquire(\"long\");\n\t/**\r\n\t * Regular expression used to verify 2 bit (`bool`) map keys.\r\n\t * @type {RegExp}\r\n\t * @const\r\n\t */\n\t\n\tutil.key2Re = /^true|false|0|1$/;\n\t/**\r\n\t * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n\t * @type {RegExp}\r\n\t * @const\r\n\t */\n\t\n\tutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\t/**\r\n\t * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n\t * @type {RegExp}\r\n\t * @const\r\n\t */\n\t\n\tutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\t/**\r\n\t * Converts a number or long to an 8 characters long hash string.\r\n\t * @param {Long|number} value Value to convert\r\n\t * @returns {string} Hash\r\n\t */\n\t\n\tutil.longToHash = function longToHash(value) {\n\t  return value ? util.LongBits.from(value).toHash() : util.LongBits.zeroHash;\n\t};\n\t/**\r\n\t * Converts an 8 characters long hash string to a long or number.\r\n\t * @param {string} hash Hash\r\n\t * @param {boolean} [unsigned=false] Whether unsigned or not\r\n\t * @returns {Long|number} Original value\r\n\t */\n\t\n\t\n\tutil.longFromHash = function longFromHash(hash, unsigned) {\n\t  var bits = util.LongBits.fromHash(hash);\n\t  if (util.Long) return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n\t  return bits.toNumber(Boolean(unsigned));\n\t};\n\t/**\r\n\t * Merges the properties of the source object into the destination object.\r\n\t * @memberof util\r\n\t * @param {Object.<string,*>} dst Destination object\r\n\t * @param {Object.<string,*>} src Source object\r\n\t * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n\t * @returns {Object.<string,*>} Destination object\r\n\t */\n\t\n\t\n\tfunction merge(dst, src, ifNotSet) {\n\t  // used by converters\n\t  for (var keys = Object.keys(src), i = 0; i < keys.length; ++i) {\n\t    if (dst[keys[i]] === undefined || !ifNotSet) dst[keys[i]] = src[keys[i]];\n\t  }\n\t\n\t  return dst;\n\t}\n\t\n\tutil.merge = merge;\n\t/**\r\n\t * Converts the first character of a string to lower case.\r\n\t * @param {string} str String to convert\r\n\t * @returns {string} Converted string\r\n\t */\n\t\n\tutil.lcFirst = function lcFirst(str) {\n\t  return str.charAt(0).toLowerCase() + str.substring(1);\n\t};\n\t/**\r\n\t * Creates a custom error constructor.\r\n\t * @memberof util\r\n\t * @param {string} name Error name\r\n\t * @returns {Constructor<Error>} Custom error constructor\r\n\t */\n\t\n\t\n\tfunction newError(name) {\n\t  function CustomError(message, properties) {\n\t    if (!(this instanceof CustomError)) return new CustomError(message, properties); // Error.call(this, message);\n\t    // ^ just returns a new error instance because the ctor can be called as a function\n\t\n\t    Object.defineProperty(this, \"message\", {\n\t      get: function get() {\n\t        return message;\n\t      }\n\t    });\n\t    /* istanbul ignore next */\n\t\n\t    if (Error.captureStackTrace) // node\n\t      Error.captureStackTrace(this, CustomError);else Object.defineProperty(this, \"stack\", {\n\t      value: new Error().stack || \"\"\n\t    });\n\t    if (properties) merge(this, properties);\n\t  }\n\t\n\t  (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\t  Object.defineProperty(CustomError.prototype, \"name\", {\n\t    get: function get() {\n\t      return name;\n\t    }\n\t  });\n\t\n\t  CustomError.prototype.toString = function toString() {\n\t    return this.name + \": \" + this.message;\n\t  };\n\t\n\t  return CustomError;\n\t}\n\t\n\tutil.newError = newError;\n\t/**\r\n\t * Constructs a new protocol error.\r\n\t * @classdesc Error subclass indicating a protocol specifc error.\r\n\t * @memberof util\r\n\t * @extends Error\r\n\t * @template T extends Message<T>\r\n\t * @constructor\r\n\t * @param {string} message Error message\r\n\t * @param {Object.<string,*>} [properties] Additional properties\r\n\t * @example\r\n\t * try {\r\n\t *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n\t * } catch (e) {\r\n\t *     if (e instanceof ProtocolError && e.instance)\r\n\t *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n\t * }\r\n\t */\n\t\n\tutil.ProtocolError = newError(\"ProtocolError\");\n\t/**\r\n\t * So far decoded message instance.\r\n\t * @name util.ProtocolError#instance\r\n\t * @type {Message<T>}\r\n\t */\n\t\n\t/**\r\n\t * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n\t * @typedef OneOfGetter\r\n\t * @type {function}\r\n\t * @returns {string|undefined} Set field name, if any\r\n\t */\n\t\n\t/**\r\n\t * Builds a getter for a oneof's present field name.\r\n\t * @param {string[]} fieldNames Field names\r\n\t * @returns {OneOfGetter} Unbound getter\r\n\t */\n\t\n\tutil.oneOfGetter = function getOneOf(fieldNames) {\n\t  var fieldMap = {};\n\t\n\t  for (var i = 0; i < fieldNames.length; ++i) {\n\t    fieldMap[fieldNames[i]] = 1;\n\t  }\n\t  /**\r\n\t   * @returns {string|undefined} Set field name, if any\r\n\t   * @this Object\r\n\t   * @ignore\r\n\t   */\n\t\n\t\n\t  return function () {\n\t    // eslint-disable-line consistent-return\n\t    for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i) {\n\t      if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null) return keys[i];\n\t    }\n\t  };\n\t};\n\t/**\r\n\t * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n\t * @typedef OneOfSetter\r\n\t * @type {function}\r\n\t * @param {string|undefined} value Field name\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t/**\r\n\t * Builds a setter for a oneof's present field name.\r\n\t * @param {string[]} fieldNames Field names\r\n\t * @returns {OneOfSetter} Unbound setter\r\n\t */\n\t\n\t\n\tutil.oneOfSetter = function setOneOf(fieldNames) {\n\t  /**\r\n\t   * @param {string} name Field name\r\n\t   * @returns {undefined}\r\n\t   * @this Object\r\n\t   * @ignore\r\n\t   */\n\t  return function (name) {\n\t    for (var i = 0; i < fieldNames.length; ++i) {\n\t      if (fieldNames[i] !== name) delete this[fieldNames[i]];\n\t    }\n\t  };\n\t};\n\t/**\r\n\t * Default conversion options used for {@link Message#toJSON} implementations.\r\n\t *\r\n\t * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n\t *\r\n\t * - Longs become strings\r\n\t * - Enums become string keys\r\n\t * - Bytes become base64 encoded strings\r\n\t * - (Sub-)Messages become plain objects\r\n\t * - Maps become plain objects with all string keys\r\n\t * - Repeated fields become arrays\r\n\t * - NaN and Infinity for float and double fields become strings\r\n\t *\r\n\t * @type {IConversionOptions}\r\n\t * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n\t */\n\t\n\t\n\tutil.toJSONOptions = {\n\t  longs: String,\n\t  enums: String,\n\t  bytes: String,\n\t  json: true\n\t}; // Sets up buffer utility according to the environment (called in index-minimal)\n\t\n\tutil._configure = function () {\n\t  var Buffer = util.Buffer;\n\t  /* istanbul ignore if */\n\t\n\t  if (!Buffer) {\n\t    util._Buffer_from = util._Buffer_allocUnsafe = null;\n\t    return;\n\t  } // because node 4.x buffers are incompatible & immutable\n\t  // see: https://github.com/dcodeIO/protobuf.js/pull/665\n\t\n\t\n\t  util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n\t  /* istanbul ignore next */\n\t  function Buffer_from(value, encoding) {\n\t    return new Buffer(value, encoding);\n\t  };\n\t\n\t  util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n\t  /* istanbul ignore next */\n\t  function Buffer_allocUnsafe(size) {\n\t    return new Buffer(size);\n\t  };\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = asPromise;\n\t/**\r\n\t * Callback as used by {@link util.asPromise}.\r\n\t * @typedef asPromiseCallback\r\n\t * @type {function}\r\n\t * @param {Error|null} error Error, if any\r\n\t * @param {...*} params Additional arguments\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t/**\r\n\t * Returns a promise from a node-style callback function.\r\n\t * @memberof util\r\n\t * @param {asPromiseCallback} fn Function to call\r\n\t * @param {*} ctx Function context\r\n\t * @param {...*} params Function arguments\r\n\t * @returns {Promise<*>} Promisified function\r\n\t */\n\t\n\tfunction asPromise(fn, ctx\n\t/*, varargs */\n\t) {\n\t  var params = new Array(arguments.length - 1),\n\t      offset = 0,\n\t      index = 2,\n\t      pending = true;\n\t\n\t  while (index < arguments.length) {\n\t    params[offset++] = arguments[index++];\n\t  }\n\t\n\t  return new Promise(function executor(resolve, reject) {\n\t    params[offset] = function callback(err\n\t    /*, varargs */\n\t    ) {\n\t      if (pending) {\n\t        pending = false;\n\t        if (err) reject(err);else {\n\t          var params = new Array(arguments.length - 1),\n\t              offset = 0;\n\t\n\t          while (offset < params.length) {\n\t            params[offset++] = arguments[offset];\n\t          }\n\t\n\t          resolve.apply(null, params);\n\t        }\n\t      }\n\t    };\n\t\n\t    try {\n\t      fn.apply(ctx || null, params);\n\t    } catch (err) {\n\t      if (pending) {\n\t        pending = false;\n\t        reject(err);\n\t      }\n\t    }\n\t  });\n\t}\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t/**\r\n\t * A minimal base64 implementation for number arrays.\r\n\t * @memberof util\r\n\t * @namespace\r\n\t */\n\t\n\tvar base64 = exports;\n\t/**\r\n\t * Calculates the byte length of a base64 encoded string.\r\n\t * @param {string} string Base64 encoded string\r\n\t * @returns {number} Byte length\r\n\t */\n\t\n\tbase64.length = function length(string) {\n\t  var p = string.length;\n\t  if (!p) return 0;\n\t  var n = 0;\n\t\n\t  while (--p % 4 > 1 && string.charAt(p) === \"=\") {\n\t    ++n;\n\t  }\n\t\n\t  return Math.ceil(string.length * 3) / 4 - n;\n\t}; // Base64 encoding table\n\t\n\t\n\tvar b64 = new Array(64); // Base64 decoding table\n\t\n\tvar s64 = new Array(123); // 65..90, 97..122, 48..57, 43, 47\n\t\n\tfor (var i = 0; i < 64;) {\n\t  s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\n\t}\n\t/**\r\n\t * Encodes a buffer to a base64 encoded string.\r\n\t * @param {Uint8Array} buffer Source buffer\r\n\t * @param {number} start Source start\r\n\t * @param {number} end Source end\r\n\t * @returns {string} Base64 encoded string\r\n\t */\n\t\n\t\n\tbase64.encode = function encode(buffer, start, end) {\n\t  var parts = null,\n\t      chunk = [];\n\t  var i = 0,\n\t      // output index\n\t  j = 0,\n\t      // goto index\n\t  t; // temporary\n\t\n\t  while (start < end) {\n\t    var b = buffer[start++];\n\t\n\t    switch (j) {\n\t      case 0:\n\t        chunk[i++] = b64[b >> 2];\n\t        t = (b & 3) << 4;\n\t        j = 1;\n\t        break;\n\t\n\t      case 1:\n\t        chunk[i++] = b64[t | b >> 4];\n\t        t = (b & 15) << 2;\n\t        j = 2;\n\t        break;\n\t\n\t      case 2:\n\t        chunk[i++] = b64[t | b >> 6];\n\t        chunk[i++] = b64[b & 63];\n\t        j = 0;\n\t        break;\n\t    }\n\t\n\t    if (i > 8191) {\n\t      (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n\t      i = 0;\n\t    }\n\t  }\n\t\n\t  if (j) {\n\t    chunk[i++] = b64[t];\n\t    chunk[i++] = 61;\n\t    if (j === 1) chunk[i++] = 61;\n\t  }\n\t\n\t  if (parts) {\n\t    if (i) parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n\t    return parts.join(\"\");\n\t  }\n\t\n\t  return String.fromCharCode.apply(String, chunk.slice(0, i));\n\t};\n\t\n\tvar invalidEncoding = \"invalid encoding\";\n\t/**\r\n\t * Decodes a base64 encoded string to a buffer.\r\n\t * @param {string} string Source string\r\n\t * @param {Uint8Array} buffer Destination buffer\r\n\t * @param {number} offset Destination offset\r\n\t * @returns {number} Number of bytes written\r\n\t * @throws {Error} If encoding is invalid\r\n\t */\n\t\n\tbase64.decode = function decode(string, buffer, offset) {\n\t  var start = offset;\n\t  var j = 0,\n\t      // goto index\n\t  t; // temporary\n\t\n\t  for (var i = 0; i < string.length;) {\n\t    var c = string.charCodeAt(i++);\n\t    if (c === 61 && j > 1) break;\n\t    if ((c = s64[c]) === undefined) throw Error(invalidEncoding);\n\t\n\t    switch (j) {\n\t      case 0:\n\t        t = c;\n\t        j = 1;\n\t        break;\n\t\n\t      case 1:\n\t        buffer[offset++] = t << 2 | (c & 48) >> 4;\n\t        t = c;\n\t        j = 2;\n\t        break;\n\t\n\t      case 2:\n\t        buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\n\t        t = c;\n\t        j = 3;\n\t        break;\n\t\n\t      case 3:\n\t        buffer[offset++] = (t & 3) << 6 | c;\n\t        j = 0;\n\t        break;\n\t    }\n\t  }\n\t\n\t  if (j === 1) throw Error(invalidEncoding);\n\t  return offset - start;\n\t};\n\t/**\r\n\t * Tests if the specified string appears to be base64 encoded.\r\n\t * @param {string} string String to test\r\n\t * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n\t */\n\t\n\t\n\tbase64.test = function test(string) {\n\t  return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\n\t};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = EventEmitter;\n\t/**\r\n\t * Constructs a new event emitter instance.\r\n\t * @classdesc A minimal event emitter.\r\n\t * @memberof util\r\n\t * @constructor\r\n\t */\n\t\n\tfunction EventEmitter() {\n\t  /**\r\n\t   * Registered listeners.\r\n\t   * @type {Object.<string,*>}\r\n\t   * @private\r\n\t   */\n\t  this._listeners = {};\n\t}\n\t/**\r\n\t * Registers an event listener.\r\n\t * @param {string} evt Event name\r\n\t * @param {function} fn Listener\r\n\t * @param {*} [ctx] Listener context\r\n\t * @returns {util.EventEmitter} `this`\r\n\t */\n\t\n\t\n\tEventEmitter.prototype.on = function on(evt, fn, ctx) {\n\t  (this._listeners[evt] || (this._listeners[evt] = [])).push({\n\t    fn: fn,\n\t    ctx: ctx || this\n\t  });\n\t  return this;\n\t};\n\t/**\r\n\t * Removes an event listener or any matching listeners if arguments are omitted.\r\n\t * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n\t * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n\t * @returns {util.EventEmitter} `this`\r\n\t */\n\t\n\t\n\tEventEmitter.prototype.off = function off(evt, fn) {\n\t  if (evt === undefined) this._listeners = {};else {\n\t    if (fn === undefined) this._listeners[evt] = [];else {\n\t      var listeners = this._listeners[evt];\n\t\n\t      for (var i = 0; i < listeners.length;) {\n\t        if (listeners[i].fn === fn) listeners.splice(i, 1);else ++i;\n\t      }\n\t    }\n\t  }\n\t  return this;\n\t};\n\t/**\r\n\t * Emits an event by calling its listeners with the specified arguments.\r\n\t * @param {string} evt Event name\r\n\t * @param {...*} args Arguments\r\n\t * @returns {util.EventEmitter} `this`\r\n\t */\n\t\n\t\n\tEventEmitter.prototype.emit = function emit(evt) {\n\t  var listeners = this._listeners[evt];\n\t\n\t  if (listeners) {\n\t    var args = [],\n\t        i = 1;\n\t\n\t    for (; i < arguments.length;) {\n\t      args.push(arguments[i++]);\n\t    }\n\t\n\t    for (i = 0; i < listeners.length;) {\n\t      listeners[i].fn.apply(listeners[i++].ctx, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = factory(factory);\n\t/**\r\n\t * Reads / writes floats / doubles from / to buffers.\r\n\t * @name util.float\r\n\t * @namespace\r\n\t */\n\t\n\t/**\r\n\t * Writes a 32 bit float to a buffer using little endian byte order.\r\n\t * @name util.float.writeFloatLE\r\n\t * @function\r\n\t * @param {number} val Value to write\r\n\t * @param {Uint8Array} buf Target buffer\r\n\t * @param {number} pos Target buffer offset\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t/**\r\n\t * Writes a 32 bit float to a buffer using big endian byte order.\r\n\t * @name util.float.writeFloatBE\r\n\t * @function\r\n\t * @param {number} val Value to write\r\n\t * @param {Uint8Array} buf Target buffer\r\n\t * @param {number} pos Target buffer offset\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t/**\r\n\t * Reads a 32 bit float from a buffer using little endian byte order.\r\n\t * @name util.float.readFloatLE\r\n\t * @function\r\n\t * @param {Uint8Array} buf Source buffer\r\n\t * @param {number} pos Source buffer offset\r\n\t * @returns {number} Value read\r\n\t */\n\t\n\t/**\r\n\t * Reads a 32 bit float from a buffer using big endian byte order.\r\n\t * @name util.float.readFloatBE\r\n\t * @function\r\n\t * @param {Uint8Array} buf Source buffer\r\n\t * @param {number} pos Source buffer offset\r\n\t * @returns {number} Value read\r\n\t */\n\t\n\t/**\r\n\t * Writes a 64 bit double to a buffer using little endian byte order.\r\n\t * @name util.float.writeDoubleLE\r\n\t * @function\r\n\t * @param {number} val Value to write\r\n\t * @param {Uint8Array} buf Target buffer\r\n\t * @param {number} pos Target buffer offset\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t/**\r\n\t * Writes a 64 bit double to a buffer using big endian byte order.\r\n\t * @name util.float.writeDoubleBE\r\n\t * @function\r\n\t * @param {number} val Value to write\r\n\t * @param {Uint8Array} buf Target buffer\r\n\t * @param {number} pos Target buffer offset\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t/**\r\n\t * Reads a 64 bit double from a buffer using little endian byte order.\r\n\t * @name util.float.readDoubleLE\r\n\t * @function\r\n\t * @param {Uint8Array} buf Source buffer\r\n\t * @param {number} pos Source buffer offset\r\n\t * @returns {number} Value read\r\n\t */\n\t\n\t/**\r\n\t * Reads a 64 bit double from a buffer using big endian byte order.\r\n\t * @name util.float.readDoubleBE\r\n\t * @function\r\n\t * @param {Uint8Array} buf Source buffer\r\n\t * @param {number} pos Source buffer offset\r\n\t * @returns {number} Value read\r\n\t */\n\t// Factory function for the purpose of node-based testing in modified global environments\n\t\n\tfunction factory(exports) {\n\t  // float: typed array\n\t  if (typeof Float32Array !== \"undefined\") (function () {\n\t    var f32 = new Float32Array([-0]),\n\t        f8b = new Uint8Array(f32.buffer),\n\t        le = f8b[3] === 128;\n\t\n\t    function writeFloat_f32_cpy(val, buf, pos) {\n\t      f32[0] = val;\n\t      buf[pos] = f8b[0];\n\t      buf[pos + 1] = f8b[1];\n\t      buf[pos + 2] = f8b[2];\n\t      buf[pos + 3] = f8b[3];\n\t    }\n\t\n\t    function writeFloat_f32_rev(val, buf, pos) {\n\t      f32[0] = val;\n\t      buf[pos] = f8b[3];\n\t      buf[pos + 1] = f8b[2];\n\t      buf[pos + 2] = f8b[1];\n\t      buf[pos + 3] = f8b[0];\n\t    }\n\t    /* istanbul ignore next */\n\t\n\t\n\t    exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\n\t    /* istanbul ignore next */\n\t\n\t    exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\n\t\n\t    function readFloat_f32_cpy(buf, pos) {\n\t      f8b[0] = buf[pos];\n\t      f8b[1] = buf[pos + 1];\n\t      f8b[2] = buf[pos + 2];\n\t      f8b[3] = buf[pos + 3];\n\t      return f32[0];\n\t    }\n\t\n\t    function readFloat_f32_rev(buf, pos) {\n\t      f8b[3] = buf[pos];\n\t      f8b[2] = buf[pos + 1];\n\t      f8b[1] = buf[pos + 2];\n\t      f8b[0] = buf[pos + 3];\n\t      return f32[0];\n\t    }\n\t    /* istanbul ignore next */\n\t\n\t\n\t    exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\n\t    /* istanbul ignore next */\n\t\n\t    exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy; // float: ieee754\n\t  })();else (function () {\n\t    function writeFloat_ieee754(writeUint, val, buf, pos) {\n\t      var sign = val < 0 ? 1 : 0;\n\t      if (sign) val = -val;\n\t      if (val === 0) writeUint(1 / val > 0 ?\n\t      /* positive */\n\t      0 :\n\t      /* negative 0 */\n\t      2147483648, buf, pos);else if (isNaN(val)) writeUint(2143289344, buf, pos);else if (val > 3.4028234663852886e+38) // +-Infinity\n\t        writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);else if (val < 1.1754943508222875e-38) // denormal\n\t        writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);else {\n\t        var exponent = Math.floor(Math.log(val) / Math.LN2),\n\t            mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\n\t        writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\n\t      }\n\t    }\n\t\n\t    exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\n\t    exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\n\t\n\t    function readFloat_ieee754(readUint, buf, pos) {\n\t      var uint = readUint(buf, pos),\n\t          sign = (uint >> 31) * 2 + 1,\n\t          exponent = uint >>> 23 & 255,\n\t          mantissa = uint & 8388607;\n\t      return exponent === 255 ? mantissa ? NaN : sign * Infinity : exponent === 0 // denormal\n\t      ? sign * 1.401298464324817e-45 * mantissa : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\n\t    }\n\t\n\t    exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\n\t    exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\n\t  })(); // double: typed array\n\t\n\t  if (typeof Float64Array !== \"undefined\") (function () {\n\t    var f64 = new Float64Array([-0]),\n\t        f8b = new Uint8Array(f64.buffer),\n\t        le = f8b[7] === 128;\n\t\n\t    function writeDouble_f64_cpy(val, buf, pos) {\n\t      f64[0] = val;\n\t      buf[pos] = f8b[0];\n\t      buf[pos + 1] = f8b[1];\n\t      buf[pos + 2] = f8b[2];\n\t      buf[pos + 3] = f8b[3];\n\t      buf[pos + 4] = f8b[4];\n\t      buf[pos + 5] = f8b[5];\n\t      buf[pos + 6] = f8b[6];\n\t      buf[pos + 7] = f8b[7];\n\t    }\n\t\n\t    function writeDouble_f64_rev(val, buf, pos) {\n\t      f64[0] = val;\n\t      buf[pos] = f8b[7];\n\t      buf[pos + 1] = f8b[6];\n\t      buf[pos + 2] = f8b[5];\n\t      buf[pos + 3] = f8b[4];\n\t      buf[pos + 4] = f8b[3];\n\t      buf[pos + 5] = f8b[2];\n\t      buf[pos + 6] = f8b[1];\n\t      buf[pos + 7] = f8b[0];\n\t    }\n\t    /* istanbul ignore next */\n\t\n\t\n\t    exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\n\t    /* istanbul ignore next */\n\t\n\t    exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\n\t\n\t    function readDouble_f64_cpy(buf, pos) {\n\t      f8b[0] = buf[pos];\n\t      f8b[1] = buf[pos + 1];\n\t      f8b[2] = buf[pos + 2];\n\t      f8b[3] = buf[pos + 3];\n\t      f8b[4] = buf[pos + 4];\n\t      f8b[5] = buf[pos + 5];\n\t      f8b[6] = buf[pos + 6];\n\t      f8b[7] = buf[pos + 7];\n\t      return f64[0];\n\t    }\n\t\n\t    function readDouble_f64_rev(buf, pos) {\n\t      f8b[7] = buf[pos];\n\t      f8b[6] = buf[pos + 1];\n\t      f8b[5] = buf[pos + 2];\n\t      f8b[4] = buf[pos + 3];\n\t      f8b[3] = buf[pos + 4];\n\t      f8b[2] = buf[pos + 5];\n\t      f8b[1] = buf[pos + 6];\n\t      f8b[0] = buf[pos + 7];\n\t      return f64[0];\n\t    }\n\t    /* istanbul ignore next */\n\t\n\t\n\t    exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\n\t    /* istanbul ignore next */\n\t\n\t    exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy; // double: ieee754\n\t  })();else (function () {\n\t    function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\n\t      var sign = val < 0 ? 1 : 0;\n\t      if (sign) val = -val;\n\t\n\t      if (val === 0) {\n\t        writeUint(0, buf, pos + off0);\n\t        writeUint(1 / val > 0 ?\n\t        /* positive */\n\t        0 :\n\t        /* negative 0 */\n\t        2147483648, buf, pos + off1);\n\t      } else if (isNaN(val)) {\n\t        writeUint(0, buf, pos + off0);\n\t        writeUint(2146959360, buf, pos + off1);\n\t      } else if (val > 1.7976931348623157e+308) {\n\t        // +-Infinity\n\t        writeUint(0, buf, pos + off0);\n\t        writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\n\t      } else {\n\t        var mantissa;\n\t\n\t        if (val < 2.2250738585072014e-308) {\n\t          // denormal\n\t          mantissa = val / 5e-324;\n\t          writeUint(mantissa >>> 0, buf, pos + off0);\n\t          writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\n\t        } else {\n\t          var exponent = Math.floor(Math.log(val) / Math.LN2);\n\t          if (exponent === 1024) exponent = 1023;\n\t          mantissa = val * Math.pow(2, -exponent);\n\t          writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\n\t          writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\n\t        }\n\t      }\n\t    }\n\t\n\t    exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\n\t    exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\n\t\n\t    function readDouble_ieee754(readUint, off0, off1, buf, pos) {\n\t      var lo = readUint(buf, pos + off0),\n\t          hi = readUint(buf, pos + off1);\n\t      var sign = (hi >> 31) * 2 + 1,\n\t          exponent = hi >>> 20 & 2047,\n\t          mantissa = 4294967296 * (hi & 1048575) + lo;\n\t      return exponent === 2047 ? mantissa ? NaN : sign * Infinity : exponent === 0 // denormal\n\t      ? sign * 5e-324 * mantissa : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\n\t    }\n\t\n\t    exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\n\t    exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\n\t  })();\n\t  return exports;\n\t} // uint helpers\n\t\n\t\n\tfunction writeUintLE(val, buf, pos) {\n\t  buf[pos] = val & 255;\n\t  buf[pos + 1] = val >>> 8 & 255;\n\t  buf[pos + 2] = val >>> 16 & 255;\n\t  buf[pos + 3] = val >>> 24;\n\t}\n\t\n\tfunction writeUintBE(val, buf, pos) {\n\t  buf[pos] = val >>> 24;\n\t  buf[pos + 1] = val >>> 16 & 255;\n\t  buf[pos + 2] = val >>> 8 & 255;\n\t  buf[pos + 3] = val & 255;\n\t}\n\t\n\tfunction readUintLE(buf, pos) {\n\t  return (buf[pos] | buf[pos + 1] << 8 | buf[pos + 2] << 16 | buf[pos + 3] << 24) >>> 0;\n\t}\n\t\n\tfunction readUintBE(buf, pos) {\n\t  return (buf[pos] << 24 | buf[pos + 1] << 16 | buf[pos + 2] << 8 | buf[pos + 3]) >>> 0;\n\t}\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = inquire;\n\t/**\r\n\t * Requires a module only if available.\r\n\t * @memberof util\r\n\t * @param {string} moduleName Module to require\r\n\t * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n\t */\n\t\n\tfunction inquire(moduleName) {\n\t  try {\n\t    var mod = eval(\"quire\".replace(/^/, \"re\"))(moduleName); // eslint-disable-line no-eval\n\t\n\t    if (mod && (mod.length || Object.keys(mod).length)) return mod;\n\t  } catch (e) {} // eslint-disable-line no-empty\n\t\n\t\n\t  return null;\n\t}\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t/**\r\n\t * A minimal UTF8 implementation for number arrays.\r\n\t * @memberof util\r\n\t * @namespace\r\n\t */\n\t\n\tvar utf8 = exports;\n\t/**\r\n\t * Calculates the UTF8 byte length of a string.\r\n\t * @param {string} string String\r\n\t * @returns {number} Byte length\r\n\t */\n\t\n\tutf8.length = function utf8_length(string) {\n\t  var len = 0,\n\t      c = 0;\n\t\n\t  for (var i = 0; i < string.length; ++i) {\n\t    c = string.charCodeAt(i);\n\t    if (c < 128) len += 1;else if (c < 2048) len += 2;else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n\t      ++i;\n\t      len += 4;\n\t    } else len += 3;\n\t  }\n\t\n\t  return len;\n\t};\n\t/**\r\n\t * Reads UTF8 bytes as a string.\r\n\t * @param {Uint8Array} buffer Source buffer\r\n\t * @param {number} start Source start\r\n\t * @param {number} end Source end\r\n\t * @returns {string} String read\r\n\t */\n\t\n\t\n\tutf8.read = function utf8_read(buffer, start, end) {\n\t  var len = end - start;\n\t  if (len < 1) return \"\";\n\t  var parts = null,\n\t      chunk = [],\n\t      i = 0,\n\t      // char offset\n\t  t; // temporary\n\t\n\t  while (start < end) {\n\t    t = buffer[start++];\n\t    if (t < 128) chunk[i++] = t;else if (t > 191 && t < 224) chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;else if (t > 239 && t < 365) {\n\t      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n\t      chunk[i++] = 0xD800 + (t >> 10);\n\t      chunk[i++] = 0xDC00 + (t & 1023);\n\t    } else chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n\t\n\t    if (i > 8191) {\n\t      (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n\t      i = 0;\n\t    }\n\t  }\n\t\n\t  if (parts) {\n\t    if (i) parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n\t    return parts.join(\"\");\n\t  }\n\t\n\t  return String.fromCharCode.apply(String, chunk.slice(0, i));\n\t};\n\t/**\r\n\t * Writes a string as UTF8 bytes.\r\n\t * @param {string} string Source string\r\n\t * @param {Uint8Array} buffer Destination buffer\r\n\t * @param {number} offset Destination offset\r\n\t * @returns {number} Bytes written\r\n\t */\n\t\n\t\n\tutf8.write = function utf8_write(string, buffer, offset) {\n\t  var start = offset,\n\t      c1,\n\t      // character 1\n\t  c2; // character 2\n\t\n\t  for (var i = 0; i < string.length; ++i) {\n\t    c1 = string.charCodeAt(i);\n\t\n\t    if (c1 < 128) {\n\t      buffer[offset++] = c1;\n\t    } else if (c1 < 2048) {\n\t      buffer[offset++] = c1 >> 6 | 192;\n\t      buffer[offset++] = c1 & 63 | 128;\n\t    } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n\t      c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\n\t      ++i;\n\t      buffer[offset++] = c1 >> 18 | 240;\n\t      buffer[offset++] = c1 >> 12 & 63 | 128;\n\t      buffer[offset++] = c1 >> 6 & 63 | 128;\n\t      buffer[offset++] = c1 & 63 | 128;\n\t    } else {\n\t      buffer[offset++] = c1 >> 12 | 224;\n\t      buffer[offset++] = c1 >> 6 & 63 | 128;\n\t      buffer[offset++] = c1 & 63 | 128;\n\t    }\n\t  }\n\t\n\t  return offset - start;\n\t};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = pool;\n\t/**\r\n\t * An allocator as used by {@link util.pool}.\r\n\t * @typedef PoolAllocator\r\n\t * @type {function}\r\n\t * @param {number} size Buffer size\r\n\t * @returns {Uint8Array} Buffer\r\n\t */\n\t\n\t/**\r\n\t * A slicer as used by {@link util.pool}.\r\n\t * @typedef PoolSlicer\r\n\t * @type {function}\r\n\t * @param {number} start Start offset\r\n\t * @param {number} end End offset\r\n\t * @returns {Uint8Array} Buffer slice\r\n\t * @this {Uint8Array}\r\n\t */\n\t\n\t/**\r\n\t * A general purpose buffer pool.\r\n\t * @memberof util\r\n\t * @function\r\n\t * @param {PoolAllocator} alloc Allocator\r\n\t * @param {PoolSlicer} slice Slicer\r\n\t * @param {number} [size=8192] Slab size\r\n\t * @returns {PoolAllocator} Pooled allocator\r\n\t */\n\t\n\tfunction pool(alloc, slice, size) {\n\t  var SIZE = size || 8192;\n\t  var MAX = SIZE >>> 1;\n\t  var slab = null;\n\t  var offset = SIZE;\n\t  return function pool_alloc(size) {\n\t    if (size < 1 || size > MAX) return alloc(size);\n\t\n\t    if (offset + size > SIZE) {\n\t      slab = alloc(SIZE);\n\t      offset = 0;\n\t    }\n\t\n\t    var buf = slice.call(slab, offset, offset += size);\n\t    if (offset & 7) // align to 32 bit\n\t      offset = (offset | 7) + 1;\n\t    return buf;\n\t  };\n\t}\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = LongBits;\n\t\n\tvar util = __webpack_require__(33);\n\t/**\r\n\t * Constructs new long bits.\r\n\t * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n\t * @memberof util\r\n\t * @constructor\r\n\t * @param {number} lo Low 32 bits, unsigned\r\n\t * @param {number} hi High 32 bits, unsigned\r\n\t */\n\t\n\t\n\tfunction LongBits(lo, hi) {\n\t  // note that the casts below are theoretically unnecessary as of today, but older statically\n\t  // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\t\n\t  /**\r\n\t   * Low bits.\r\n\t   * @type {number}\r\n\t   */\n\t  this.lo = lo >>> 0;\n\t  /**\r\n\t   * High bits.\r\n\t   * @type {number}\r\n\t   */\n\t\n\t  this.hi = hi >>> 0;\n\t}\n\t/**\r\n\t * Zero bits.\r\n\t * @memberof util.LongBits\r\n\t * @type {util.LongBits}\r\n\t */\n\t\n\t\n\tvar zero = LongBits.zero = new LongBits(0, 0);\n\t\n\tzero.toNumber = function () {\n\t  return 0;\n\t};\n\t\n\tzero.zzEncode = zero.zzDecode = function () {\n\t  return this;\n\t};\n\t\n\tzero.length = function () {\n\t  return 1;\n\t};\n\t/**\r\n\t * Zero hash.\r\n\t * @memberof util.LongBits\r\n\t * @type {string}\r\n\t */\n\t\n\t\n\tvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\t/**\r\n\t * Constructs new long bits from the specified number.\r\n\t * @param {number} value Value\r\n\t * @returns {util.LongBits} Instance\r\n\t */\n\t\n\tLongBits.fromNumber = function fromNumber(value) {\n\t  if (value === 0) return zero;\n\t  var sign = value < 0;\n\t  if (sign) value = -value;\n\t  var lo = value >>> 0,\n\t      hi = (value - lo) / 4294967296 >>> 0;\n\t\n\t  if (sign) {\n\t    hi = ~hi >>> 0;\n\t    lo = ~lo >>> 0;\n\t\n\t    if (++lo > 4294967295) {\n\t      lo = 0;\n\t      if (++hi > 4294967295) hi = 0;\n\t    }\n\t  }\n\t\n\t  return new LongBits(lo, hi);\n\t};\n\t/**\r\n\t * Constructs new long bits from a number, long or string.\r\n\t * @param {Long|number|string} value Value\r\n\t * @returns {util.LongBits} Instance\r\n\t */\n\t\n\t\n\tLongBits.from = function from(value) {\n\t  if (typeof value === \"number\") return LongBits.fromNumber(value);\n\t\n\t  if (util.isString(value)) {\n\t    /* istanbul ignore else */\n\t    if (util.Long) value = util.Long.fromString(value);else return LongBits.fromNumber(parseInt(value, 10));\n\t  }\n\t\n\t  return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n\t};\n\t/**\r\n\t * Converts this long bits to a possibly unsafe JavaScript number.\r\n\t * @param {boolean} [unsigned=false] Whether unsigned or not\r\n\t * @returns {number} Possibly unsafe number\r\n\t */\n\t\n\t\n\tLongBits.prototype.toNumber = function toNumber(unsigned) {\n\t  if (!unsigned && this.hi >>> 31) {\n\t    var lo = ~this.lo + 1 >>> 0,\n\t        hi = ~this.hi >>> 0;\n\t    if (!lo) hi = hi + 1 >>> 0;\n\t    return -(lo + hi * 4294967296);\n\t  }\n\t\n\t  return this.lo + this.hi * 4294967296;\n\t};\n\t/**\r\n\t * Converts this long bits to a long.\r\n\t * @param {boolean} [unsigned=false] Whether unsigned or not\r\n\t * @returns {Long} Long\r\n\t */\n\t\n\t\n\tLongBits.prototype.toLong = function toLong(unsigned) {\n\t  return util.Long ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n\t  /* istanbul ignore next */\n\t  : {\n\t    low: this.lo | 0,\n\t    high: this.hi | 0,\n\t    unsigned: Boolean(unsigned)\n\t  };\n\t};\n\t\n\tvar charCodeAt = String.prototype.charCodeAt;\n\t/**\r\n\t * Constructs new long bits from the specified 8 characters long hash.\r\n\t * @param {string} hash Hash\r\n\t * @returns {util.LongBits} Bits\r\n\t */\n\t\n\tLongBits.fromHash = function fromHash(hash) {\n\t  if (hash === zeroHash) return zero;\n\t  return new LongBits((charCodeAt.call(hash, 0) | charCodeAt.call(hash, 1) << 8 | charCodeAt.call(hash, 2) << 16 | charCodeAt.call(hash, 3) << 24) >>> 0, (charCodeAt.call(hash, 4) | charCodeAt.call(hash, 5) << 8 | charCodeAt.call(hash, 6) << 16 | charCodeAt.call(hash, 7) << 24) >>> 0);\n\t};\n\t/**\r\n\t * Converts this long bits to a 8 characters long hash.\r\n\t * @returns {string} Hash\r\n\t */\n\t\n\t\n\tLongBits.prototype.toHash = function toHash() {\n\t  return String.fromCharCode(this.lo & 255, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, this.hi & 255, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);\n\t};\n\t/**\r\n\t * Zig-zag encodes this long bits.\r\n\t * @returns {util.LongBits} `this`\r\n\t */\n\t\n\t\n\tLongBits.prototype.zzEncode = function zzEncode() {\n\t  var mask = this.hi >> 31;\n\t  this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n\t  this.lo = (this.lo << 1 ^ mask) >>> 0;\n\t  return this;\n\t};\n\t/**\r\n\t * Zig-zag decodes this long bits.\r\n\t * @returns {util.LongBits} `this`\r\n\t */\n\t\n\t\n\tLongBits.prototype.zzDecode = function zzDecode() {\n\t  var mask = -(this.lo & 1);\n\t  this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n\t  this.hi = (this.hi >>> 1 ^ mask) >>> 0;\n\t  return this;\n\t};\n\t/**\r\n\t * Calculates the length of this longbits when encoded as a varint.\r\n\t * @returns {number} Length\r\n\t */\n\t\n\t\n\tLongBits.prototype.length = function length() {\n\t  var part0 = this.lo,\n\t      part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n\t      part2 = this.hi >>> 24;\n\t  return part2 === 0 ? part1 === 0 ? part0 < 16384 ? part0 < 128 ? 1 : 2 : part0 < 2097152 ? 3 : 4 : part1 < 16384 ? part1 < 128 ? 5 : 6 : part1 < 2097152 ? 7 : 8 : part2 < 128 ? 9 : 10;\n\t};\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = BufferWriter; // extends Writer\n\t\n\tvar Writer = __webpack_require__(32);\n\t\n\t(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\t\n\tvar util = __webpack_require__(33);\n\t\n\tvar Buffer = util.Buffer;\n\t/**\r\n\t * Constructs a new buffer writer instance.\r\n\t * @classdesc Wire format writer using node buffers.\r\n\t * @extends Writer\r\n\t * @constructor\r\n\t */\n\t\n\tfunction BufferWriter() {\n\t  Writer.call(this);\n\t}\n\t/**\r\n\t * Allocates a buffer of the specified size.\r\n\t * @param {number} size Buffer size\r\n\t * @returns {Buffer} Buffer\r\n\t */\n\t\n\t\n\tBufferWriter.alloc = function alloc_buffer(size) {\n\t  return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\n\t};\n\t\n\tvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\" ? function writeBytesBuffer_set(val, buf, pos) {\n\t  buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n\t  // also works for plain array values\n\t}\n\t/* istanbul ignore next */\n\t: function writeBytesBuffer_copy(val, buf, pos) {\n\t  if (val.copy) // Buffer values\n\t    val.copy(buf, pos, 0, val.length);else for (var i = 0; i < val.length;) {\n\t    // plain array values\n\t    buf[pos++] = val[i++];\n\t  }\n\t};\n\t/**\r\n\t * @override\r\n\t */\n\t\n\tBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n\t  if (util.isString(value)) value = util._Buffer_from(value, \"base64\");\n\t  var len = value.length >>> 0;\n\t  this.uint32(len);\n\t  if (len) this._push(writeBytesBuffer, len, value);\n\t  return this;\n\t};\n\t\n\tfunction writeStringBuffer(val, buf, pos) {\n\t  if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n\t    util.utf8.write(val, buf, pos);else buf.utf8Write(val, pos);\n\t}\n\t/**\r\n\t * @override\r\n\t */\n\t\n\t\n\tBufferWriter.prototype.string = function write_string_buffer(value) {\n\t  var len = Buffer.byteLength(value);\n\t  this.uint32(len);\n\t  if (len) this._push(writeStringBuffer, len, value);\n\t  return this;\n\t};\n\t/**\r\n\t * Finishes the write operation.\r\n\t * @name BufferWriter#finish\r\n\t * @function\r\n\t * @returns {Buffer} Finished buffer\r\n\t */\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = Reader;\n\t\n\tvar util = __webpack_require__(33);\n\t\n\tvar BufferReader; // cyclic\n\t\n\tvar LongBits = util.LongBits,\n\t    utf8 = util.utf8;\n\t/* istanbul ignore next */\n\t\n\tfunction indexOutOfRange(reader, writeLength) {\n\t  return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n\t}\n\t/**\r\n\t * Constructs a new reader instance using the specified buffer.\r\n\t * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n\t * @constructor\r\n\t * @param {Uint8Array} buffer Buffer to read from\r\n\t */\n\t\n\t\n\tfunction Reader(buffer) {\n\t  /**\r\n\t   * Read buffer.\r\n\t   * @type {Uint8Array}\r\n\t   */\n\t  this.buf = buffer;\n\t  /**\r\n\t   * Read buffer position.\r\n\t   * @type {number}\r\n\t   */\n\t\n\t  this.pos = 0;\n\t  /**\r\n\t   * Read buffer length.\r\n\t   * @type {number}\r\n\t   */\n\t\n\t  this.len = buffer.length;\n\t}\n\t\n\tvar create_array = typeof Uint8Array !== \"undefined\" ? function create_typed_array(buffer) {\n\t  if (buffer instanceof Uint8Array || Array.isArray(buffer)) return new Reader(buffer);\n\t  throw Error(\"illegal buffer\");\n\t}\n\t/* istanbul ignore next */\n\t: function create_array(buffer) {\n\t  if (Array.isArray(buffer)) return new Reader(buffer);\n\t  throw Error(\"illegal buffer\");\n\t};\n\t/**\r\n\t * Creates a new reader using the specified buffer.\r\n\t * @function\r\n\t * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n\t * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n\t * @throws {Error} If `buffer` is not a valid buffer\r\n\t */\n\t\n\tReader.create = util.Buffer ? function create_buffer_setup(buffer) {\n\t  return (Reader.create = function create_buffer(buffer) {\n\t    return util.Buffer.isBuffer(buffer) ? new BufferReader(buffer)\n\t    /* istanbul ignore next */\n\t    : create_array(buffer);\n\t  })(buffer);\n\t}\n\t/* istanbul ignore next */\n\t: create_array;\n\tReader.prototype._slice = util.Array.prototype.subarray ||\n\t/* istanbul ignore next */\n\tutil.Array.prototype.slice;\n\t/**\r\n\t * Reads a varint as an unsigned 32 bit value.\r\n\t * @function\r\n\t * @returns {number} Value read\r\n\t */\n\t\n\tReader.prototype.uint32 = function read_uint32_setup() {\n\t  var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n\t\n\t  return function read_uint32() {\n\t    value = (this.buf[this.pos] & 127) >>> 0;\n\t    if (this.buf[this.pos++] < 128) return value;\n\t    value = (value | (this.buf[this.pos] & 127) << 7) >>> 0;\n\t    if (this.buf[this.pos++] < 128) return value;\n\t    value = (value | (this.buf[this.pos] & 127) << 14) >>> 0;\n\t    if (this.buf[this.pos++] < 128) return value;\n\t    value = (value | (this.buf[this.pos] & 127) << 21) >>> 0;\n\t    if (this.buf[this.pos++] < 128) return value;\n\t    value = (value | (this.buf[this.pos] & 15) << 28) >>> 0;\n\t    if (this.buf[this.pos++] < 128) return value;\n\t    /* istanbul ignore if */\n\t\n\t    if ((this.pos += 5) > this.len) {\n\t      this.pos = this.len;\n\t      throw indexOutOfRange(this, 10);\n\t    }\n\t\n\t    return value;\n\t  };\n\t}();\n\t/**\r\n\t * Reads a varint as a signed 32 bit value.\r\n\t * @returns {number} Value read\r\n\t */\n\t\n\t\n\tReader.prototype.int32 = function read_int32() {\n\t  return this.uint32() | 0;\n\t};\n\t/**\r\n\t * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n\t * @returns {number} Value read\r\n\t */\n\t\n\t\n\tReader.prototype.sint32 = function read_sint32() {\n\t  var value = this.uint32();\n\t  return value >>> 1 ^ -(value & 1) | 0;\n\t};\n\t/* eslint-disable no-invalid-this */\n\t\n\t\n\tfunction readLongVarint() {\n\t  // tends to deopt with local vars for octet etc.\n\t  var bits = new LongBits(0, 0);\n\t  var i = 0;\n\t\n\t  if (this.len - this.pos > 4) {\n\t    // fast route (lo)\n\t    for (; i < 4; ++i) {\n\t      // 1st..4th\n\t      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n\t      if (this.buf[this.pos++] < 128) return bits;\n\t    } // 5th\n\t\n\t\n\t    bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n\t    bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0;\n\t    if (this.buf[this.pos++] < 128) return bits;\n\t    i = 0;\n\t  } else {\n\t    for (; i < 3; ++i) {\n\t      /* istanbul ignore if */\n\t      if (this.pos >= this.len) throw indexOutOfRange(this); // 1st..3th\n\t\n\t      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n\t      if (this.buf[this.pos++] < 128) return bits;\n\t    } // 4th\n\t\n\t\n\t    bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n\t    return bits;\n\t  }\n\t\n\t  if (this.len - this.pos > 4) {\n\t    // fast route (hi)\n\t    for (; i < 5; ++i) {\n\t      // 6th..10th\n\t      bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n\t      if (this.buf[this.pos++] < 128) return bits;\n\t    }\n\t  } else {\n\t    for (; i < 5; ++i) {\n\t      /* istanbul ignore if */\n\t      if (this.pos >= this.len) throw indexOutOfRange(this); // 6th..10th\n\t\n\t      bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n\t      if (this.buf[this.pos++] < 128) return bits;\n\t    }\n\t  }\n\t  /* istanbul ignore next */\n\t\n\t\n\t  throw Error(\"invalid varint encoding\");\n\t}\n\t/* eslint-enable no-invalid-this */\n\t\n\t/**\r\n\t * Reads a varint as a signed 64 bit value.\r\n\t * @name Reader#int64\r\n\t * @function\r\n\t * @returns {Long} Value read\r\n\t */\n\t\n\t/**\r\n\t * Reads a varint as an unsigned 64 bit value.\r\n\t * @name Reader#uint64\r\n\t * @function\r\n\t * @returns {Long} Value read\r\n\t */\n\t\n\t/**\r\n\t * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n\t * @name Reader#sint64\r\n\t * @function\r\n\t * @returns {Long} Value read\r\n\t */\n\t\n\t/**\r\n\t * Reads a varint as a boolean.\r\n\t * @returns {boolean} Value read\r\n\t */\n\t\n\t\n\tReader.prototype.bool = function read_bool() {\n\t  return this.uint32() !== 0;\n\t};\n\t\n\tfunction readFixed32_end(buf, end) {\n\t  // note that this uses `end`, not `pos`\n\t  return (buf[end - 4] | buf[end - 3] << 8 | buf[end - 2] << 16 | buf[end - 1] << 24) >>> 0;\n\t}\n\t/**\r\n\t * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n\t * @returns {number} Value read\r\n\t */\n\t\n\t\n\tReader.prototype.fixed32 = function read_fixed32() {\n\t  /* istanbul ignore if */\n\t  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n\t  return readFixed32_end(this.buf, this.pos += 4);\n\t};\n\t/**\r\n\t * Reads fixed 32 bits as a signed 32 bit integer.\r\n\t * @returns {number} Value read\r\n\t */\n\t\n\t\n\tReader.prototype.sfixed32 = function read_sfixed32() {\n\t  /* istanbul ignore if */\n\t  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n\t  return readFixed32_end(this.buf, this.pos += 4) | 0;\n\t};\n\t/* eslint-disable no-invalid-this */\n\t\n\t\n\tfunction readFixed64()\n\t/* this: Reader */\n\t{\n\t  /* istanbul ignore if */\n\t  if (this.pos + 8 > this.len) throw indexOutOfRange(this, 8);\n\t  return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n\t}\n\t/* eslint-enable no-invalid-this */\n\t\n\t/**\r\n\t * Reads fixed 64 bits.\r\n\t * @name Reader#fixed64\r\n\t * @function\r\n\t * @returns {Long} Value read\r\n\t */\n\t\n\t/**\r\n\t * Reads zig-zag encoded fixed 64 bits.\r\n\t * @name Reader#sfixed64\r\n\t * @function\r\n\t * @returns {Long} Value read\r\n\t */\n\t\n\t/**\r\n\t * Reads a float (32 bit) as a number.\r\n\t * @function\r\n\t * @returns {number} Value read\r\n\t */\n\t\n\t\n\tReader.prototype.float = function read_float() {\n\t  /* istanbul ignore if */\n\t  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n\t  var value = util.float.readFloatLE(this.buf, this.pos);\n\t  this.pos += 4;\n\t  return value;\n\t};\n\t/**\r\n\t * Reads a double (64 bit float) as a number.\r\n\t * @function\r\n\t * @returns {number} Value read\r\n\t */\n\t\n\t\n\tReader.prototype.double = function read_double() {\n\t  /* istanbul ignore if */\n\t  if (this.pos + 8 > this.len) throw indexOutOfRange(this, 4);\n\t  var value = util.float.readDoubleLE(this.buf, this.pos);\n\t  this.pos += 8;\n\t  return value;\n\t};\n\t/**\r\n\t * Reads a sequence of bytes preceeded by its length as a varint.\r\n\t * @returns {Uint8Array} Value read\r\n\t */\n\t\n\t\n\tReader.prototype.bytes = function read_bytes() {\n\t  var length = this.uint32(),\n\t      start = this.pos,\n\t      end = this.pos + length;\n\t  /* istanbul ignore if */\n\t\n\t  if (end > this.len) throw indexOutOfRange(this, length);\n\t  this.pos += length;\n\t  if (Array.isArray(this.buf)) // plain array\n\t    return this.buf.slice(start, end);\n\t  return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n\t  ? new this.buf.constructor(0) : this._slice.call(this.buf, start, end);\n\t};\n\t/**\r\n\t * Reads a string preceeded by its byte length as a varint.\r\n\t * @returns {string} Value read\r\n\t */\n\t\n\t\n\tReader.prototype.string = function read_string() {\n\t  var bytes = this.bytes();\n\t  return utf8.read(bytes, 0, bytes.length);\n\t};\n\t/**\r\n\t * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n\t * @param {number} [length] Length if known, otherwise a varint is assumed\r\n\t * @returns {Reader} `this`\r\n\t */\n\t\n\t\n\tReader.prototype.skip = function skip(length) {\n\t  if (typeof length === \"number\") {\n\t    /* istanbul ignore if */\n\t    if (this.pos + length > this.len) throw indexOutOfRange(this, length);\n\t    this.pos += length;\n\t  } else {\n\t    do {\n\t      /* istanbul ignore if */\n\t      if (this.pos >= this.len) throw indexOutOfRange(this);\n\t    } while (this.buf[this.pos++] & 128);\n\t  }\n\t\n\t  return this;\n\t};\n\t/**\r\n\t * Skips the next element of the specified wire type.\r\n\t * @param {number} wireType Wire type received\r\n\t * @returns {Reader} `this`\r\n\t */\n\t\n\t\n\tReader.prototype.skipType = function (wireType) {\n\t  switch (wireType) {\n\t    case 0:\n\t      this.skip();\n\t      break;\n\t\n\t    case 1:\n\t      this.skip(8);\n\t      break;\n\t\n\t    case 2:\n\t      this.skip(this.uint32());\n\t      break;\n\t\n\t    case 3:\n\t      while ((wireType = this.uint32() & 7) !== 4) {\n\t        this.skipType(wireType);\n\t      }\n\t\n\t      break;\n\t\n\t    case 5:\n\t      this.skip(4);\n\t      break;\n\t\n\t    /* istanbul ignore next */\n\t\n\t    default:\n\t      throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tReader._configure = function (BufferReader_) {\n\t  BufferReader = BufferReader_;\n\t  var fn = util.Long ? \"toLong\" :\n\t  /* istanbul ignore next */\n\t  \"toNumber\";\n\t  util.merge(Reader.prototype, {\n\t    int64: function read_int64() {\n\t      return readLongVarint.call(this)[fn](false);\n\t    },\n\t    uint64: function read_uint64() {\n\t      return readLongVarint.call(this)[fn](true);\n\t    },\n\t    sint64: function read_sint64() {\n\t      return readLongVarint.call(this).zzDecode()[fn](false);\n\t    },\n\t    fixed64: function read_fixed64() {\n\t      return readFixed64.call(this)[fn](true);\n\t    },\n\t    sfixed64: function read_sfixed64() {\n\t      return readFixed64.call(this)[fn](false);\n\t    }\n\t  });\n\t};\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = BufferReader; // extends Reader\n\t\n\tvar Reader = __webpack_require__(43);\n\t\n\t(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\t\n\tvar util = __webpack_require__(33);\n\t/**\r\n\t * Constructs a new buffer reader instance.\r\n\t * @classdesc Wire format reader using node buffers.\r\n\t * @extends Reader\r\n\t * @constructor\r\n\t * @param {Buffer} buffer Buffer to read from\r\n\t */\n\t\n\t\n\tfunction BufferReader(buffer) {\n\t  Reader.call(this, buffer);\n\t  /**\r\n\t   * Read buffer.\r\n\t   * @name BufferReader#buf\r\n\t   * @type {Buffer}\r\n\t   */\n\t}\n\t/* istanbul ignore else */\n\t\n\t\n\tif (util.Buffer) BufferReader.prototype._slice = util.Buffer.prototype.slice;\n\t/**\r\n\t * @override\r\n\t */\n\t\n\tBufferReader.prototype.string = function read_string_buffer() {\n\t  var len = this.uint32(); // modifies pos\n\t\n\t  return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\n\t};\n\t/**\r\n\t * Reads a sequence of bytes preceeded by its length as a varint.\r\n\t * @name BufferReader#bytes\r\n\t * @function\r\n\t * @returns {Buffer} Value read\r\n\t */\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/**\r\n\t * Streaming RPC helpers.\r\n\t * @namespace\r\n\t */\n\t\n\tvar rpc = exports;\n\t/**\r\n\t * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n\t * @typedef RPCImpl\r\n\t * @type {function}\r\n\t * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n\t * @param {Uint8Array} requestData Request data\r\n\t * @param {RPCImplCallback} callback Callback function\r\n\t * @returns {undefined}\r\n\t * @example\r\n\t * function rpcImpl(method, requestData, callback) {\r\n\t *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n\t *         throw Error(\"no such method\");\r\n\t *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n\t *         callback(err, responseData);\r\n\t *     });\r\n\t * }\r\n\t */\n\t\n\t/**\r\n\t * Node-style callback as used by {@link RPCImpl}.\r\n\t * @typedef RPCImplCallback\r\n\t * @type {function}\r\n\t * @param {Error|null} error Error, if any, otherwise `null`\r\n\t * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n\t * @returns {undefined}\r\n\t */\n\t\n\trpc.Service = __webpack_require__(46);\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = Service;\n\t\n\tvar util = __webpack_require__(33); // Extends EventEmitter\n\t\n\t\n\t(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\t/**\r\n\t * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n\t *\r\n\t * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n\t * @typedef rpc.ServiceMethodCallback\r\n\t * @template TRes extends Message<TRes>\r\n\t * @type {function}\r\n\t * @param {Error|null} error Error, if any\r\n\t * @param {TRes} [response] Response message\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t/**\r\n\t * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n\t * @typedef rpc.ServiceMethod\r\n\t * @template TReq extends Message<TReq>\r\n\t * @template TRes extends Message<TRes>\r\n\t * @type {function}\r\n\t * @param {TReq|Properties<TReq>} request Request message or plain object\r\n\t * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n\t * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n\t */\n\t\n\t/**\r\n\t * Constructs a new RPC service instance.\r\n\t * @classdesc An RPC service as returned by {@link Service#create}.\r\n\t * @exports rpc.Service\r\n\t * @extends util.EventEmitter\r\n\t * @constructor\r\n\t * @param {RPCImpl} rpcImpl RPC implementation\r\n\t * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n\t * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n\t */\n\t\n\tfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\t  if (typeof rpcImpl !== \"function\") throw TypeError(\"rpcImpl must be a function\");\n\t  util.EventEmitter.call(this);\n\t  /**\r\n\t   * RPC implementation. Becomes `null` once the service is ended.\r\n\t   * @type {RPCImpl|null}\r\n\t   */\n\t\n\t  this.rpcImpl = rpcImpl;\n\t  /**\r\n\t   * Whether requests are length-delimited.\r\n\t   * @type {boolean}\r\n\t   */\n\t\n\t  this.requestDelimited = Boolean(requestDelimited);\n\t  /**\r\n\t   * Whether responses are length-delimited.\r\n\t   * @type {boolean}\r\n\t   */\n\t\n\t  this.responseDelimited = Boolean(responseDelimited);\n\t}\n\t/**\r\n\t * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n\t * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n\t * @param {Constructor<TReq>} requestCtor Request constructor\r\n\t * @param {Constructor<TRes>} responseCtor Response constructor\r\n\t * @param {TReq|Properties<TReq>} request Request message or plain object\r\n\t * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n\t * @returns {undefined}\r\n\t * @template TReq extends Message<TReq>\r\n\t * @template TRes extends Message<TRes>\r\n\t */\n\t\n\t\n\tService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\t  if (!request) throw TypeError(\"request must be specified\");\n\t  var self = this;\n\t  if (!callback) return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\t\n\t  if (!self.rpcImpl) {\n\t    setTimeout(function () {\n\t      callback(Error(\"already ended\"));\n\t    }, 0);\n\t    return undefined;\n\t  }\n\t\n\t  try {\n\t    return self.rpcImpl(method, requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(), function rpcCallback(err, response) {\n\t      if (err) {\n\t        self.emit(\"error\", err, method);\n\t        return callback(err);\n\t      }\n\t\n\t      if (response === null) {\n\t        self.end(\n\t        /* endedByRPC */\n\t        true);\n\t        return undefined;\n\t      }\n\t\n\t      if (!(response instanceof responseCtor)) {\n\t        try {\n\t          response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n\t        } catch (err) {\n\t          self.emit(\"error\", err, method);\n\t          return callback(err);\n\t        }\n\t      }\n\t\n\t      self.emit(\"data\", response, method);\n\t      return callback(null, response);\n\t    });\n\t  } catch (err) {\n\t    self.emit(\"error\", err, method);\n\t    setTimeout(function () {\n\t      callback(err);\n\t    }, 0);\n\t    return undefined;\n\t  }\n\t};\n\t/**\r\n\t * Ends this service and emits the `end` event.\r\n\t * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n\t * @returns {rpc.Service} `this`\r\n\t */\n\t\n\t\n\tService.prototype.end = function end(endedByRPC) {\n\t  if (this.rpcImpl) {\n\t    if (!endedByRPC) // signal end to rpcImpl\n\t      this.rpcImpl(null, null, null);\n\t    this.rpcImpl = null;\n\t    this.emit(\"end\").off();\n\t  }\n\t\n\t  return this;\n\t};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {};\n\t/**\r\n\t * Named roots.\r\n\t * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n\t * Can also be used manually to make roots available accross modules.\r\n\t * @name roots\r\n\t * @type {Object.<string,Root>}\r\n\t * @example\r\n\t * // pbjs -r myroot -o compiled.js ...\r\n\t *\r\n\t * // in another module:\r\n\t * require(\"./compiled.js\");\r\n\t *\r\n\t * // in any subsequent module:\r\n\t * var root = protobuf.roots[\"myroot\"];\r\n\t */\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = encoder;\n\t\n\tvar Enum = __webpack_require__(49),\n\t    types = __webpack_require__(58),\n\t    util = __webpack_require__(51);\n\t/**\r\n\t * Generates a partial message type encoder.\r\n\t * @param {Codegen} gen Codegen instance\r\n\t * @param {Field} field Reflected field\r\n\t * @param {number} fieldIndex Field index\r\n\t * @param {string} ref Variable reference\r\n\t * @returns {Codegen} Codegen instance\r\n\t * @ignore\r\n\t */\n\t\n\t\n\tfunction genTypePartial(gen, field, fieldIndex, ref) {\n\t  return field.resolvedType.group ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0) : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n\t}\n\t/**\r\n\t * Generates an encoder specific to the specified message type.\r\n\t * @param {Type} mtype Message type\r\n\t * @returns {Codegen} Codegen instance\r\n\t */\n\t\n\t\n\tfunction encoder(mtype) {\n\t  /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n\t  var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")(\"if(!w)\")(\"w=Writer.create()\");\n\t  var i, ref; // \"when a message is serialized its known fields should be written sequentially by field number\"\n\t\n\t  var fields =\n\t  /* initializes */\n\t  mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\t\n\t  for (var i = 0; i < fields.length; ++i) {\n\t    var field = fields[i].resolve(),\n\t        index = mtype._fieldsArray.indexOf(field),\n\t        type = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n\t        wireType = types.basic[type];\n\t\n\t    ref = \"m\" + util.safeProp(field.name); // Map fields\n\t\n\t    if (field.map) {\n\t      gen(\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name) // !== undefined && !== null\n\t      (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)(\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n\t      if (wireType === undefined) gen(\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n\t      else gen(\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n\t      gen(\"}\")(\"}\"); // Repeated fields\n\t    } else if (field.repeated) {\n\t      gen(\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\t      // Packed repeated\n\t\n\t      if (field.packed && types.packed[type] !== undefined) {\n\t        gen(\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)(\"for(var i=0;i<%s.length;++i)\", ref)(\"w.%s(%s[i])\", type, ref)(\"w.ldelim()\"); // Non-packed\n\t      } else {\n\t        gen(\"for(var i=0;i<%s.length;++i)\", ref);\n\t        if (wireType === undefined) genTypePartial(gen, field, index, ref + \"[i]\");else gen(\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\t      }\n\t\n\t      gen(\"}\"); // Non-repeated\n\t    } else {\n\t      if (field.optional) gen(\"if(%s!=null&&m.hasOwnProperty(%j))\", ref, field.name); // !== undefined && !== null\n\t\n\t      if (wireType === undefined) genTypePartial(gen, field, index, ref);else gen(\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\t    }\n\t  }\n\t\n\t  return gen(\"return w\");\n\t  /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n\t}\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\t\n\tmodule.exports = Enum; // extends ReflectionObject\n\t\n\tvar ReflectionObject = __webpack_require__(50);\n\t\n\t((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\t\n\tvar Namespace = __webpack_require__(56),\n\t    util = __webpack_require__(51);\n\t/**\r\n\t * Constructs a new enum instance.\r\n\t * @classdesc Reflected enum.\r\n\t * @extends ReflectionObject\r\n\t * @constructor\r\n\t * @param {string} name Unique name within its namespace\r\n\t * @param {Object.<string,number>} [values] Enum values as an object, by name\r\n\t * @param {Object.<string,*>} [options] Declared options\r\n\t * @param {string} [comment] The comment for this enum\r\n\t * @param {Object.<string,string>} [comments] The value comments for this enum\r\n\t */\n\t\n\t\n\tfunction Enum(name, values, options, comment, comments) {\n\t  ReflectionObject.call(this, name, options);\n\t  if (values && _typeof(values) !== \"object\") throw TypeError(\"values must be an object\");\n\t  /**\r\n\t   * Enum values by id.\r\n\t   * @type {Object.<number,string>}\r\n\t   */\n\t\n\t  this.valuesById = {};\n\t  /**\r\n\t   * Enum values by name.\r\n\t   * @type {Object.<string,number>}\r\n\t   */\n\t\n\t  this.values = Object.create(this.valuesById); // toJSON, marker\n\t\n\t  /**\r\n\t   * Enum comment text.\r\n\t   * @type {string|null}\r\n\t   */\n\t\n\t  this.comment = comment;\n\t  /**\r\n\t   * Value comment texts, if any.\r\n\t   * @type {Object.<string,string>}\r\n\t   */\n\t\n\t  this.comments = comments || {};\n\t  /**\r\n\t   * Reserved ranges, if any.\r\n\t   * @type {Array.<number[]|string>}\r\n\t   */\n\t\n\t  this.reserved = undefined; // toJSON\n\t  // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n\t  // compatible enum. This is used by pbts to write actual enum definitions that work for\n\t  // static and reflection code alike instead of emitting generic object definitions.\n\t\n\t  if (values) for (var keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n\t    if (typeof values[keys[i]] === \"number\") // use forward entries only\n\t      this.valuesById[this.values[keys[i]] = values[keys[i]]] = keys[i];\n\t  }\n\t}\n\t/**\r\n\t * Enum descriptor.\r\n\t * @interface IEnum\r\n\t * @property {Object.<string,number>} values Enum values\r\n\t * @property {Object.<string,*>} [options] Enum options\r\n\t */\n\t\n\t/**\r\n\t * Constructs an enum from an enum descriptor.\r\n\t * @param {string} name Enum name\r\n\t * @param {IEnum} json Enum descriptor\r\n\t * @returns {Enum} Created enum\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t */\n\t\n\t\n\tEnum.fromJSON = function fromJSON(name, json) {\n\t  var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n\t  enm.reserved = json.reserved;\n\t  return enm;\n\t};\n\t/**\r\n\t * Converts this enum to an enum descriptor.\r\n\t * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n\t * @returns {IEnum} Enum descriptor\r\n\t */\n\t\n\t\n\tEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n\t  var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n\t  return util.toObject([\"options\", this.options, \"values\", this.values, \"reserved\", this.reserved && this.reserved.length ? this.reserved : undefined, \"comment\", keepComments ? this.comment : undefined, \"comments\", keepComments ? this.comments : undefined]);\n\t};\n\t/**\r\n\t * Adds a value to this enum.\r\n\t * @param {string} name Value name\r\n\t * @param {number} id Value id\r\n\t * @param {string} [comment] Comment, if any\r\n\t * @returns {Enum} `this`\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t * @throws {Error} If there is already a value with this name or id\r\n\t */\n\t\n\t\n\tEnum.prototype.add = function add(name, id, comment) {\n\t  // utilized by the parser but not by .fromJSON\n\t  if (!util.isString(name)) throw TypeError(\"name must be a string\");\n\t  if (!util.isInteger(id)) throw TypeError(\"id must be an integer\");\n\t  if (this.values[name] !== undefined) throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\t  if (this.isReservedId(id)) throw Error(\"id \" + id + \" is reserved in \" + this);\n\t  if (this.isReservedName(name)) throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\t\n\t  if (this.valuesById[id] !== undefined) {\n\t    if (!(this.options && this.options.allow_alias)) throw Error(\"duplicate id \" + id + \" in \" + this);\n\t    this.values[name] = id;\n\t  } else this.valuesById[this.values[name] = id] = name;\n\t\n\t  this.comments[name] = comment || null;\n\t  return this;\n\t};\n\t/**\r\n\t * Removes a value from this enum\r\n\t * @param {string} name Value name\r\n\t * @returns {Enum} `this`\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t * @throws {Error} If `name` is not a name of this enum\r\n\t */\n\t\n\t\n\tEnum.prototype.remove = function remove(name) {\n\t  if (!util.isString(name)) throw TypeError(\"name must be a string\");\n\t  var val = this.values[name];\n\t  if (val == null) throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\t  delete this.valuesById[val];\n\t  delete this.values[name];\n\t  delete this.comments[name];\n\t  return this;\n\t};\n\t/**\r\n\t * Tests if the specified id is reserved.\r\n\t * @param {number} id Id to test\r\n\t * @returns {boolean} `true` if reserved, otherwise `false`\r\n\t */\n\t\n\t\n\tEnum.prototype.isReservedId = function isReservedId(id) {\n\t  return Namespace.isReservedId(this.reserved, id);\n\t};\n\t/**\r\n\t * Tests if the specified name is reserved.\r\n\t * @param {string} name Name to test\r\n\t * @returns {boolean} `true` if reserved, otherwise `false`\r\n\t */\n\t\n\t\n\tEnum.prototype.isReservedName = function isReservedName(name) {\n\t  return Namespace.isReservedName(this.reserved, name);\n\t};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = ReflectionObject;\n\tReflectionObject.className = \"ReflectionObject\";\n\t\n\tvar util = __webpack_require__(51);\n\t\n\tvar Root; // cyclic\n\t\n\t/**\r\n\t * Constructs a new reflection object instance.\r\n\t * @classdesc Base class of all reflection objects.\r\n\t * @constructor\r\n\t * @param {string} name Object name\r\n\t * @param {Object.<string,*>} [options] Declared options\r\n\t * @abstract\r\n\t */\n\t\n\tfunction ReflectionObject(name, options) {\n\t  if (!util.isString(name)) throw TypeError(\"name must be a string\");\n\t  if (options && !util.isObject(options)) throw TypeError(\"options must be an object\");\n\t  /**\r\n\t   * Options.\r\n\t   * @type {Object.<string,*>|undefined}\r\n\t   */\n\t\n\t  this.options = options; // toJSON\n\t\n\t  /**\r\n\t   * Unique name within its namespace.\r\n\t   * @type {string}\r\n\t   */\n\t\n\t  this.name = name;\n\t  /**\r\n\t   * Parent namespace.\r\n\t   * @type {Namespace|null}\r\n\t   */\n\t\n\t  this.parent = null;\n\t  /**\r\n\t   * Whether already resolved or not.\r\n\t   * @type {boolean}\r\n\t   */\n\t\n\t  this.resolved = false;\n\t  /**\r\n\t   * Comment text, if any.\r\n\t   * @type {string|null}\r\n\t   */\n\t\n\t  this.comment = null;\n\t  /**\r\n\t   * Defining file name.\r\n\t   * @type {string|null}\r\n\t   */\n\t\n\t  this.filename = null;\n\t}\n\t\n\tObject.defineProperties(ReflectionObject.prototype, {\n\t  /**\r\n\t   * Reference to the root namespace.\r\n\t   * @name ReflectionObject#root\r\n\t   * @type {Root}\r\n\t   * @readonly\r\n\t   */\n\t  root: {\n\t    get: function get() {\n\t      var ptr = this;\n\t\n\t      while (ptr.parent !== null) {\n\t        ptr = ptr.parent;\n\t      }\n\t\n\t      return ptr;\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Full name including leading dot.\r\n\t   * @name ReflectionObject#fullName\r\n\t   * @type {string}\r\n\t   * @readonly\r\n\t   */\n\t  fullName: {\n\t    get: function get() {\n\t      var path = [this.name],\n\t          ptr = this.parent;\n\t\n\t      while (ptr) {\n\t        path.unshift(ptr.name);\n\t        ptr = ptr.parent;\n\t      }\n\t\n\t      return path.join(\".\");\n\t    }\n\t  }\n\t});\n\t/**\r\n\t * Converts this reflection object to its descriptor representation.\r\n\t * @returns {Object.<string,*>} Descriptor\r\n\t * @abstract\r\n\t */\n\t\n\tReflectionObject.prototype.toJSON =\n\t/* istanbul ignore next */\n\tfunction toJSON() {\n\t  throw Error(); // not implemented, shouldn't happen\n\t};\n\t/**\r\n\t * Called when this object is added to a parent.\r\n\t * @param {ReflectionObject} parent Parent added to\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t\n\tReflectionObject.prototype.onAdd = function onAdd(parent) {\n\t  if (this.parent && this.parent !== parent) this.parent.remove(this);\n\t  this.parent = parent;\n\t  this.resolved = false;\n\t  var root = parent.root;\n\t  if (root instanceof Root) root._handleAdd(this);\n\t};\n\t/**\r\n\t * Called when this object is removed from a parent.\r\n\t * @param {ReflectionObject} parent Parent removed from\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t\n\tReflectionObject.prototype.onRemove = function onRemove(parent) {\n\t  var root = parent.root;\n\t  if (root instanceof Root) root._handleRemove(this);\n\t  this.parent = null;\n\t  this.resolved = false;\n\t};\n\t/**\r\n\t * Resolves this objects type references.\r\n\t * @returns {ReflectionObject} `this`\r\n\t */\n\t\n\t\n\tReflectionObject.prototype.resolve = function resolve() {\n\t  if (this.resolved) return this;\n\t  if (this.root instanceof Root) this.resolved = true; // only if part of a root\n\t\n\t  return this;\n\t};\n\t/**\r\n\t * Gets an option value.\r\n\t * @param {string} name Option name\r\n\t * @returns {*} Option value or `undefined` if not set\r\n\t */\n\t\n\t\n\tReflectionObject.prototype.getOption = function getOption(name) {\n\t  if (this.options) return this.options[name];\n\t  return undefined;\n\t};\n\t/**\r\n\t * Sets an option.\r\n\t * @param {string} name Option name\r\n\t * @param {*} value Option value\r\n\t * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\r\n\t * @returns {ReflectionObject} `this`\r\n\t */\n\t\n\t\n\tReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n\t  if (!ifNotSet || !this.options || this.options[name] === undefined) (this.options || (this.options = {}))[name] = value;\n\t  return this;\n\t};\n\t/**\r\n\t * Sets multiple options.\r\n\t * @param {Object.<string,*>} options Options to set\r\n\t * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\r\n\t * @returns {ReflectionObject} `this`\r\n\t */\n\t\n\t\n\tReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n\t  if (options) for (var keys = Object.keys(options), i = 0; i < keys.length; ++i) {\n\t    this.setOption(keys[i], options[keys[i]], ifNotSet);\n\t  }\n\t  return this;\n\t};\n\t/**\r\n\t * Converts this instance to its string representation.\r\n\t * @returns {string} Class name[, space, full name]\r\n\t */\n\t\n\t\n\tReflectionObject.prototype.toString = function toString() {\n\t  var className = this.constructor.className,\n\t      fullName = this.fullName;\n\t  if (fullName.length) return className + \" \" + fullName;\n\t  return className;\n\t}; // Sets up cyclic dependencies (called in index-light)\n\t\n\t\n\tReflectionObject._configure = function (Root_) {\n\t  Root = Root_;\n\t};\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/**\r\n\t * Various utility functions.\r\n\t * @namespace\r\n\t */\n\t\n\tvar util = module.exports = __webpack_require__(33);\n\t\n\tvar roots = __webpack_require__(47);\n\t\n\tvar Type, // cyclic\n\tEnum;\n\tutil.codegen = __webpack_require__(52);\n\tutil.fetch = __webpack_require__(53);\n\tutil.path = __webpack_require__(54);\n\t/**\r\n\t * Node's fs module if available.\r\n\t * @type {Object.<string,*>}\r\n\t */\n\t\n\tutil.fs = util.inquire(\"fs\");\n\t/**\r\n\t * Converts an object's values to an array.\r\n\t * @param {Object.<string,*>} object Object to convert\r\n\t * @returns {Array.<*>} Converted array\r\n\t */\n\t\n\tutil.toArray = function toArray(object) {\n\t  if (object) {\n\t    var keys = Object.keys(object),\n\t        array = new Array(keys.length),\n\t        index = 0;\n\t\n\t    while (index < keys.length) {\n\t      array[index] = object[keys[index++]];\n\t    }\n\t\n\t    return array;\n\t  }\n\t\n\t  return [];\n\t};\n\t/**\r\n\t * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n\t * @param {Array.<*>} array Array to convert\r\n\t * @returns {Object.<string,*>} Converted object\r\n\t */\n\t\n\t\n\tutil.toObject = function toObject(array) {\n\t  var object = {},\n\t      index = 0;\n\t\n\t  while (index < array.length) {\n\t    var key = array[index++],\n\t        val = array[index++];\n\t    if (val !== undefined) object[key] = val;\n\t  }\n\t\n\t  return object;\n\t};\n\t\n\tvar safePropBackslashRe = /\\\\/g,\n\t    safePropQuoteRe = /\"/g;\n\t/**\r\n\t * Tests whether the specified name is a reserved word in JS.\r\n\t * @param {string} name Name to test\r\n\t * @returns {boolean} `true` if reserved, otherwise `false`\r\n\t */\n\t\n\tutil.isReserved = function isReserved(name) {\n\t  return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n\t};\n\t/**\r\n\t * Returns a safe property accessor for the specified property name.\r\n\t * @param {string} prop Property name\r\n\t * @returns {string} Safe accessor\r\n\t */\n\t\n\t\n\tutil.safeProp = function safeProp(prop) {\n\t  if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop)) return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n\t  return \".\" + prop;\n\t};\n\t/**\r\n\t * Converts the first character of a string to upper case.\r\n\t * @param {string} str String to convert\r\n\t * @returns {string} Converted string\r\n\t */\n\t\n\t\n\tutil.ucFirst = function ucFirst(str) {\n\t  return str.charAt(0).toUpperCase() + str.substring(1);\n\t};\n\t\n\tvar camelCaseRe = /_([a-z])/g;\n\t/**\r\n\t * Converts a string to camel case.\r\n\t * @param {string} str String to convert\r\n\t * @returns {string} Converted string\r\n\t */\n\t\n\tutil.camelCase = function camelCase(str) {\n\t  return str.substring(0, 1) + str.substring(1).replace(camelCaseRe, function ($0, $1) {\n\t    return $1.toUpperCase();\n\t  });\n\t};\n\t/**\r\n\t * Compares reflected fields by id.\r\n\t * @param {Field} a First field\r\n\t * @param {Field} b Second field\r\n\t * @returns {number} Comparison value\r\n\t */\n\t\n\t\n\tutil.compareFieldsById = function compareFieldsById(a, b) {\n\t  return a.id - b.id;\n\t};\n\t/**\r\n\t * Decorator helper for types (TypeScript).\r\n\t * @param {Constructor<T>} ctor Constructor function\r\n\t * @param {string} [typeName] Type name, defaults to the constructor's name\r\n\t * @returns {Type} Reflected type\r\n\t * @template T extends Message<T>\r\n\t * @property {Root} root Decorators root\r\n\t */\n\t\n\t\n\tutil.decorateType = function decorateType(ctor, typeName) {\n\t  /* istanbul ignore if */\n\t  if (ctor.$type) {\n\t    if (typeName && ctor.$type.name !== typeName) {\n\t      util.decorateRoot.remove(ctor.$type);\n\t      ctor.$type.name = typeName;\n\t      util.decorateRoot.add(ctor.$type);\n\t    }\n\t\n\t    return ctor.$type;\n\t  }\n\t  /* istanbul ignore next */\n\t\n\t\n\t  if (!Type) Type = __webpack_require__(55);\n\t  var type = new Type(typeName || ctor.name);\n\t  util.decorateRoot.add(type);\n\t  type.ctor = ctor; // sets up .encode, .decode etc.\n\t\n\t  Object.defineProperty(ctor, \"$type\", {\n\t    value: type,\n\t    enumerable: false\n\t  });\n\t  Object.defineProperty(ctor.prototype, \"$type\", {\n\t    value: type,\n\t    enumerable: false\n\t  });\n\t  return type;\n\t};\n\t\n\tvar decorateEnumIndex = 0;\n\t/**\r\n\t * Decorator helper for enums (TypeScript).\r\n\t * @param {Object} object Enum object\r\n\t * @returns {Enum} Reflected enum\r\n\t */\n\t\n\tutil.decorateEnum = function decorateEnum(object) {\n\t  /* istanbul ignore if */\n\t  if (object.$type) return object.$type;\n\t  /* istanbul ignore next */\n\t\n\t  if (!Enum) Enum = __webpack_require__(49);\n\t  var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n\t  util.decorateRoot.add(enm);\n\t  Object.defineProperty(object, \"$type\", {\n\t    value: enm,\n\t    enumerable: false\n\t  });\n\t  return enm;\n\t};\n\t/**\r\n\t * Decorator root (TypeScript).\r\n\t * @name util.decorateRoot\r\n\t * @type {Root}\r\n\t * @readonly\r\n\t */\n\t\n\t\n\tObject.defineProperty(util, \"decorateRoot\", {\n\t  get: function get() {\n\t    return roots[\"decorated\"] || (roots[\"decorated\"] = new (__webpack_require__(68))());\n\t  }\n\t});\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = codegen;\n\t/**\r\n\t * Begins generating a function.\r\n\t * @memberof util\r\n\t * @param {string[]} functionParams Function parameter names\r\n\t * @param {string} [functionName] Function name if not anonymous\r\n\t * @returns {Codegen} Appender that appends code to the function's body\r\n\t */\n\t\n\tfunction codegen(functionParams, functionName) {\n\t  /* istanbul ignore if */\n\t  if (typeof functionParams === \"string\") {\n\t    functionName = functionParams;\n\t    functionParams = undefined;\n\t  }\n\t\n\t  var body = [];\n\t  /**\r\n\t   * Appends code to the function's body or finishes generation.\r\n\t   * @typedef Codegen\r\n\t   * @type {function}\r\n\t   * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n\t   * @param {...*} [formatParams] Format parameters\r\n\t   * @returns {Codegen|Function} Itself or the generated function if finished\r\n\t   * @throws {Error} If format parameter counts do not match\r\n\t   */\n\t\n\t  function Codegen(formatStringOrScope) {\n\t    // note that explicit array handling below makes this ~50% faster\n\t    // finish the function\n\t    if (typeof formatStringOrScope !== \"string\") {\n\t      var source = toString();\n\t      if (codegen.verbose) console.log(\"codegen: \" + source); // eslint-disable-line no-console\n\t\n\t      source = \"return \" + source;\n\t\n\t      if (formatStringOrScope) {\n\t        var scopeKeys = Object.keys(formatStringOrScope),\n\t            scopeParams = new Array(scopeKeys.length + 1),\n\t            scopeValues = new Array(scopeKeys.length),\n\t            scopeOffset = 0;\n\t\n\t        while (scopeOffset < scopeKeys.length) {\n\t          scopeParams[scopeOffset] = scopeKeys[scopeOffset];\n\t          scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\n\t        }\n\t\n\t        scopeParams[scopeOffset] = source;\n\t        return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\n\t      }\n\t\n\t      return Function(source)(); // eslint-disable-line no-new-func\n\t    } // otherwise append to body\n\t\n\t\n\t    var formatParams = new Array(arguments.length - 1),\n\t        formatOffset = 0;\n\t\n\t    while (formatOffset < formatParams.length) {\n\t      formatParams[formatOffset] = arguments[++formatOffset];\n\t    }\n\t\n\t    formatOffset = 0;\n\t    formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\n\t      var value = formatParams[formatOffset++];\n\t\n\t      switch ($1) {\n\t        case \"d\":\n\t        case \"f\":\n\t          return String(Number(value));\n\t\n\t        case \"i\":\n\t          return String(Math.floor(value));\n\t\n\t        case \"j\":\n\t          return JSON.stringify(value);\n\t\n\t        case \"s\":\n\t          return String(value);\n\t      }\n\t\n\t      return \"%\";\n\t    });\n\t    if (formatOffset !== formatParams.length) throw Error(\"parameter count mismatch\");\n\t    body.push(formatStringOrScope);\n\t    return Codegen;\n\t  }\n\t\n\t  function toString(functionNameOverride) {\n\t    return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\n\t  }\n\t\n\t  Codegen.toString = toString;\n\t  return Codegen;\n\t}\n\t/**\r\n\t * Begins generating a function.\r\n\t * @memberof util\r\n\t * @function codegen\r\n\t * @param {string} [functionName] Function name if not anonymous\r\n\t * @returns {Codegen} Appender that appends code to the function's body\r\n\t * @variation 2\r\n\t */\n\t\n\t/**\r\n\t * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n\t * @name util.codegen.verbose\r\n\t * @type {boolean}\r\n\t */\n\t\n\t\n\tcodegen.verbose = false;\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = fetch;\n\t\n\tvar asPromise = __webpack_require__(34),\n\t    inquire = __webpack_require__(38);\n\t\n\tvar fs = inquire(\"fs\");\n\t/**\r\n\t * Node-style callback as used by {@link util.fetch}.\r\n\t * @typedef FetchCallback\r\n\t * @type {function}\r\n\t * @param {?Error} error Error, if any, otherwise `null`\r\n\t * @param {string} [contents] File contents, if there hasn't been an error\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t/**\r\n\t * Options as used by {@link util.fetch}.\r\n\t * @typedef FetchOptions\r\n\t * @type {Object}\r\n\t * @property {boolean} [binary=false] Whether expecting a binary response\r\n\t * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n\t */\n\t\n\t/**\r\n\t * Fetches the contents of a file.\r\n\t * @memberof util\r\n\t * @param {string} filename File path or url\r\n\t * @param {FetchOptions} options Fetch options\r\n\t * @param {FetchCallback} callback Callback function\r\n\t * @returns {undefined}\r\n\t */\n\t\n\tfunction fetch(filename, options, callback) {\n\t  if (typeof options === \"function\") {\n\t    callback = options;\n\t    options = {};\n\t  } else if (!options) options = {};\n\t\n\t  if (!callback) return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\n\t  // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\n\t\n\t  if (!options.xhr && fs && fs.readFile) return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\n\t    return err && typeof XMLHttpRequest !== \"undefined\" ? fetch.xhr(filename, options, callback) : err ? callback(err) : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\n\t  }); // use the XHR version otherwise.\n\t\n\t  return fetch.xhr(filename, options, callback);\n\t}\n\t/**\r\n\t * Fetches the contents of a file.\r\n\t * @name util.fetch\r\n\t * @function\r\n\t * @param {string} path File path or url\r\n\t * @param {FetchCallback} callback Callback function\r\n\t * @returns {undefined}\r\n\t * @variation 2\r\n\t */\n\t\n\t/**\r\n\t * Fetches the contents of a file.\r\n\t * @name util.fetch\r\n\t * @function\r\n\t * @param {string} path File path or url\r\n\t * @param {FetchOptions} [options] Fetch options\r\n\t * @returns {Promise<string|Uint8Array>} Promise\r\n\t * @variation 3\r\n\t */\n\t\n\t/**/\n\t\n\t\n\tfetch.xhr = function fetch_xhr(filename, options, callback) {\n\t  var xhr = new XMLHttpRequest();\n\t\n\t  xhr.onreadystatechange\n\t  /* works everywhere */\n\t  = function fetchOnReadyStateChange() {\n\t    if (xhr.readyState !== 4) return undefined; // local cors security errors return status 0 / empty string, too. afaik this cannot be\n\t    // reliably distinguished from an actually empty file for security reasons. feel free\n\t    // to send a pull request if you are aware of a solution.\n\t\n\t    if (xhr.status !== 0 && xhr.status !== 200) return callback(Error(\"status \" + xhr.status)); // if binary data is expected, make sure that some sort of array is returned, even if\n\t    // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\n\t\n\t    if (options.binary) {\n\t      var buffer = xhr.response;\n\t\n\t      if (!buffer) {\n\t        buffer = [];\n\t\n\t        for (var i = 0; i < xhr.responseText.length; ++i) {\n\t          buffer.push(xhr.responseText.charCodeAt(i) & 255);\n\t        }\n\t      }\n\t\n\t      return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\n\t    }\n\t\n\t    return callback(null, xhr.responseText);\n\t  };\n\t\n\t  if (options.binary) {\n\t    // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\n\t    if (\"overrideMimeType\" in xhr) xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n\t    xhr.responseType = \"arraybuffer\";\n\t  }\n\t\n\t  xhr.open(\"GET\", filename);\n\t  xhr.send();\n\t};\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t/**\r\n\t * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n\t * @memberof util\r\n\t * @namespace\r\n\t */\n\t\n\tvar path = exports;\n\t\n\tvar isAbsolute =\n\t/**\r\n\t * Tests if the specified path is absolute.\r\n\t * @param {string} path Path to test\r\n\t * @returns {boolean} `true` if path is absolute\r\n\t */\n\tpath.isAbsolute = function isAbsolute(path) {\n\t  return /^(?:\\/|\\w+:)/.test(path);\n\t};\n\t\n\tvar normalize =\n\t/**\r\n\t * Normalizes the specified path.\r\n\t * @param {string} path Path to normalize\r\n\t * @returns {string} Normalized path\r\n\t */\n\tpath.normalize = function normalize(path) {\n\t  path = path.replace(/\\\\/g, \"/\").replace(/\\/{2,}/g, \"/\");\n\t  var parts = path.split(\"/\"),\n\t      absolute = isAbsolute(path),\n\t      prefix = \"\";\n\t  if (absolute) prefix = parts.shift() + \"/\";\n\t\n\t  for (var i = 0; i < parts.length;) {\n\t    if (parts[i] === \"..\") {\n\t      if (i > 0 && parts[i - 1] !== \"..\") parts.splice(--i, 2);else if (absolute) parts.splice(i, 1);else ++i;\n\t    } else if (parts[i] === \".\") parts.splice(i, 1);else ++i;\n\t  }\n\t\n\t  return prefix + parts.join(\"/\");\n\t};\n\t/**\r\n\t * Resolves the specified include path against the specified origin path.\r\n\t * @param {string} originPath Path to the origin file\r\n\t * @param {string} includePath Include path relative to origin path\r\n\t * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n\t * @returns {string} Path to the include file\r\n\t */\n\t\n\t\n\tpath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\n\t  if (!alreadyNormalized) includePath = normalize(includePath);\n\t  if (isAbsolute(includePath)) return includePath;\n\t  if (!alreadyNormalized) originPath = normalize(originPath);\n\t  return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\n\t};\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = Type; // extends Namespace\n\t\n\tvar Namespace = __webpack_require__(56);\n\t\n\t((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\t\n\tvar Enum = __webpack_require__(49),\n\t    OneOf = __webpack_require__(59),\n\t    Field = __webpack_require__(57),\n\t    MapField = __webpack_require__(60),\n\t    Service = __webpack_require__(61),\n\t    Message = __webpack_require__(63),\n\t    Reader = __webpack_require__(43),\n\t    Writer = __webpack_require__(32),\n\t    util = __webpack_require__(51),\n\t    encoder = __webpack_require__(48),\n\t    decoder = __webpack_require__(64),\n\t    verifier = __webpack_require__(65),\n\t    converter = __webpack_require__(66),\n\t    wrappers = __webpack_require__(67);\n\t/**\r\n\t * Constructs a new reflected message type instance.\r\n\t * @classdesc Reflected message type.\r\n\t * @extends NamespaceBase\r\n\t * @constructor\r\n\t * @param {string} name Message name\r\n\t * @param {Object.<string,*>} [options] Declared options\r\n\t */\n\t\n\t\n\tfunction Type(name, options) {\n\t  Namespace.call(this, name, options);\n\t  /**\r\n\t   * Message fields.\r\n\t   * @type {Object.<string,Field>}\r\n\t   */\n\t\n\t  this.fields = {}; // toJSON, marker\n\t\n\t  /**\r\n\t   * Oneofs declared within this namespace, if any.\r\n\t   * @type {Object.<string,OneOf>}\r\n\t   */\n\t\n\t  this.oneofs = undefined; // toJSON\n\t\n\t  /**\r\n\t   * Extension ranges, if any.\r\n\t   * @type {number[][]}\r\n\t   */\n\t\n\t  this.extensions = undefined; // toJSON\n\t\n\t  /**\r\n\t   * Reserved ranges, if any.\r\n\t   * @type {Array.<number[]|string>}\r\n\t   */\n\t\n\t  this.reserved = undefined; // toJSON\n\t\n\t  /*?\r\n\t   * Whether this type is a legacy group.\r\n\t   * @type {boolean|undefined}\r\n\t   */\n\t\n\t  this.group = undefined; // toJSON\n\t\n\t  /**\r\n\t   * Cached fields by id.\r\n\t   * @type {Object.<number,Field>|null}\r\n\t   * @private\r\n\t   */\n\t\n\t  this._fieldsById = null;\n\t  /**\r\n\t   * Cached fields as an array.\r\n\t   * @type {Field[]|null}\r\n\t   * @private\r\n\t   */\n\t\n\t  this._fieldsArray = null;\n\t  /**\r\n\t   * Cached oneofs as an array.\r\n\t   * @type {OneOf[]|null}\r\n\t   * @private\r\n\t   */\n\t\n\t  this._oneofsArray = null;\n\t  /**\r\n\t   * Cached constructor.\r\n\t   * @type {Constructor<{}>}\r\n\t   * @private\r\n\t   */\n\t\n\t  this._ctor = null;\n\t}\n\t\n\tObject.defineProperties(Type.prototype, {\n\t  /**\r\n\t   * Message fields by id.\r\n\t   * @name Type#fieldsById\r\n\t   * @type {Object.<number,Field>}\r\n\t   * @readonly\r\n\t   */\n\t  fieldsById: {\n\t    get: function get() {\n\t      /* istanbul ignore if */\n\t      if (this._fieldsById) return this._fieldsById;\n\t      this._fieldsById = {};\n\t\n\t      for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n\t        var field = this.fields[names[i]],\n\t            id = field.id;\n\t        /* istanbul ignore if */\n\t\n\t        if (this._fieldsById[id]) throw Error(\"duplicate id \" + id + \" in \" + this);\n\t        this._fieldsById[id] = field;\n\t      }\n\t\n\t      return this._fieldsById;\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Fields of this message as an array for iteration.\r\n\t   * @name Type#fieldsArray\r\n\t   * @type {Field[]}\r\n\t   * @readonly\r\n\t   */\n\t  fieldsArray: {\n\t    get: function get() {\n\t      return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Oneofs of this message as an array for iteration.\r\n\t   * @name Type#oneofsArray\r\n\t   * @type {OneOf[]}\r\n\t   * @readonly\r\n\t   */\n\t  oneofsArray: {\n\t    get: function get() {\n\t      return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * The registered constructor, if any registered, otherwise a generic constructor.\r\n\t   * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n\t   * @name Type#ctor\r\n\t   * @type {Constructor<{}>}\r\n\t   */\n\t  ctor: {\n\t    get: function get() {\n\t      return this._ctor || (this.ctor = Type.generateConstructor(this)());\n\t    },\n\t    set: function set(ctor) {\n\t      // Ensure proper prototype\n\t      var prototype = ctor.prototype;\n\t\n\t      if (!(prototype instanceof Message)) {\n\t        (ctor.prototype = new Message()).constructor = ctor;\n\t        util.merge(ctor.prototype, prototype);\n\t      } // Classes and messages reference their reflected type\n\t\n\t\n\t      ctor.$type = ctor.prototype.$type = this; // Mix in static methods\n\t\n\t      util.merge(ctor, Message, true);\n\t      this._ctor = ctor; // Messages have non-enumerable default values on their prototype\n\t\n\t      var i = 0;\n\t\n\t      for (; i <\n\t      /* initializes */\n\t      this.fieldsArray.length; ++i) {\n\t        this._fieldsArray[i].resolve();\n\t      } // ensures a proper value\n\t      // Messages have non-enumerable getters and setters for each virtual oneof field\n\t\n\t\n\t      var ctorProperties = {};\n\t\n\t      for (i = 0; i <\n\t      /* initializes */\n\t      this.oneofsArray.length; ++i) {\n\t        ctorProperties[this._oneofsArray[i].resolve().name] = {\n\t          get: util.oneOfGetter(this._oneofsArray[i].oneof),\n\t          set: util.oneOfSetter(this._oneofsArray[i].oneof)\n\t        };\n\t      }\n\t\n\t      if (i) Object.defineProperties(ctor.prototype, ctorProperties);\n\t    }\n\t  }\n\t});\n\t/**\r\n\t * Generates a constructor function for the specified type.\r\n\t * @param {Type} mtype Message type\r\n\t * @returns {Codegen} Codegen instance\r\n\t */\n\t\n\tType.generateConstructor = function generateConstructor(mtype) {\n\t  /* eslint-disable no-unexpected-multiline */\n\t  var gen = util.codegen([\"p\"], mtype.name); // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n\t\n\t  for (var i = 0, field; i < mtype.fieldsArray.length; ++i) {\n\t    if ((field = mtype._fieldsArray[i]).map) gen(\"this%s={}\", util.safeProp(field.name));else if (field.repeated) gen(\"this%s=[]\", util.safeProp(field.name));\n\t  }\n\t\n\t  return gen(\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n\t  (\"this[ks[i]]=p[ks[i]]\");\n\t  /* eslint-enable no-unexpected-multiline */\n\t};\n\t\n\tfunction clearCache(type) {\n\t  type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n\t  delete type.encode;\n\t  delete type.decode;\n\t  delete type.verify;\n\t  return type;\n\t}\n\t/**\r\n\t * Message type descriptor.\r\n\t * @interface IType\r\n\t * @extends INamespace\r\n\t * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n\t * @property {Object.<string,IField>} fields Field descriptors\r\n\t * @property {number[][]} [extensions] Extension ranges\r\n\t * @property {number[][]} [reserved] Reserved ranges\r\n\t * @property {boolean} [group=false] Whether a legacy group or not\r\n\t */\n\t\n\t/**\r\n\t * Creates a message type from a message type descriptor.\r\n\t * @param {string} name Message name\r\n\t * @param {IType} json Message type descriptor\r\n\t * @returns {Type} Created message type\r\n\t */\n\t\n\t\n\tType.fromJSON = function fromJSON(name, json) {\n\t  var type = new Type(name, json.options);\n\t  type.extensions = json.extensions;\n\t  type.reserved = json.reserved;\n\t  var names = Object.keys(json.fields),\n\t      i = 0;\n\t\n\t  for (; i < names.length; ++i) {\n\t    type.add((typeof json.fields[names[i]].keyType !== \"undefined\" ? MapField.fromJSON : Field.fromJSON)(names[i], json.fields[names[i]]));\n\t  }\n\t\n\t  if (json.oneofs) for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i) {\n\t    type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n\t  }\n\t  if (json.nested) for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n\t    var nested = json.nested[names[i]];\n\t    type.add( // most to least likely\n\t    (nested.id !== undefined ? Field.fromJSON : nested.fields !== undefined ? Type.fromJSON : nested.values !== undefined ? Enum.fromJSON : nested.methods !== undefined ? Service.fromJSON : Namespace.fromJSON)(names[i], nested));\n\t  }\n\t  if (json.extensions && json.extensions.length) type.extensions = json.extensions;\n\t  if (json.reserved && json.reserved.length) type.reserved = json.reserved;\n\t  if (json.group) type.group = true;\n\t  if (json.comment) type.comment = json.comment;\n\t  return type;\n\t};\n\t/**\r\n\t * Converts this message type to a message type descriptor.\r\n\t * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n\t * @returns {IType} Message type descriptor\r\n\t */\n\t\n\t\n\tType.prototype.toJSON = function toJSON(toJSONOptions) {\n\t  var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n\t  var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n\t  return util.toObject([\"options\", inherited && inherited.options || undefined, \"oneofs\", Namespace.arrayToJSON(this.oneofsArray, toJSONOptions), \"fields\", Namespace.arrayToJSON(this.fieldsArray.filter(function (obj) {\n\t    return !obj.declaringField;\n\t  }), toJSONOptions) || {}, \"extensions\", this.extensions && this.extensions.length ? this.extensions : undefined, \"reserved\", this.reserved && this.reserved.length ? this.reserved : undefined, \"group\", this.group || undefined, \"nested\", inherited && inherited.nested || undefined, \"comment\", keepComments ? this.comment : undefined]);\n\t};\n\t/**\r\n\t * @override\r\n\t */\n\t\n\t\n\tType.prototype.resolveAll = function resolveAll() {\n\t  var fields = this.fieldsArray,\n\t      i = 0;\n\t\n\t  while (i < fields.length) {\n\t    fields[i++].resolve();\n\t  }\n\t\n\t  var oneofs = this.oneofsArray;\n\t  i = 0;\n\t\n\t  while (i < oneofs.length) {\n\t    oneofs[i++].resolve();\n\t  }\n\t\n\t  return Namespace.prototype.resolveAll.call(this);\n\t};\n\t/**\r\n\t * @override\r\n\t */\n\t\n\t\n\tType.prototype.get = function get(name) {\n\t  return this.fields[name] || this.oneofs && this.oneofs[name] || this.nested && this.nested[name] || null;\n\t};\n\t/**\r\n\t * Adds a nested object to this type.\r\n\t * @param {ReflectionObject} object Nested object to add\r\n\t * @returns {Type} `this`\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n\t */\n\t\n\t\n\tType.prototype.add = function add(object) {\n\t  if (this.get(object.name)) throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\t\n\t  if (object instanceof Field && object.extend === undefined) {\n\t    // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n\t    // The root object takes care of adding distinct sister-fields to the respective extended\n\t    // type instead.\n\t    // avoids calling the getter if not absolutely necessary because it's called quite frequently\n\t    if (this._fieldsById ?\n\t    /* istanbul ignore next */\n\t    this._fieldsById[object.id] : this.fieldsById[object.id]) throw Error(\"duplicate id \" + object.id + \" in \" + this);\n\t    if (this.isReservedId(object.id)) throw Error(\"id \" + object.id + \" is reserved in \" + this);\n\t    if (this.isReservedName(object.name)) throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\t    if (object.parent) object.parent.remove(object);\n\t    this.fields[object.name] = object;\n\t    object.message = this;\n\t    object.onAdd(this);\n\t    return clearCache(this);\n\t  }\n\t\n\t  if (object instanceof OneOf) {\n\t    if (!this.oneofs) this.oneofs = {};\n\t    this.oneofs[object.name] = object;\n\t    object.onAdd(this);\n\t    return clearCache(this);\n\t  }\n\t\n\t  return Namespace.prototype.add.call(this, object);\n\t};\n\t/**\r\n\t * Removes a nested object from this type.\r\n\t * @param {ReflectionObject} object Nested object to remove\r\n\t * @returns {Type} `this`\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t * @throws {Error} If `object` is not a member of this type\r\n\t */\n\t\n\t\n\tType.prototype.remove = function remove(object) {\n\t  if (object instanceof Field && object.extend === undefined) {\n\t    // See Type#add for the reason why extension fields are excluded here.\n\t\n\t    /* istanbul ignore if */\n\t    if (!this.fields || this.fields[object.name] !== object) throw Error(object + \" is not a member of \" + this);\n\t    delete this.fields[object.name];\n\t    object.parent = null;\n\t    object.onRemove(this);\n\t    return clearCache(this);\n\t  }\n\t\n\t  if (object instanceof OneOf) {\n\t    /* istanbul ignore if */\n\t    if (!this.oneofs || this.oneofs[object.name] !== object) throw Error(object + \" is not a member of \" + this);\n\t    delete this.oneofs[object.name];\n\t    object.parent = null;\n\t    object.onRemove(this);\n\t    return clearCache(this);\n\t  }\n\t\n\t  return Namespace.prototype.remove.call(this, object);\n\t};\n\t/**\r\n\t * Tests if the specified id is reserved.\r\n\t * @param {number} id Id to test\r\n\t * @returns {boolean} `true` if reserved, otherwise `false`\r\n\t */\n\t\n\t\n\tType.prototype.isReservedId = function isReservedId(id) {\n\t  return Namespace.isReservedId(this.reserved, id);\n\t};\n\t/**\r\n\t * Tests if the specified name is reserved.\r\n\t * @param {string} name Name to test\r\n\t * @returns {boolean} `true` if reserved, otherwise `false`\r\n\t */\n\t\n\t\n\tType.prototype.isReservedName = function isReservedName(name) {\n\t  return Namespace.isReservedName(this.reserved, name);\n\t};\n\t/**\r\n\t * Creates a new message of this type using the specified properties.\r\n\t * @param {Object.<string,*>} [properties] Properties to set\r\n\t * @returns {Message<{}>} Message instance\r\n\t */\n\t\n\t\n\tType.prototype.create = function create(properties) {\n\t  return new this.ctor(properties);\n\t};\n\t/**\r\n\t * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n\t * @returns {Type} `this`\r\n\t */\n\t\n\t\n\tType.prototype.setup = function setup() {\n\t  // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n\t  // multiple times (V8, soft-deopt prototype-check).\n\t  var fullName = this.fullName,\n\t      types = [];\n\t\n\t  for (var i = 0; i <\n\t  /* initializes */\n\t  this.fieldsArray.length; ++i) {\n\t    types.push(this._fieldsArray[i].resolve().resolvedType);\n\t  } // Replace setup methods with type-specific generated functions\n\t\n\t\n\t  this.encode = encoder(this)({\n\t    Writer: Writer,\n\t    types: types,\n\t    util: util\n\t  });\n\t  this.decode = decoder(this)({\n\t    Reader: Reader,\n\t    types: types,\n\t    util: util\n\t  });\n\t  this.verify = verifier(this)({\n\t    types: types,\n\t    util: util\n\t  });\n\t  this.fromObject = converter.fromObject(this)({\n\t    types: types,\n\t    util: util\n\t  });\n\t  this.toObject = converter.toObject(this)({\n\t    types: types,\n\t    util: util\n\t  }); // Inject custom wrappers for common types\n\t\n\t  var wrapper = wrappers[fullName];\n\t\n\t  if (wrapper) {\n\t    var originalThis = Object.create(this); // if (wrapper.fromObject) {\n\t\n\t    originalThis.fromObject = this.fromObject;\n\t    this.fromObject = wrapper.fromObject.bind(originalThis); // }\n\t    // if (wrapper.toObject) {\n\t\n\t    originalThis.toObject = this.toObject;\n\t    this.toObject = wrapper.toObject.bind(originalThis); // }\n\t  }\n\t\n\t  return this;\n\t};\n\t/**\r\n\t * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n\t * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n\t * @param {Writer} [writer] Writer to encode to\r\n\t * @returns {Writer} writer\r\n\t */\n\t\n\t\n\tType.prototype.encode = function encode_setup(message, writer) {\n\t  return this.setup().encode(message, writer); // overrides this method\n\t};\n\t/**\r\n\t * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n\t * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n\t * @param {Writer} [writer] Writer to encode to\r\n\t * @returns {Writer} writer\r\n\t */\n\t\n\t\n\tType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n\t  return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n\t};\n\t/**\r\n\t * Decodes a message of this type.\r\n\t * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n\t * @param {number} [length] Length of the message, if known beforehand\r\n\t * @returns {Message<{}>} Decoded message\r\n\t * @throws {Error} If the payload is not a reader or valid buffer\r\n\t * @throws {util.ProtocolError<{}>} If required fields are missing\r\n\t */\n\t\n\t\n\tType.prototype.decode = function decode_setup(reader, length) {\n\t  return this.setup().decode(reader, length); // overrides this method\n\t};\n\t/**\r\n\t * Decodes a message of this type preceeded by its byte length as a varint.\r\n\t * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n\t * @returns {Message<{}>} Decoded message\r\n\t * @throws {Error} If the payload is not a reader or valid buffer\r\n\t * @throws {util.ProtocolError} If required fields are missing\r\n\t */\n\t\n\t\n\tType.prototype.decodeDelimited = function decodeDelimited(reader) {\n\t  if (!(reader instanceof Reader)) reader = Reader.create(reader);\n\t  return this.decode(reader, reader.uint32());\n\t};\n\t/**\r\n\t * Verifies that field values are valid and that required fields are present.\r\n\t * @param {Object.<string,*>} message Plain object to verify\r\n\t * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n\t */\n\t\n\t\n\tType.prototype.verify = function verify_setup(message) {\n\t  return this.setup().verify(message); // overrides this method\n\t};\n\t/**\r\n\t * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n\t * @param {Object.<string,*>} object Plain object to convert\r\n\t * @returns {Message<{}>} Message instance\r\n\t */\n\t\n\t\n\tType.prototype.fromObject = function fromObject(object) {\n\t  return this.setup().fromObject(object);\n\t};\n\t/**\r\n\t * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n\t * @interface IConversionOptions\r\n\t * @property {Function} [longs] Long conversion type.\r\n\t * Valid values are `String` and `Number` (the global types).\r\n\t * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n\t * @property {Function} [enums] Enum value conversion type.\r\n\t * Only valid value is `String` (the global type).\r\n\t * Defaults to copy the present value, which is the numeric id.\r\n\t * @property {Function} [bytes] Bytes value conversion type.\r\n\t * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n\t * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n\t * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n\t * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n\t * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n\t * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n\t * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n\t */\n\t\n\t/**\r\n\t * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n\t * @param {Message<{}>} message Message instance\r\n\t * @param {IConversionOptions} [options] Conversion options\r\n\t * @returns {Object.<string,*>} Plain object\r\n\t */\n\t\n\t\n\tType.prototype.toObject = function toObject(message, options) {\n\t  return this.setup().toObject(message, options);\n\t};\n\t/**\r\n\t * Decorator function as returned by {@link Type.d} (TypeScript).\r\n\t * @typedef TypeDecorator\r\n\t * @type {function}\r\n\t * @param {Constructor<T>} target Target constructor\r\n\t * @returns {undefined}\r\n\t * @template T extends Message<T>\r\n\t */\n\t\n\t/**\r\n\t * Type decorator (TypeScript).\r\n\t * @param {string} [typeName] Type name, defaults to the constructor's name\r\n\t * @returns {TypeDecorator<T>} Decorator function\r\n\t * @template T extends Message<T>\r\n\t */\n\t\n\t\n\tType.d = function decorateType(typeName) {\n\t  return function typeDecorator(target) {\n\t    util.decorateType(target, typeName);\n\t  };\n\t};\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = Namespace; // extends ReflectionObject\n\t\n\tvar ReflectionObject = __webpack_require__(50);\n\t\n\t((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\t\n\tvar Field = __webpack_require__(57),\n\t    util = __webpack_require__(51);\n\t\n\tvar Type, // cyclic\n\tService, Enum;\n\t/**\r\n\t * Constructs a new namespace instance.\r\n\t * @name Namespace\r\n\t * @classdesc Reflected namespace.\r\n\t * @extends NamespaceBase\r\n\t * @constructor\r\n\t * @param {string} name Namespace name\r\n\t * @param {Object.<string,*>} [options] Declared options\r\n\t */\n\t\n\t/**\r\n\t * Constructs a namespace from JSON.\r\n\t * @memberof Namespace\r\n\t * @function\r\n\t * @param {string} name Namespace name\r\n\t * @param {Object.<string,*>} json JSON object\r\n\t * @returns {Namespace} Created namespace\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t */\n\t\n\tNamespace.fromJSON = function fromJSON(name, json) {\n\t  return new Namespace(name, json.options).addJSON(json.nested);\n\t};\n\t/**\r\n\t * Converts an array of reflection objects to JSON.\r\n\t * @memberof Namespace\r\n\t * @param {ReflectionObject[]} array Object array\r\n\t * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n\t * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\r\n\t */\n\t\n\t\n\tfunction arrayToJSON(array, toJSONOptions) {\n\t  if (!(array && array.length)) return undefined;\n\t  var obj = {};\n\t\n\t  for (var i = 0; i < array.length; ++i) {\n\t    obj[array[i].name] = array[i].toJSON(toJSONOptions);\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\tNamespace.arrayToJSON = arrayToJSON;\n\t/**\r\n\t * Tests if the specified id is reserved.\r\n\t * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n\t * @param {number} id Id to test\r\n\t * @returns {boolean} `true` if reserved, otherwise `false`\r\n\t */\n\t\n\tNamespace.isReservedId = function isReservedId(reserved, id) {\n\t  if (reserved) for (var i = 0; i < reserved.length; ++i) {\n\t    if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] >= id) return true;\n\t  }\n\t  return false;\n\t};\n\t/**\r\n\t * Tests if the specified name is reserved.\r\n\t * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n\t * @param {string} name Name to test\r\n\t * @returns {boolean} `true` if reserved, otherwise `false`\r\n\t */\n\t\n\t\n\tNamespace.isReservedName = function isReservedName(reserved, name) {\n\t  if (reserved) for (var i = 0; i < reserved.length; ++i) {\n\t    if (reserved[i] === name) return true;\n\t  }\n\t  return false;\n\t};\n\t/**\r\n\t * Not an actual constructor. Use {@link Namespace} instead.\r\n\t * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\r\n\t * @exports NamespaceBase\r\n\t * @extends ReflectionObject\r\n\t * @abstract\r\n\t * @constructor\r\n\t * @param {string} name Namespace name\r\n\t * @param {Object.<string,*>} [options] Declared options\r\n\t * @see {@link Namespace}\r\n\t */\n\t\n\t\n\tfunction Namespace(name, options) {\n\t  ReflectionObject.call(this, name, options);\n\t  /**\r\n\t   * Nested objects by name.\r\n\t   * @type {Object.<string,ReflectionObject>|undefined}\r\n\t   */\n\t\n\t  this.nested = undefined; // toJSON\n\t\n\t  /**\r\n\t   * Cached nested objects as an array.\r\n\t   * @type {ReflectionObject[]|null}\r\n\t   * @private\r\n\t   */\n\t\n\t  this._nestedArray = null;\n\t}\n\t\n\tfunction clearCache(namespace) {\n\t  namespace._nestedArray = null;\n\t  return namespace;\n\t}\n\t/**\r\n\t * Nested objects of this namespace as an array for iteration.\r\n\t * @name NamespaceBase#nestedArray\r\n\t * @type {ReflectionObject[]}\r\n\t * @readonly\r\n\t */\n\t\n\t\n\tObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n\t  get: function get() {\n\t    return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n\t  }\n\t});\n\t/**\r\n\t * Namespace descriptor.\r\n\t * @interface INamespace\r\n\t * @property {Object.<string,*>} [options] Namespace options\r\n\t * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\r\n\t */\n\t\n\t/**\r\n\t * Any extension field descriptor.\r\n\t * @typedef AnyExtensionField\r\n\t * @type {IExtensionField|IExtensionMapField}\r\n\t */\n\t\n\t/**\r\n\t * Any nested object descriptor.\r\n\t * @typedef AnyNestedObject\r\n\t * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\r\n\t */\n\t// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\t\n\t/**\r\n\t * Converts this namespace to a namespace descriptor.\r\n\t * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n\t * @returns {INamespace} Namespace descriptor\r\n\t */\n\t\n\tNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n\t  return util.toObject([\"options\", this.options, \"nested\", arrayToJSON(this.nestedArray, toJSONOptions)]);\n\t};\n\t/**\r\n\t * Adds nested objects to this namespace from nested object descriptors.\r\n\t * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\r\n\t * @returns {Namespace} `this`\r\n\t */\n\t\n\t\n\tNamespace.prototype.addJSON = function addJSON(nestedJson) {\n\t  var ns = this;\n\t  /* istanbul ignore else */\n\t\n\t  if (nestedJson) {\n\t    for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n\t      nested = nestedJson[names[i]];\n\t      ns.add( // most to least likely\n\t      (nested.fields !== undefined ? Type.fromJSON : nested.values !== undefined ? Enum.fromJSON : nested.methods !== undefined ? Service.fromJSON : nested.id !== undefined ? Field.fromJSON : Namespace.fromJSON)(names[i], nested));\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t/**\r\n\t * Gets the nested object of the specified name.\r\n\t * @param {string} name Nested object name\r\n\t * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\r\n\t */\n\t\n\t\n\tNamespace.prototype.get = function get(name) {\n\t  return this.nested && this.nested[name] || null;\n\t};\n\t/**\r\n\t * Gets the values of the nested {@link Enum|enum} of the specified name.\r\n\t * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\r\n\t * @param {string} name Nested enum name\r\n\t * @returns {Object.<string,number>} Enum values\r\n\t * @throws {Error} If there is no such enum\r\n\t */\n\t\n\t\n\tNamespace.prototype.getEnum = function getEnum(name) {\n\t  if (this.nested && this.nested[name] instanceof Enum) return this.nested[name].values;\n\t  throw Error(\"no such enum: \" + name);\n\t};\n\t/**\r\n\t * Adds a nested object to this namespace.\r\n\t * @param {ReflectionObject} object Nested object to add\r\n\t * @returns {Namespace} `this`\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t * @throws {Error} If there is already a nested object with this name\r\n\t */\n\t\n\t\n\tNamespace.prototype.add = function add(object) {\n\t  if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace)) throw TypeError(\"object must be a valid nested object\");\n\t  if (!this.nested) this.nested = {};else {\n\t    var prev = this.get(object.name);\n\t\n\t    if (prev) {\n\t      if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n\t        // replace plain namespace but keep existing nested elements and options\n\t        var nested = prev.nestedArray;\n\t\n\t        for (var i = 0; i < nested.length; ++i) {\n\t          object.add(nested[i]);\n\t        }\n\t\n\t        this.remove(prev);\n\t        if (!this.nested) this.nested = {};\n\t        object.setOptions(prev.options, true);\n\t      } else throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\t    }\n\t  }\n\t  this.nested[object.name] = object;\n\t  object.onAdd(this);\n\t  return clearCache(this);\n\t};\n\t/**\r\n\t * Removes a nested object from this namespace.\r\n\t * @param {ReflectionObject} object Nested object to remove\r\n\t * @returns {Namespace} `this`\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t * @throws {Error} If `object` is not a member of this namespace\r\n\t */\n\t\n\t\n\tNamespace.prototype.remove = function remove(object) {\n\t  if (!(object instanceof ReflectionObject)) throw TypeError(\"object must be a ReflectionObject\");\n\t  if (object.parent !== this) throw Error(object + \" is not a member of \" + this);\n\t  delete this.nested[object.name];\n\t  if (!Object.keys(this.nested).length) this.nested = undefined;\n\t  object.onRemove(this);\n\t  return clearCache(this);\n\t};\n\t/**\r\n\t * Defines additial namespaces within this one if not yet existing.\r\n\t * @param {string|string[]} path Path to create\r\n\t * @param {*} [json] Nested types to create from JSON\r\n\t * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\r\n\t */\n\t\n\t\n\tNamespace.prototype.define = function define(path, json) {\n\t  if (util.isString(path)) path = path.split(\".\");else if (!Array.isArray(path)) throw TypeError(\"illegal path\");\n\t  if (path && path.length && path[0] === \"\") throw Error(\"path must be relative\");\n\t  var ptr = this;\n\t\n\t  while (path.length > 0) {\n\t    var part = path.shift();\n\t\n\t    if (ptr.nested && ptr.nested[part]) {\n\t      ptr = ptr.nested[part];\n\t      if (!(ptr instanceof Namespace)) throw Error(\"path conflicts with non-namespace objects\");\n\t    } else ptr.add(ptr = new Namespace(part));\n\t  }\n\t\n\t  if (json) ptr.addJSON(json);\n\t  return ptr;\n\t};\n\t/**\r\n\t * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\r\n\t * @returns {Namespace} `this`\r\n\t */\n\t\n\t\n\tNamespace.prototype.resolveAll = function resolveAll() {\n\t  var nested = this.nestedArray,\n\t      i = 0;\n\t\n\t  while (i < nested.length) {\n\t    if (nested[i] instanceof Namespace) nested[i++].resolveAll();else nested[i++].resolve();\n\t  }\n\t\n\t  return this.resolve();\n\t};\n\t/**\r\n\t * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\r\n\t * @param {string|string[]} path Path to look up\r\n\t * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\r\n\t * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\r\n\t * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n\t */\n\t\n\t\n\tNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\t  /* istanbul ignore next */\n\t  if (typeof filterTypes === \"boolean\") {\n\t    parentAlreadyChecked = filterTypes;\n\t    filterTypes = undefined;\n\t  } else if (filterTypes && !Array.isArray(filterTypes)) filterTypes = [filterTypes];\n\t\n\t  if (util.isString(path) && path.length) {\n\t    if (path === \".\") return this.root;\n\t    path = path.split(\".\");\n\t  } else if (!path.length) return this; // Start at root if path is absolute\n\t\n\t\n\t  if (path[0] === \"\") return this.root.lookup(path.slice(1), filterTypes); // Test if the first part matches any nested object, and if so, traverse if path contains more\n\t\n\t  var found = this.get(path[0]);\n\t\n\t  if (found) {\n\t    if (path.length === 1) {\n\t      if (!filterTypes || filterTypes.indexOf(found.constructor) > -1) return found;\n\t    } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true))) return found; // Otherwise try each nested namespace\n\t\n\t  } else for (var i = 0; i < this.nestedArray.length; ++i) {\n\t    if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true))) return found;\n\t  } // If there hasn't been a match, try again at the parent\n\t\n\t\n\t  if (this.parent === null || parentAlreadyChecked) return null;\n\t  return this.parent.lookup(path, filterTypes);\n\t};\n\t/**\r\n\t * Looks up the reflection object at the specified path, relative to this namespace.\r\n\t * @name NamespaceBase#lookup\r\n\t * @function\r\n\t * @param {string|string[]} path Path to look up\r\n\t * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\r\n\t * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n\t * @variation 2\r\n\t */\n\t// lookup(path: string, [parentAlreadyChecked: boolean])\n\t\n\t/**\r\n\t * Looks up the {@link Type|type} at the specified path, relative to this namespace.\r\n\t * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n\t * @param {string|string[]} path Path to look up\r\n\t * @returns {Type} Looked up type\r\n\t * @throws {Error} If `path` does not point to a type\r\n\t */\n\t\n\t\n\tNamespace.prototype.lookupType = function lookupType(path) {\n\t  var found = this.lookup(path, [Type]);\n\t  if (!found) throw Error(\"no such type: \" + path);\n\t  return found;\n\t};\n\t/**\r\n\t * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\r\n\t * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n\t * @param {string|string[]} path Path to look up\r\n\t * @returns {Enum} Looked up enum\r\n\t * @throws {Error} If `path` does not point to an enum\r\n\t */\n\t\n\t\n\tNamespace.prototype.lookupEnum = function lookupEnum(path) {\n\t  var found = this.lookup(path, [Enum]);\n\t  if (!found) throw Error(\"no such Enum '\" + path + \"' in \" + this);\n\t  return found;\n\t};\n\t/**\r\n\t * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\r\n\t * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n\t * @param {string|string[]} path Path to look up\r\n\t * @returns {Type} Looked up type or enum\r\n\t * @throws {Error} If `path` does not point to a type or enum\r\n\t */\n\t\n\t\n\tNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n\t  var found = this.lookup(path, [Type, Enum]);\n\t  if (!found) throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n\t  return found;\n\t};\n\t/**\r\n\t * Looks up the {@link Service|service} at the specified path, relative to this namespace.\r\n\t * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n\t * @param {string|string[]} path Path to look up\r\n\t * @returns {Service} Looked up service\r\n\t * @throws {Error} If `path` does not point to a service\r\n\t */\n\t\n\t\n\tNamespace.prototype.lookupService = function lookupService(path) {\n\t  var found = this.lookup(path, [Service]);\n\t  if (!found) throw Error(\"no such Service '\" + path + \"' in \" + this);\n\t  return found;\n\t}; // Sets up cyclic dependencies (called in index-light)\n\t\n\t\n\tNamespace._configure = function (Type_, Service_, Enum_) {\n\t  Type = Type_;\n\t  Service = Service_;\n\t  Enum = Enum_;\n\t};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\t\n\tmodule.exports = Field; // extends ReflectionObject\n\t\n\tvar ReflectionObject = __webpack_require__(50);\n\t\n\t((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\t\n\tvar Enum = __webpack_require__(49),\n\t    types = __webpack_require__(58),\n\t    util = __webpack_require__(51);\n\t\n\tvar Type; // cyclic\n\t\n\tvar ruleRe = /^required|optional|repeated$/;\n\t/**\r\n\t * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\r\n\t * @name Field\r\n\t * @classdesc Reflected message field.\r\n\t * @extends FieldBase\r\n\t * @constructor\r\n\t * @param {string} name Unique name within its namespace\r\n\t * @param {number} id Unique id within its namespace\r\n\t * @param {string} type Value type\r\n\t * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n\t * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n\t * @param {Object.<string,*>} [options] Declared options\r\n\t */\n\t\n\t/**\r\n\t * Constructs a field from a field descriptor.\r\n\t * @param {string} name Field name\r\n\t * @param {IField} json Field descriptor\r\n\t * @returns {Field} Created field\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t */\n\t\n\tField.fromJSON = function fromJSON(name, json) {\n\t  return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n\t};\n\t/**\r\n\t * Not an actual constructor. Use {@link Field} instead.\r\n\t * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\r\n\t * @exports FieldBase\r\n\t * @extends ReflectionObject\r\n\t * @constructor\r\n\t * @param {string} name Unique name within its namespace\r\n\t * @param {number} id Unique id within its namespace\r\n\t * @param {string} type Value type\r\n\t * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n\t * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n\t * @param {Object.<string,*>} [options] Declared options\r\n\t * @param {string} [comment] Comment associated with this field\r\n\t */\n\t\n\t\n\tfunction Field(name, id, type, rule, extend, options, comment) {\n\t  if (util.isObject(rule)) {\n\t    comment = extend;\n\t    options = rule;\n\t    rule = extend = undefined;\n\t  } else if (util.isObject(extend)) {\n\t    comment = options;\n\t    options = extend;\n\t    extend = undefined;\n\t  }\n\t\n\t  ReflectionObject.call(this, name, options);\n\t  if (!util.isInteger(id) || id < 0) throw TypeError(\"id must be a non-negative integer\");\n\t  if (!util.isString(type)) throw TypeError(\"type must be a string\");\n\t  if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase())) throw TypeError(\"rule must be a string rule\");\n\t  if (extend !== undefined && !util.isString(extend)) throw TypeError(\"extend must be a string\");\n\t  /**\r\n\t   * Field rule, if any.\r\n\t   * @type {string|undefined}\r\n\t   */\n\t\n\t  this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\t\n\t  /**\r\n\t   * Field type.\r\n\t   * @type {string}\r\n\t   */\n\t\n\t  this.type = type; // toJSON\n\t\n\t  /**\r\n\t   * Unique field id.\r\n\t   * @type {number}\r\n\t   */\n\t\n\t  this.id = id; // toJSON, marker\n\t\n\t  /**\r\n\t   * Extended type if different from parent.\r\n\t   * @type {string|undefined}\r\n\t   */\n\t\n\t  this.extend = extend || undefined; // toJSON\n\t\n\t  /**\r\n\t   * Whether this field is required.\r\n\t   * @type {boolean}\r\n\t   */\n\t\n\t  this.required = rule === \"required\";\n\t  /**\r\n\t   * Whether this field is optional.\r\n\t   * @type {boolean}\r\n\t   */\n\t\n\t  this.optional = !this.required;\n\t  /**\r\n\t   * Whether this field is repeated.\r\n\t   * @type {boolean}\r\n\t   */\n\t\n\t  this.repeated = rule === \"repeated\";\n\t  /**\r\n\t   * Whether this field is a map or not.\r\n\t   * @type {boolean}\r\n\t   */\n\t\n\t  this.map = false;\n\t  /**\r\n\t   * Message this field belongs to.\r\n\t   * @type {Type|null}\r\n\t   */\n\t\n\t  this.message = null;\n\t  /**\r\n\t   * OneOf this field belongs to, if any,\r\n\t   * @type {OneOf|null}\r\n\t   */\n\t\n\t  this.partOf = null;\n\t  /**\r\n\t   * The field type's default value.\r\n\t   * @type {*}\r\n\t   */\n\t\n\t  this.typeDefault = null;\n\t  /**\r\n\t   * The field's default value on prototypes.\r\n\t   * @type {*}\r\n\t   */\n\t\n\t  this.defaultValue = null;\n\t  /**\r\n\t   * Whether this field's value should be treated as a long.\r\n\t   * @type {boolean}\r\n\t   */\n\t\n\t  this.long = util.Long ? types.long[type] !== undefined :\n\t  /* istanbul ignore next */\n\t  false;\n\t  /**\r\n\t   * Whether this field's value is a buffer.\r\n\t   * @type {boolean}\r\n\t   */\n\t\n\t  this.bytes = type === \"bytes\";\n\t  /**\r\n\t   * Resolved type if not a basic type.\r\n\t   * @type {Type|Enum|null}\r\n\t   */\n\t\n\t  this.resolvedType = null;\n\t  /**\r\n\t   * Sister-field within the extended type if a declaring extension field.\r\n\t   * @type {Field|null}\r\n\t   */\n\t\n\t  this.extensionField = null;\n\t  /**\r\n\t   * Sister-field within the declaring namespace if an extended field.\r\n\t   * @type {Field|null}\r\n\t   */\n\t\n\t  this.declaringField = null;\n\t  /**\r\n\t   * Internally remembers whether this field is packed.\r\n\t   * @type {boolean|null}\r\n\t   * @private\r\n\t   */\n\t\n\t  this._packed = null;\n\t  /**\r\n\t   * Comment for this field.\r\n\t   * @type {string|null}\r\n\t   */\n\t\n\t  this.comment = comment;\n\t}\n\t/**\r\n\t * Determines whether this field is packed. Only relevant when repeated and working with proto2.\r\n\t * @name Field#packed\r\n\t * @type {boolean}\r\n\t * @readonly\r\n\t */\n\t\n\t\n\tObject.defineProperty(Field.prototype, \"packed\", {\n\t  get: function get() {\n\t    // defaults to packed=true if not explicity set to false\n\t    if (this._packed === null) this._packed = this.getOption(\"packed\") !== false;\n\t    return this._packed;\n\t  }\n\t});\n\t/**\r\n\t * @override\r\n\t */\n\t\n\tField.prototype.setOption = function setOption(name, value, ifNotSet) {\n\t  if (name === \"packed\") // clear cached before setting\n\t    this._packed = null;\n\t  return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n\t};\n\t/**\r\n\t * Field descriptor.\r\n\t * @interface IField\r\n\t * @property {string} [rule=\"optional\"] Field rule\r\n\t * @property {string} type Field type\r\n\t * @property {number} id Field id\r\n\t * @property {Object.<string,*>} [options] Field options\r\n\t */\n\t\n\t/**\r\n\t * Extension field descriptor.\r\n\t * @interface IExtensionField\r\n\t * @extends IField\r\n\t * @property {string} extend Extended type\r\n\t */\n\t\n\t/**\r\n\t * Converts this field to a field descriptor.\r\n\t * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n\t * @returns {IField} Field descriptor\r\n\t */\n\t\n\t\n\tField.prototype.toJSON = function toJSON(toJSONOptions) {\n\t  var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n\t  return util.toObject([\"rule\", this.rule !== \"optional\" && this.rule || undefined, \"type\", this.type, \"id\", this.id, \"extend\", this.extend, \"options\", this.options, \"comment\", keepComments ? this.comment : undefined]);\n\t};\n\t/**\r\n\t * Resolves this field's type references.\r\n\t * @returns {Field} `this`\r\n\t * @throws {Error} If any reference cannot be resolved\r\n\t */\n\t\n\t\n\tField.prototype.resolve = function resolve() {\n\t  if (this.resolved) return this;\n\t\n\t  if ((this.typeDefault = types.defaults[this.type]) === undefined) {\n\t    // if not a basic type, resolve it\n\t    this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n\t    if (this.resolvedType instanceof Type) this.typeDefault = null;else // instanceof Enum\n\t      this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n\t  } // use explicitly set default value if present\n\t\n\t\n\t  if (this.options && this.options[\"default\"] != null) {\n\t    this.typeDefault = this.options[\"default\"];\n\t    if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\") this.typeDefault = this.resolvedType.values[this.typeDefault];\n\t  } // remove unnecessary options\n\t\n\t\n\t  if (this.options) {\n\t    if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum)) delete this.options.packed;\n\t    if (!Object.keys(this.options).length) this.options = undefined;\n\t  } // convert to internal data type if necesssary\n\t\n\t\n\t  if (this.long) {\n\t    this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\t    /* istanbul ignore else */\n\t\n\t    if (Object.freeze) Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\t  } else if (this.bytes && typeof this.typeDefault === \"string\") {\n\t    var buf;\n\t    if (util.base64.test(this.typeDefault)) util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);else util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n\t    this.typeDefault = buf;\n\t  } // take special care of maps and repeated fields\n\t\n\t\n\t  if (this.map) this.defaultValue = util.emptyObject;else if (this.repeated) this.defaultValue = util.emptyArray;else this.defaultValue = this.typeDefault; // ensure proper value on prototype\n\t\n\t  if (this.parent instanceof Type) this.parent.ctor.prototype[this.name] = this.defaultValue;\n\t  return ReflectionObject.prototype.resolve.call(this);\n\t};\n\t/**\r\n\t * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\r\n\t * @typedef FieldDecorator\r\n\t * @type {function}\r\n\t * @param {Object} prototype Target prototype\r\n\t * @param {string} fieldName Field name\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t/**\r\n\t * Field decorator (TypeScript).\r\n\t * @name Field.d\r\n\t * @function\r\n\t * @param {number} fieldId Field id\r\n\t * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\r\n\t * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n\t * @param {T} [defaultValue] Default value\r\n\t * @returns {FieldDecorator} Decorator function\r\n\t * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\r\n\t */\n\t\n\t\n\tField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\t  // submessage: decorate the submessage and use its name as the type\n\t  if (typeof fieldType === \"function\") fieldType = util.decorateType(fieldType).name; // enum reference: create a reflected copy of the enum and keep reuseing it\n\t  else if (fieldType && _typeof(fieldType) === \"object\") fieldType = util.decorateEnum(fieldType).name;\n\t  return function fieldDecorator(prototype, fieldName) {\n\t    util.decorateType(prototype.constructor).add(new Field(fieldName, fieldId, fieldType, fieldRule, {\n\t      \"default\": defaultValue\n\t    }));\n\t  };\n\t};\n\t/**\r\n\t * Field decorator (TypeScript).\r\n\t * @name Field.d\r\n\t * @function\r\n\t * @param {number} fieldId Field id\r\n\t * @param {Constructor<T>|string} fieldType Field type\r\n\t * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n\t * @returns {FieldDecorator} Decorator function\r\n\t * @template T extends Message<T>\r\n\t * @variation 2\r\n\t */\n\t// like Field.d but without a default value\n\t// Sets up cyclic dependencies (called in index-light)\n\t\n\t\n\tField._configure = function configure(Type_) {\n\t  Type = Type_;\n\t};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/**\r\n\t * Common type constants.\r\n\t * @namespace\r\n\t */\n\t\n\tvar types = exports;\n\t\n\tvar util = __webpack_require__(51);\n\t\n\tvar s = [\"double\", // 0\n\t\"float\", // 1\n\t\"int32\", // 2\n\t\"uint32\", // 3\n\t\"sint32\", // 4\n\t\"fixed32\", // 5\n\t\"sfixed32\", // 6\n\t\"int64\", // 7\n\t\"uint64\", // 8\n\t\"sint64\", // 9\n\t\"fixed64\", // 10\n\t\"sfixed64\", // 11\n\t\"bool\", // 12\n\t\"string\", // 13\n\t\"bytes\" // 14\n\t];\n\t\n\tfunction bake(values, offset) {\n\t  var i = 0,\n\t      o = {};\n\t  offset |= 0;\n\t\n\t  while (i < values.length) {\n\t    o[s[i + offset]] = values[i++];\n\t  }\n\t\n\t  return o;\n\t}\n\t/**\r\n\t * Basic type wire types.\r\n\t * @type {Object.<string,number>}\r\n\t * @const\r\n\t * @property {number} double=1 Fixed64 wire type\r\n\t * @property {number} float=5 Fixed32 wire type\r\n\t * @property {number} int32=0 Varint wire type\r\n\t * @property {number} uint32=0 Varint wire type\r\n\t * @property {number} sint32=0 Varint wire type\r\n\t * @property {number} fixed32=5 Fixed32 wire type\r\n\t * @property {number} sfixed32=5 Fixed32 wire type\r\n\t * @property {number} int64=0 Varint wire type\r\n\t * @property {number} uint64=0 Varint wire type\r\n\t * @property {number} sint64=0 Varint wire type\r\n\t * @property {number} fixed64=1 Fixed64 wire type\r\n\t * @property {number} sfixed64=1 Fixed64 wire type\r\n\t * @property {number} bool=0 Varint wire type\r\n\t * @property {number} string=2 Ldelim wire type\r\n\t * @property {number} bytes=2 Ldelim wire type\r\n\t */\n\t\n\t\n\ttypes.basic = bake([\n\t/* double   */\n\t1,\n\t/* float    */\n\t5,\n\t/* int32    */\n\t0,\n\t/* uint32   */\n\t0,\n\t/* sint32   */\n\t0,\n\t/* fixed32  */\n\t5,\n\t/* sfixed32 */\n\t5,\n\t/* int64    */\n\t0,\n\t/* uint64   */\n\t0,\n\t/* sint64   */\n\t0,\n\t/* fixed64  */\n\t1,\n\t/* sfixed64 */\n\t1,\n\t/* bool     */\n\t0,\n\t/* string   */\n\t2,\n\t/* bytes    */\n\t2]);\n\t/**\r\n\t * Basic type defaults.\r\n\t * @type {Object.<string,*>}\r\n\t * @const\r\n\t * @property {number} double=0 Double default\r\n\t * @property {number} float=0 Float default\r\n\t * @property {number} int32=0 Int32 default\r\n\t * @property {number} uint32=0 Uint32 default\r\n\t * @property {number} sint32=0 Sint32 default\r\n\t * @property {number} fixed32=0 Fixed32 default\r\n\t * @property {number} sfixed32=0 Sfixed32 default\r\n\t * @property {number} int64=0 Int64 default\r\n\t * @property {number} uint64=0 Uint64 default\r\n\t * @property {number} sint64=0 Sint32 default\r\n\t * @property {number} fixed64=0 Fixed64 default\r\n\t * @property {number} sfixed64=0 Sfixed64 default\r\n\t * @property {boolean} bool=false Bool default\r\n\t * @property {string} string=\"\" String default\r\n\t * @property {Array.<number>} bytes=Array(0) Bytes default\r\n\t * @property {null} message=null Message default\r\n\t */\n\t\n\ttypes.defaults = bake([\n\t/* double   */\n\t0,\n\t/* float    */\n\t0,\n\t/* int32    */\n\t0,\n\t/* uint32   */\n\t0,\n\t/* sint32   */\n\t0,\n\t/* fixed32  */\n\t0,\n\t/* sfixed32 */\n\t0,\n\t/* int64    */\n\t0,\n\t/* uint64   */\n\t0,\n\t/* sint64   */\n\t0,\n\t/* fixed64  */\n\t0,\n\t/* sfixed64 */\n\t0,\n\t/* bool     */\n\tfalse,\n\t/* string   */\n\t\"\",\n\t/* bytes    */\n\tutil.emptyArray,\n\t/* message  */\n\tnull]);\n\t/**\r\n\t * Basic long type wire types.\r\n\t * @type {Object.<string,number>}\r\n\t * @const\r\n\t * @property {number} int64=0 Varint wire type\r\n\t * @property {number} uint64=0 Varint wire type\r\n\t * @property {number} sint64=0 Varint wire type\r\n\t * @property {number} fixed64=1 Fixed64 wire type\r\n\t * @property {number} sfixed64=1 Fixed64 wire type\r\n\t */\n\t\n\ttypes.long = bake([\n\t/* int64    */\n\t0,\n\t/* uint64   */\n\t0,\n\t/* sint64   */\n\t0,\n\t/* fixed64  */\n\t1,\n\t/* sfixed64 */\n\t1], 7);\n\t/**\r\n\t * Allowed types for map keys with their associated wire type.\r\n\t * @type {Object.<string,number>}\r\n\t * @const\r\n\t * @property {number} int32=0 Varint wire type\r\n\t * @property {number} uint32=0 Varint wire type\r\n\t * @property {number} sint32=0 Varint wire type\r\n\t * @property {number} fixed32=5 Fixed32 wire type\r\n\t * @property {number} sfixed32=5 Fixed32 wire type\r\n\t * @property {number} int64=0 Varint wire type\r\n\t * @property {number} uint64=0 Varint wire type\r\n\t * @property {number} sint64=0 Varint wire type\r\n\t * @property {number} fixed64=1 Fixed64 wire type\r\n\t * @property {number} sfixed64=1 Fixed64 wire type\r\n\t * @property {number} bool=0 Varint wire type\r\n\t * @property {number} string=2 Ldelim wire type\r\n\t */\n\t\n\ttypes.mapKey = bake([\n\t/* int32    */\n\t0,\n\t/* uint32   */\n\t0,\n\t/* sint32   */\n\t0,\n\t/* fixed32  */\n\t5,\n\t/* sfixed32 */\n\t5,\n\t/* int64    */\n\t0,\n\t/* uint64   */\n\t0,\n\t/* sint64   */\n\t0,\n\t/* fixed64  */\n\t1,\n\t/* sfixed64 */\n\t1,\n\t/* bool     */\n\t0,\n\t/* string   */\n\t2], 2);\n\t/**\r\n\t * Allowed types for packed repeated fields with their associated wire type.\r\n\t * @type {Object.<string,number>}\r\n\t * @const\r\n\t * @property {number} double=1 Fixed64 wire type\r\n\t * @property {number} float=5 Fixed32 wire type\r\n\t * @property {number} int32=0 Varint wire type\r\n\t * @property {number} uint32=0 Varint wire type\r\n\t * @property {number} sint32=0 Varint wire type\r\n\t * @property {number} fixed32=5 Fixed32 wire type\r\n\t * @property {number} sfixed32=5 Fixed32 wire type\r\n\t * @property {number} int64=0 Varint wire type\r\n\t * @property {number} uint64=0 Varint wire type\r\n\t * @property {number} sint64=0 Varint wire type\r\n\t * @property {number} fixed64=1 Fixed64 wire type\r\n\t * @property {number} sfixed64=1 Fixed64 wire type\r\n\t * @property {number} bool=0 Varint wire type\r\n\t */\n\t\n\ttypes.packed = bake([\n\t/* double   */\n\t1,\n\t/* float    */\n\t5,\n\t/* int32    */\n\t0,\n\t/* uint32   */\n\t0,\n\t/* sint32   */\n\t0,\n\t/* fixed32  */\n\t5,\n\t/* sfixed32 */\n\t5,\n\t/* int64    */\n\t0,\n\t/* uint64   */\n\t0,\n\t/* sint64   */\n\t0,\n\t/* fixed64  */\n\t1,\n\t/* sfixed64 */\n\t1,\n\t/* bool     */\n\t0]);\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = OneOf; // extends ReflectionObject\n\t\n\tvar ReflectionObject = __webpack_require__(50);\n\t\n\t((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\t\n\tvar Field = __webpack_require__(57),\n\t    util = __webpack_require__(51);\n\t/**\r\n\t * Constructs a new oneof instance.\r\n\t * @classdesc Reflected oneof.\r\n\t * @extends ReflectionObject\r\n\t * @constructor\r\n\t * @param {string} name Oneof name\r\n\t * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n\t * @param {Object.<string,*>} [options] Declared options\r\n\t * @param {string} [comment] Comment associated with this field\r\n\t */\n\t\n\t\n\tfunction OneOf(name, fieldNames, options, comment) {\n\t  if (!Array.isArray(fieldNames)) {\n\t    options = fieldNames;\n\t    fieldNames = undefined;\n\t  }\n\t\n\t  ReflectionObject.call(this, name, options);\n\t  /* istanbul ignore if */\n\t\n\t  if (!(fieldNames === undefined || Array.isArray(fieldNames))) throw TypeError(\"fieldNames must be an Array\");\n\t  /**\r\n\t   * Field names that belong to this oneof.\r\n\t   * @type {string[]}\r\n\t   */\n\t\n\t  this.oneof = fieldNames || []; // toJSON, marker\n\t\n\t  /**\r\n\t   * Fields that belong to this oneof as an array for iteration.\r\n\t   * @type {Field[]}\r\n\t   * @readonly\r\n\t   */\n\t\n\t  this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\t\n\t  /**\r\n\t   * Comment for this field.\r\n\t   * @type {string|null}\r\n\t   */\n\t\n\t  this.comment = comment;\n\t}\n\t/**\r\n\t * Oneof descriptor.\r\n\t * @interface IOneOf\r\n\t * @property {Array.<string>} oneof Oneof field names\r\n\t * @property {Object.<string,*>} [options] Oneof options\r\n\t */\n\t\n\t/**\r\n\t * Constructs a oneof from a oneof descriptor.\r\n\t * @param {string} name Oneof name\r\n\t * @param {IOneOf} json Oneof descriptor\r\n\t * @returns {OneOf} Created oneof\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t */\n\t\n\t\n\tOneOf.fromJSON = function fromJSON(name, json) {\n\t  return new OneOf(name, json.oneof, json.options, json.comment);\n\t};\n\t/**\r\n\t * Converts this oneof to a oneof descriptor.\r\n\t * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n\t * @returns {IOneOf} Oneof descriptor\r\n\t */\n\t\n\t\n\tOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n\t  var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n\t  return util.toObject([\"options\", this.options, \"oneof\", this.oneof, \"comment\", keepComments ? this.comment : undefined]);\n\t};\n\t/**\r\n\t * Adds the fields of the specified oneof to the parent if not already done so.\r\n\t * @param {OneOf} oneof The oneof\r\n\t * @returns {undefined}\r\n\t * @inner\r\n\t * @ignore\r\n\t */\n\t\n\t\n\tfunction addFieldsToParent(oneof) {\n\t  if (oneof.parent) for (var i = 0; i < oneof.fieldsArray.length; ++i) {\n\t    if (!oneof.fieldsArray[i].parent) oneof.parent.add(oneof.fieldsArray[i]);\n\t  }\n\t}\n\t/**\r\n\t * Adds a field to this oneof and removes it from its current parent, if any.\r\n\t * @param {Field} field Field to add\r\n\t * @returns {OneOf} `this`\r\n\t */\n\t\n\t\n\tOneOf.prototype.add = function add(field) {\n\t  /* istanbul ignore if */\n\t  if (!(field instanceof Field)) throw TypeError(\"field must be a Field\");\n\t  if (field.parent && field.parent !== this.parent) field.parent.remove(field);\n\t  this.oneof.push(field.name);\n\t  this.fieldsArray.push(field);\n\t  field.partOf = this; // field.parent remains null\n\t\n\t  addFieldsToParent(this);\n\t  return this;\n\t};\n\t/**\r\n\t * Removes a field from this oneof and puts it back to the oneof's parent.\r\n\t * @param {Field} field Field to remove\r\n\t * @returns {OneOf} `this`\r\n\t */\n\t\n\t\n\tOneOf.prototype.remove = function remove(field) {\n\t  /* istanbul ignore if */\n\t  if (!(field instanceof Field)) throw TypeError(\"field must be a Field\");\n\t  var index = this.fieldsArray.indexOf(field);\n\t  /* istanbul ignore if */\n\t\n\t  if (index < 0) throw Error(field + \" is not a member of \" + this);\n\t  this.fieldsArray.splice(index, 1);\n\t  index = this.oneof.indexOf(field.name);\n\t  /* istanbul ignore else */\n\t\n\t  if (index > -1) // theoretical\n\t    this.oneof.splice(index, 1);\n\t  field.partOf = null;\n\t  return this;\n\t};\n\t/**\r\n\t * @override\r\n\t */\n\t\n\t\n\tOneOf.prototype.onAdd = function onAdd(parent) {\n\t  ReflectionObject.prototype.onAdd.call(this, parent);\n\t  var self = this; // Collect present fields\n\t\n\t  for (var i = 0; i < this.oneof.length; ++i) {\n\t    var field = parent.get(this.oneof[i]);\n\t\n\t    if (field && !field.partOf) {\n\t      field.partOf = self;\n\t      self.fieldsArray.push(field);\n\t    }\n\t  } // Add not yet present fields\n\t\n\t\n\t  addFieldsToParent(this);\n\t};\n\t/**\r\n\t * @override\r\n\t */\n\t\n\t\n\tOneOf.prototype.onRemove = function onRemove(parent) {\n\t  for (var i = 0, field; i < this.fieldsArray.length; ++i) {\n\t    if ((field = this.fieldsArray[i]).parent) field.parent.remove(field);\n\t  }\n\t\n\t  ReflectionObject.prototype.onRemove.call(this, parent);\n\t};\n\t/**\r\n\t * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n\t * @typedef OneOfDecorator\r\n\t * @type {function}\r\n\t * @param {Object} prototype Target prototype\r\n\t * @param {string} oneofName OneOf name\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t/**\r\n\t * OneOf decorator (TypeScript).\r\n\t * @function\r\n\t * @param {...string} fieldNames Field names\r\n\t * @returns {OneOfDecorator} Decorator function\r\n\t * @template T extends string\r\n\t */\n\t\n\t\n\tOneOf.d = function decorateOneOf() {\n\t  var fieldNames = new Array(arguments.length),\n\t      index = 0;\n\t\n\t  while (index < arguments.length) {\n\t    fieldNames[index] = arguments[index++];\n\t  }\n\t\n\t  return function oneOfDecorator(prototype, oneofName) {\n\t    util.decorateType(prototype.constructor).add(new OneOf(oneofName, fieldNames));\n\t    Object.defineProperty(prototype, oneofName, {\n\t      get: util.oneOfGetter(fieldNames),\n\t      set: util.oneOfSetter(fieldNames)\n\t    });\n\t  };\n\t};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\t\n\tmodule.exports = MapField; // extends Field\n\t\n\tvar Field = __webpack_require__(57);\n\t\n\t((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\t\n\tvar types = __webpack_require__(58),\n\t    util = __webpack_require__(51);\n\t/**\r\n\t * Constructs a new map field instance.\r\n\t * @classdesc Reflected map field.\r\n\t * @extends FieldBase\r\n\t * @constructor\r\n\t * @param {string} name Unique name within its namespace\r\n\t * @param {number} id Unique id within its namespace\r\n\t * @param {string} keyType Key type\r\n\t * @param {string} type Value type\r\n\t * @param {Object.<string,*>} [options] Declared options\r\n\t * @param {string} [comment] Comment associated with this field\r\n\t */\n\t\n\t\n\tfunction MapField(name, id, keyType, type, options, comment) {\n\t  Field.call(this, name, id, type, undefined, undefined, options, comment);\n\t  /* istanbul ignore if */\n\t\n\t  if (!util.isString(keyType)) throw TypeError(\"keyType must be a string\");\n\t  /**\r\n\t   * Key type.\r\n\t   * @type {string}\r\n\t   */\n\t\n\t  this.keyType = keyType; // toJSON, marker\n\t\n\t  /**\r\n\t   * Resolved key type if not a basic type.\r\n\t   * @type {ReflectionObject|null}\r\n\t   */\n\t\n\t  this.resolvedKeyType = null; // Overrides Field#map\n\t\n\t  this.map = true;\n\t}\n\t/**\r\n\t * Map field descriptor.\r\n\t * @interface IMapField\r\n\t * @extends {IField}\r\n\t * @property {string} keyType Key type\r\n\t */\n\t\n\t/**\r\n\t * Extension map field descriptor.\r\n\t * @interface IExtensionMapField\r\n\t * @extends IMapField\r\n\t * @property {string} extend Extended type\r\n\t */\n\t\n\t/**\r\n\t * Constructs a map field from a map field descriptor.\r\n\t * @param {string} name Field name\r\n\t * @param {IMapField} json Map field descriptor\r\n\t * @returns {MapField} Created map field\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t */\n\t\n\t\n\tMapField.fromJSON = function fromJSON(name, json) {\n\t  return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n\t};\n\t/**\r\n\t * Converts this map field to a map field descriptor.\r\n\t * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n\t * @returns {IMapField} Map field descriptor\r\n\t */\n\t\n\t\n\tMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n\t  var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n\t  return util.toObject([\"keyType\", this.keyType, \"type\", this.type, \"id\", this.id, \"extend\", this.extend, \"options\", this.options, \"comment\", keepComments ? this.comment : undefined]);\n\t};\n\t/**\r\n\t * @override\r\n\t */\n\t\n\t\n\tMapField.prototype.resolve = function resolve() {\n\t  if (this.resolved) return this; // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n\t\n\t  if (types.mapKey[this.keyType] === undefined) throw Error(\"invalid key type: \" + this.keyType);\n\t  return Field.prototype.resolve.call(this);\n\t};\n\t/**\r\n\t * Map field decorator (TypeScript).\r\n\t * @name MapField.d\r\n\t * @function\r\n\t * @param {number} fieldId Field id\r\n\t * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\r\n\t * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\r\n\t * @returns {FieldDecorator} Decorator function\r\n\t * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\r\n\t */\n\t\n\t\n\tMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\t  // submessage value: decorate the submessage and use its name as the type\n\t  if (typeof fieldValueType === \"function\") fieldValueType = util.decorateType(fieldValueType).name; // enum reference value: create a reflected copy of the enum and keep reuseing it\n\t  else if (fieldValueType && _typeof(fieldValueType) === \"object\") fieldValueType = util.decorateEnum(fieldValueType).name;\n\t  return function mapFieldDecorator(prototype, fieldName) {\n\t    util.decorateType(prototype.constructor).add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n\t  };\n\t};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = Service; // extends Namespace\n\t\n\tvar Namespace = __webpack_require__(56);\n\t\n\t((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\t\n\tvar Method = __webpack_require__(62),\n\t    util = __webpack_require__(51),\n\t    rpc = __webpack_require__(45);\n\t/**\r\n\t * Constructs a new service instance.\r\n\t * @classdesc Reflected service.\r\n\t * @extends NamespaceBase\r\n\t * @constructor\r\n\t * @param {string} name Service name\r\n\t * @param {Object.<string,*>} [options] Service options\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t */\n\t\n\t\n\tfunction Service(name, options) {\n\t  Namespace.call(this, name, options);\n\t  /**\r\n\t   * Service methods.\r\n\t   * @type {Object.<string,Method>}\r\n\t   */\n\t\n\t  this.methods = {}; // toJSON, marker\n\t\n\t  /**\r\n\t   * Cached methods as an array.\r\n\t   * @type {Method[]|null}\r\n\t   * @private\r\n\t   */\n\t\n\t  this._methodsArray = null;\n\t}\n\t/**\r\n\t * Service descriptor.\r\n\t * @interface IService\r\n\t * @extends INamespace\r\n\t * @property {Object.<string,IMethod>} methods Method descriptors\r\n\t */\n\t\n\t/**\r\n\t * Constructs a service from a service descriptor.\r\n\t * @param {string} name Service name\r\n\t * @param {IService} json Service descriptor\r\n\t * @returns {Service} Created service\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t */\n\t\n\t\n\tService.fromJSON = function fromJSON(name, json) {\n\t  var service = new Service(name, json.options);\n\t  /* istanbul ignore else */\n\t\n\t  if (json.methods) for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i) {\n\t    service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n\t  }\n\t  if (json.nested) service.addJSON(json.nested);\n\t  service.comment = json.comment;\n\t  return service;\n\t};\n\t/**\r\n\t * Converts this service to a service descriptor.\r\n\t * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n\t * @returns {IService} Service descriptor\r\n\t */\n\t\n\t\n\tService.prototype.toJSON = function toJSON(toJSONOptions) {\n\t  var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n\t  var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n\t  return util.toObject([\"options\", inherited && inherited.options || undefined, \"methods\", Namespace.arrayToJSON(this.methodsArray, toJSONOptions) ||\n\t  /* istanbul ignore next */\n\t  {}, \"nested\", inherited && inherited.nested || undefined, \"comment\", keepComments ? this.comment : undefined]);\n\t};\n\t/**\r\n\t * Methods of this service as an array for iteration.\r\n\t * @name Service#methodsArray\r\n\t * @type {Method[]}\r\n\t * @readonly\r\n\t */\n\t\n\t\n\tObject.defineProperty(Service.prototype, \"methodsArray\", {\n\t  get: function get() {\n\t    return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n\t  }\n\t});\n\t\n\tfunction clearCache(service) {\n\t  service._methodsArray = null;\n\t  return service;\n\t}\n\t/**\r\n\t * @override\r\n\t */\n\t\n\t\n\tService.prototype.get = function get(name) {\n\t  return this.methods[name] || Namespace.prototype.get.call(this, name);\n\t};\n\t/**\r\n\t * @override\r\n\t */\n\t\n\t\n\tService.prototype.resolveAll = function resolveAll() {\n\t  var methods = this.methodsArray;\n\t\n\t  for (var i = 0; i < methods.length; ++i) {\n\t    methods[i].resolve();\n\t  }\n\t\n\t  return Namespace.prototype.resolve.call(this);\n\t};\n\t/**\r\n\t * @override\r\n\t */\n\t\n\t\n\tService.prototype.add = function add(object) {\n\t  /* istanbul ignore if */\n\t  if (this.get(object.name)) throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\t\n\t  if (object instanceof Method) {\n\t    this.methods[object.name] = object;\n\t    object.parent = this;\n\t    return clearCache(this);\n\t  }\n\t\n\t  return Namespace.prototype.add.call(this, object);\n\t};\n\t/**\r\n\t * @override\r\n\t */\n\t\n\t\n\tService.prototype.remove = function remove(object) {\n\t  if (object instanceof Method) {\n\t    /* istanbul ignore if */\n\t    if (this.methods[object.name] !== object) throw Error(object + \" is not a member of \" + this);\n\t    delete this.methods[object.name];\n\t    object.parent = null;\n\t    return clearCache(this);\n\t  }\n\t\n\t  return Namespace.prototype.remove.call(this, object);\n\t};\n\t/**\r\n\t * Creates a runtime service using the specified rpc implementation.\r\n\t * @param {RPCImpl} rpcImpl RPC implementation\r\n\t * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n\t * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n\t * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\r\n\t */\n\t\n\t\n\tService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n\t  var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n\t\n\t  for (var i = 0, method; i <\n\t  /* initializes */\n\t  this.methodsArray.length; ++i) {\n\t    var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n\t    rpcService[methodName] = util.codegen([\"r\", \"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n\t      m: method,\n\t      q: method.resolvedRequestType.ctor,\n\t      s: method.resolvedResponseType.ctor\n\t    });\n\t  }\n\t\n\t  return rpcService;\n\t};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = Method; // extends ReflectionObject\n\t\n\tvar ReflectionObject = __webpack_require__(50);\n\t\n\t((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\t\n\tvar util = __webpack_require__(51);\n\t/**\r\n\t * Constructs a new service method instance.\r\n\t * @classdesc Reflected service method.\r\n\t * @extends ReflectionObject\r\n\t * @constructor\r\n\t * @param {string} name Method name\r\n\t * @param {string|undefined} type Method type, usually `\"rpc\"`\r\n\t * @param {string} requestType Request message type\r\n\t * @param {string} responseType Response message type\r\n\t * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\r\n\t * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\r\n\t * @param {Object.<string,*>} [options] Declared options\r\n\t * @param {string} [comment] The comment for this method\r\n\t */\n\t\n\t\n\tfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\n\t  /* istanbul ignore next */\n\t  if (util.isObject(requestStream)) {\n\t    options = requestStream;\n\t    requestStream = responseStream = undefined;\n\t  } else if (util.isObject(responseStream)) {\n\t    options = responseStream;\n\t    responseStream = undefined;\n\t  }\n\t  /* istanbul ignore if */\n\t\n\t\n\t  if (!(type === undefined || util.isString(type))) throw TypeError(\"type must be a string\");\n\t  /* istanbul ignore if */\n\t\n\t  if (!util.isString(requestType)) throw TypeError(\"requestType must be a string\");\n\t  /* istanbul ignore if */\n\t\n\t  if (!util.isString(responseType)) throw TypeError(\"responseType must be a string\");\n\t  ReflectionObject.call(this, name, options);\n\t  /**\r\n\t   * Method type.\r\n\t   * @type {string}\r\n\t   */\n\t\n\t  this.type = type || \"rpc\"; // toJSON\n\t\n\t  /**\r\n\t   * Request type.\r\n\t   * @type {string}\r\n\t   */\n\t\n\t  this.requestType = requestType; // toJSON, marker\n\t\n\t  /**\r\n\t   * Whether requests are streamed or not.\r\n\t   * @type {boolean|undefined}\r\n\t   */\n\t\n\t  this.requestStream = requestStream ? true : undefined; // toJSON\n\t\n\t  /**\r\n\t   * Response type.\r\n\t   * @type {string}\r\n\t   */\n\t\n\t  this.responseType = responseType; // toJSON\n\t\n\t  /**\r\n\t   * Whether responses are streamed or not.\r\n\t   * @type {boolean|undefined}\r\n\t   */\n\t\n\t  this.responseStream = responseStream ? true : undefined; // toJSON\n\t\n\t  /**\r\n\t   * Resolved request type.\r\n\t   * @type {Type|null}\r\n\t   */\n\t\n\t  this.resolvedRequestType = null;\n\t  /**\r\n\t   * Resolved response type.\r\n\t   * @type {Type|null}\r\n\t   */\n\t\n\t  this.resolvedResponseType = null;\n\t  /**\r\n\t   * Comment for this method\r\n\t   * @type {string|null}\r\n\t   */\n\t\n\t  this.comment = comment;\n\t}\n\t/**\r\n\t * Method descriptor.\r\n\t * @interface IMethod\r\n\t * @property {string} [type=\"rpc\"] Method type\r\n\t * @property {string} requestType Request type\r\n\t * @property {string} responseType Response type\r\n\t * @property {boolean} [requestStream=false] Whether requests are streamed\r\n\t * @property {boolean} [responseStream=false] Whether responses are streamed\r\n\t * @property {Object.<string,*>} [options] Method options\r\n\t */\n\t\n\t/**\r\n\t * Constructs a method from a method descriptor.\r\n\t * @param {string} name Method name\r\n\t * @param {IMethod} json Method descriptor\r\n\t * @returns {Method} Created method\r\n\t * @throws {TypeError} If arguments are invalid\r\n\t */\n\t\n\t\n\tMethod.fromJSON = function fromJSON(name, json) {\n\t  return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\n\t};\n\t/**\r\n\t * Converts this method to a method descriptor.\r\n\t * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n\t * @returns {IMethod} Method descriptor\r\n\t */\n\t\n\t\n\tMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n\t  var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n\t  return util.toObject([\"type\", this.type !== \"rpc\" &&\n\t  /* istanbul ignore next */\n\t  this.type || undefined, \"requestType\", this.requestType, \"requestStream\", this.requestStream, \"responseType\", this.responseType, \"responseStream\", this.responseStream, \"options\", this.options, \"comment\", keepComments ? this.comment : undefined]);\n\t};\n\t/**\r\n\t * @override\r\n\t */\n\t\n\t\n\tMethod.prototype.resolve = function resolve() {\n\t  /* istanbul ignore if */\n\t  if (this.resolved) return this;\n\t  this.resolvedRequestType = this.parent.lookupType(this.requestType);\n\t  this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\t  return ReflectionObject.prototype.resolve.call(this);\n\t};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = Message;\n\t\n\tvar util = __webpack_require__(33);\n\t/**\r\n\t * Constructs a new message instance.\r\n\t * @classdesc Abstract runtime message.\r\n\t * @constructor\r\n\t * @param {Properties<T>} [properties] Properties to set\r\n\t * @template T extends object = object\r\n\t */\n\t\n\t\n\tfunction Message(properties) {\n\t  // not used internally\n\t  if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n\t    this[keys[i]] = properties[keys[i]];\n\t  }\n\t}\n\t/**\r\n\t * Reference to the reflected type.\r\n\t * @name Message.$type\r\n\t * @type {Type}\r\n\t * @readonly\r\n\t */\n\t\n\t/**\r\n\t * Reference to the reflected type.\r\n\t * @name Message#$type\r\n\t * @type {Type}\r\n\t * @readonly\r\n\t */\n\t\n\t/*eslint-disable valid-jsdoc*/\n\t\n\t/**\r\n\t * Creates a new message of this type using the specified properties.\r\n\t * @param {Object.<string,*>} [properties] Properties to set\r\n\t * @returns {Message<T>} Message instance\r\n\t * @template T extends Message<T>\r\n\t * @this Constructor<T>\r\n\t */\n\t\n\t\n\tMessage.create = function create(properties) {\n\t  return this.$type.create(properties);\n\t};\n\t/**\r\n\t * Encodes a message of this type.\r\n\t * @param {T|Object.<string,*>} message Message to encode\r\n\t * @param {Writer} [writer] Writer to use\r\n\t * @returns {Writer} Writer\r\n\t * @template T extends Message<T>\r\n\t * @this Constructor<T>\r\n\t */\n\t\n\t\n\tMessage.encode = function encode(message, writer) {\n\t  return this.$type.encode(message, writer);\n\t};\n\t/**\r\n\t * Encodes a message of this type preceeded by its length as a varint.\r\n\t * @param {T|Object.<string,*>} message Message to encode\r\n\t * @param {Writer} [writer] Writer to use\r\n\t * @returns {Writer} Writer\r\n\t * @template T extends Message<T>\r\n\t * @this Constructor<T>\r\n\t */\n\t\n\t\n\tMessage.encodeDelimited = function encodeDelimited(message, writer) {\n\t  return this.$type.encodeDelimited(message, writer);\n\t};\n\t/**\r\n\t * Decodes a message of this type.\r\n\t * @name Message.decode\r\n\t * @function\r\n\t * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n\t * @returns {T} Decoded message\r\n\t * @template T extends Message<T>\r\n\t * @this Constructor<T>\r\n\t */\n\t\n\t\n\tMessage.decode = function decode(reader) {\n\t  return this.$type.decode(reader);\n\t};\n\t/**\r\n\t * Decodes a message of this type preceeded by its length as a varint.\r\n\t * @name Message.decodeDelimited\r\n\t * @function\r\n\t * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n\t * @returns {T} Decoded message\r\n\t * @template T extends Message<T>\r\n\t * @this Constructor<T>\r\n\t */\n\t\n\t\n\tMessage.decodeDelimited = function decodeDelimited(reader) {\n\t  return this.$type.decodeDelimited(reader);\n\t};\n\t/**\r\n\t * Verifies a message of this type.\r\n\t * @name Message.verify\r\n\t * @function\r\n\t * @param {Object.<string,*>} message Plain object to verify\r\n\t * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n\t */\n\t\n\t\n\tMessage.verify = function verify(message) {\n\t  return this.$type.verify(message);\n\t};\n\t/**\r\n\t * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n\t * @param {Object.<string,*>} object Plain object\r\n\t * @returns {T} Message instance\r\n\t * @template T extends Message<T>\r\n\t * @this Constructor<T>\r\n\t */\n\t\n\t\n\tMessage.fromObject = function fromObject(object) {\n\t  return this.$type.fromObject(object);\n\t};\n\t/**\r\n\t * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n\t * @param {T} message Message instance\r\n\t * @param {IConversionOptions} [options] Conversion options\r\n\t * @returns {Object.<string,*>} Plain object\r\n\t * @template T extends Message<T>\r\n\t * @this Constructor<T>\r\n\t */\n\t\n\t\n\tMessage.toObject = function toObject(message, options) {\n\t  return this.$type.toObject(message, options);\n\t};\n\t/**\r\n\t * Converts this message to JSON.\r\n\t * @returns {Object.<string,*>} JSON object\r\n\t */\n\t\n\t\n\tMessage.prototype.toJSON = function toJSON() {\n\t  return this.$type.toObject(this, util.toJSONOptions);\n\t};\n\t/*eslint-enable valid-jsdoc*/\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = decoder;\n\t\n\tvar Enum = __webpack_require__(49),\n\t    types = __webpack_require__(58),\n\t    util = __webpack_require__(51);\n\t\n\tfunction missing(field) {\n\t  return \"missing required '\" + field.name + \"'\";\n\t}\n\t/**\r\n\t * Generates a decoder specific to the specified message type.\r\n\t * @param {Type} mtype Message type\r\n\t * @returns {Codegen} Codegen instance\r\n\t */\n\t\n\t\n\tfunction decoder(mtype) {\n\t  /* eslint-disable no-unexpected-multiline */\n\t  var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")(\"if(!(r instanceof Reader))\")(\"r=Reader.create(r)\")(\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function (field) {\n\t    return field.map;\n\t  }).length ? \",k\" : \"\"))(\"while(r.pos<c){\")(\"var t=r.uint32()\");\n\t  if (mtype.group) gen(\"if((t&7)===4)\")(\"break\");\n\t  gen(\"switch(t>>>3){\");\n\t  var i = 0;\n\t\n\t  for (; i <\n\t  /* initializes */\n\t  mtype.fieldsArray.length; ++i) {\n\t    var field = mtype._fieldsArray[i].resolve(),\n\t        type = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n\t        ref = \"m\" + util.safeProp(field.name);\n\t\n\t    gen(\"case %i:\", field.id); // Map fields\n\t\n\t    if (field.map) {\n\t      gen(\"r.skip().pos++\") // assumes id 1 + key wireType\n\t      (\"if(%s===util.emptyObject)\", ref)(\"%s={}\", ref)(\"k=r.%s()\", field.keyType)(\"r.pos++\"); // assumes id 2 + value wireType\n\t\n\t      if (types.long[field.keyType] !== undefined) {\n\t        if (types.basic[type] === undefined) gen(\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\n\t        else gen(\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);\n\t      } else {\n\t        if (types.basic[type] === undefined) gen(\"%s[k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\n\t        else gen(\"%s[k]=r.%s()\", ref, type);\n\t      } // Repeated fields\n\t\n\t    } else if (field.repeated) {\n\t      gen(\"if(!(%s&&%s.length))\", ref, ref)(\"%s=[]\", ref); // Packable (always check for forward and backward compatiblity)\n\t\n\t      if (types.packed[type] !== undefined) gen(\"if((t&7)===2){\")(\"var c2=r.uint32()+r.pos\")(\"while(r.pos<c2)\")(\"%s.push(r.%s())\", ref, type)(\"}else\"); // Non-packed\n\t\n\t      if (types.basic[type] === undefined) gen(field.resolvedType.group ? \"%s.push(types[%i].decode(r))\" : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);else gen(\"%s.push(r.%s())\", ref, type); // Non-repeated\n\t    } else if (types.basic[type] === undefined) gen(field.resolvedType.group ? \"%s=types[%i].decode(r)\" : \"%s=types[%i].decode(r,r.uint32())\", ref, i);else gen(\"%s=r.%s()\", ref, type);\n\t\n\t    gen(\"break\"); // Unknown fields\n\t  }\n\t\n\t  gen(\"default:\")(\"r.skipType(t&7)\")(\"break\")(\"}\")(\"}\"); // Field presence\n\t\n\t  for (i = 0; i < mtype._fieldsArray.length; ++i) {\n\t    var rfield = mtype._fieldsArray[i];\n\t    if (rfield.required) gen(\"if(!m.hasOwnProperty(%j))\", rfield.name)(\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n\t  }\n\t\n\t  return gen(\"return m\");\n\t  /* eslint-enable no-unexpected-multiline */\n\t}\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = verifier;\n\t\n\tvar Enum = __webpack_require__(49),\n\t    util = __webpack_require__(51);\n\t\n\tfunction invalid(field, expected) {\n\t  return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\" + field.keyType + \"}\" : \"\") + \" expected\";\n\t}\n\t/**\r\n\t * Generates a partial value verifier.\r\n\t * @param {Codegen} gen Codegen instance\r\n\t * @param {Field} field Reflected field\r\n\t * @param {number} fieldIndex Field index\r\n\t * @param {string} ref Variable reference\r\n\t * @returns {Codegen} Codegen instance\r\n\t * @ignore\r\n\t */\n\t\n\t\n\tfunction genVerifyValue(gen, field, fieldIndex, ref) {\n\t  /* eslint-disable no-unexpected-multiline */\n\t  if (field.resolvedType) {\n\t    if (field.resolvedType instanceof Enum) {\n\t      gen(\"switch(%s){\", ref)(\"default:\")(\"return%j\", invalid(field, \"enum value\"));\n\t\n\t      for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) {\n\t        gen(\"case %i:\", field.resolvedType.values[keys[j]]);\n\t      }\n\t\n\t      gen(\"break\")(\"}\");\n\t    } else {\n\t      gen(\"{\")(\"var e=types[%i].verify(%s);\", fieldIndex, ref)(\"if(e)\")(\"return%j+e\", field.name + \".\")(\"}\");\n\t    }\n\t  } else {\n\t    switch (field.type) {\n\t      case \"int32\":\n\t      case \"uint32\":\n\t      case \"sint32\":\n\t      case \"fixed32\":\n\t      case \"sfixed32\":\n\t        gen(\"if(!util.isInteger(%s))\", ref)(\"return%j\", invalid(field, \"integer\"));\n\t        break;\n\t\n\t      case \"int64\":\n\t      case \"uint64\":\n\t      case \"sint64\":\n\t      case \"fixed64\":\n\t      case \"sfixed64\":\n\t        gen(\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)(\"return%j\", invalid(field, \"integer|Long\"));\n\t        break;\n\t\n\t      case \"float\":\n\t      case \"double\":\n\t        gen(\"if(typeof %s!==\\\"number\\\")\", ref)(\"return%j\", invalid(field, \"number\"));\n\t        break;\n\t\n\t      case \"bool\":\n\t        gen(\"if(typeof %s!==\\\"boolean\\\")\", ref)(\"return%j\", invalid(field, \"boolean\"));\n\t        break;\n\t\n\t      case \"string\":\n\t        gen(\"if(!util.isString(%s))\", ref)(\"return%j\", invalid(field, \"string\"));\n\t        break;\n\t\n\t      case \"bytes\":\n\t        gen(\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)(\"return%j\", invalid(field, \"buffer\"));\n\t        break;\n\t    }\n\t  }\n\t\n\t  return gen;\n\t  /* eslint-enable no-unexpected-multiline */\n\t}\n\t/**\r\n\t * Generates a partial key verifier.\r\n\t * @param {Codegen} gen Codegen instance\r\n\t * @param {Field} field Reflected field\r\n\t * @param {string} ref Variable reference\r\n\t * @returns {Codegen} Codegen instance\r\n\t * @ignore\r\n\t */\n\t\n\t\n\tfunction genVerifyKey(gen, field, ref) {\n\t  /* eslint-disable no-unexpected-multiline */\n\t  switch (field.keyType) {\n\t    case \"int32\":\n\t    case \"uint32\":\n\t    case \"sint32\":\n\t    case \"fixed32\":\n\t    case \"sfixed32\":\n\t      gen(\"if(!util.key32Re.test(%s))\", ref)(\"return%j\", invalid(field, \"integer key\"));\n\t      break;\n\t\n\t    case \"int64\":\n\t    case \"uint64\":\n\t    case \"sint64\":\n\t    case \"fixed64\":\n\t    case \"sfixed64\":\n\t      gen(\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n\t      (\"return%j\", invalid(field, \"integer|Long key\"));\n\t      break;\n\t\n\t    case \"bool\":\n\t      gen(\"if(!util.key2Re.test(%s))\", ref)(\"return%j\", invalid(field, \"boolean key\"));\n\t      break;\n\t  }\n\t\n\t  return gen;\n\t  /* eslint-enable no-unexpected-multiline */\n\t}\n\t/**\r\n\t * Generates a verifier specific to the specified message type.\r\n\t * @param {Type} mtype Message type\r\n\t * @returns {Codegen} Codegen instance\r\n\t */\n\t\n\t\n\tfunction verifier(mtype) {\n\t  /* eslint-disable no-unexpected-multiline */\n\t  var gen = util.codegen([\"m\"], mtype.name + \"$verify\")(\"if(typeof m!==\\\"object\\\"||m===null)\")(\"return%j\", \"object expected\");\n\t  var oneofs = mtype.oneofsArray,\n\t      seenFirstField = {};\n\t  if (oneofs.length) gen(\"var p={}\");\n\t\n\t  for (var i = 0; i <\n\t  /* initializes */\n\t  mtype.fieldsArray.length; ++i) {\n\t    var field = mtype._fieldsArray[i].resolve(),\n\t        ref = \"m\" + util.safeProp(field.name);\n\t\n\t    if (field.optional) gen(\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\t    // map fields\n\t\n\t    if (field.map) {\n\t      gen(\"if(!util.isObject(%s))\", ref)(\"return%j\", invalid(field, \"object\"))(\"var k=Object.keys(%s)\", ref)(\"for(var i=0;i<k.length;++i){\");\n\t      genVerifyKey(gen, field, \"k[i]\");\n\t      genVerifyValue(gen, field, i, ref + \"[k[i]]\")(\"}\"); // repeated fields\n\t    } else if (field.repeated) {\n\t      gen(\"if(!Array.isArray(%s))\", ref)(\"return%j\", invalid(field, \"array\"))(\"for(var i=0;i<%s.length;++i){\", ref);\n\t      genVerifyValue(gen, field, i, ref + \"[i]\")(\"}\"); // required or present fields\n\t    } else {\n\t      if (field.partOf) {\n\t        var oneofProp = util.safeProp(field.partOf.name);\n\t        if (seenFirstField[field.partOf.name] === 1) gen(\"if(p%s===1)\", oneofProp)(\"return%j\", field.partOf.name + \": multiple values\");\n\t        seenFirstField[field.partOf.name] = 1;\n\t        gen(\"p%s=1\", oneofProp);\n\t      }\n\t\n\t      genVerifyValue(gen, field, i, ref);\n\t    }\n\t\n\t    if (field.optional) gen(\"}\");\n\t  }\n\t\n\t  return gen(\"return null\");\n\t  /* eslint-enable no-unexpected-multiline */\n\t}\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/**\r\n\t * Runtime message from/to plain object converters.\r\n\t * @namespace\r\n\t */\n\t\n\tvar converter = exports;\n\t\n\tvar Enum = __webpack_require__(49),\n\t    util = __webpack_require__(51);\n\t/**\r\n\t * Generates a partial value fromObject conveter.\r\n\t * @param {Codegen} gen Codegen instance\r\n\t * @param {Field} field Reflected field\r\n\t * @param {number} fieldIndex Field index\r\n\t * @param {string} prop Property reference\r\n\t * @returns {Codegen} Codegen instance\r\n\t * @ignore\r\n\t */\n\t\n\t\n\tfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n\t  /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n\t  if (field.resolvedType) {\n\t    if (field.resolvedType instanceof Enum) {\n\t      gen(\"switch(d%s){\", prop);\n\t\n\t      for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n\t        if (field.repeated && values[keys[i]] === field.typeDefault) gen(\"default:\");\n\t        gen(\"case%j:\", keys[i])(\"case %i:\", values[keys[i]])(\"m%s=%j\", prop, values[keys[i]])(\"break\");\n\t      }\n\t\n\t      gen(\"}\");\n\t    } else gen(\"if(typeof d%s!==\\\"object\\\")\", prop)(\"throw TypeError(%j)\", field.fullName + \": object expected\")(\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n\t  } else {\n\t    var isUnsigned = false;\n\t\n\t    switch (field.type) {\n\t      case \"double\":\n\t      case \"float\":\n\t        gen(\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n\t\n\t        break;\n\t\n\t      case \"uint32\":\n\t      case \"fixed32\":\n\t        gen(\"m%s=d%s>>>0\", prop, prop);\n\t        break;\n\t\n\t      case \"int32\":\n\t      case \"sint32\":\n\t      case \"sfixed32\":\n\t        gen(\"m%s=d%s|0\", prop, prop);\n\t        break;\n\t\n\t      case \"uint64\":\n\t        isUnsigned = true;\n\t      // eslint-disable-line no-fallthrough\n\t\n\t      case \"int64\":\n\t      case \"sint64\":\n\t      case \"fixed64\":\n\t      case \"sfixed64\":\n\t        gen(\"if(util.Long)\")(\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)(\"else if(typeof d%s===\\\"string\\\")\", prop)(\"m%s=parseInt(d%s,10)\", prop, prop)(\"else if(typeof d%s===\\\"number\\\")\", prop)(\"m%s=d%s\", prop, prop)(\"else if(typeof d%s===\\\"object\\\")\", prop)(\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n\t        break;\n\t\n\t      case \"bytes\":\n\t        gen(\"if(typeof d%s===\\\"string\\\")\", prop)(\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)(\"else if(d%s.length)\", prop)(\"m%s=d%s\", prop, prop);\n\t        break;\n\t\n\t      case \"string\":\n\t        gen(\"m%s=String(d%s)\", prop, prop);\n\t        break;\n\t\n\t      case \"bool\":\n\t        gen(\"m%s=Boolean(d%s)\", prop, prop);\n\t        break;\n\t\n\t      /* default: gen\r\n\t          (\"m%s=d%s\", prop, prop);\r\n\t          break; */\n\t    }\n\t  }\n\t\n\t  return gen;\n\t  /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n\t}\n\t/**\r\n\t * Generates a plain object to runtime message converter specific to the specified message type.\r\n\t * @param {Type} mtype Message type\r\n\t * @returns {Codegen} Codegen instance\r\n\t */\n\t\n\t\n\tconverter.fromObject = function fromObject(mtype) {\n\t  /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n\t  var fields = mtype.fieldsArray;\n\t  var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")(\"if(d instanceof this.ctor)\")(\"return d\");\n\t  if (!fields.length) return gen(\"return new this.ctor\");\n\t  gen(\"var m=new this.ctor\");\n\t\n\t  for (var i = 0; i < fields.length; ++i) {\n\t    var field = fields[i].resolve(),\n\t        prop = util.safeProp(field.name); // Map fields\n\t\n\t    if (field.map) {\n\t      gen(\"if(d%s){\", prop)(\"if(typeof d%s!==\\\"object\\\")\", prop)(\"throw TypeError(%j)\", field.fullName + \": object expected\")(\"m%s={}\", prop)(\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n\t      genValuePartial_fromObject(gen, field,\n\t      /* not sorted */\n\t      i, prop + \"[ks[i]]\")(\"}\")(\"}\"); // Repeated fields\n\t    } else if (field.repeated) {\n\t      gen(\"if(d%s){\", prop)(\"if(!Array.isArray(d%s))\", prop)(\"throw TypeError(%j)\", field.fullName + \": array expected\")(\"m%s=[]\", prop)(\"for(var i=0;i<d%s.length;++i){\", prop);\n\t      genValuePartial_fromObject(gen, field,\n\t      /* not sorted */\n\t      i, prop + \"[i]\")(\"}\")(\"}\"); // Non-repeated fields\n\t    } else {\n\t      if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n\t      (\"if(d%s!=null){\", prop); // !== undefined && !== null\n\t\n\t      genValuePartial_fromObject(gen, field,\n\t      /* not sorted */\n\t      i, prop);\n\t      if (!(field.resolvedType instanceof Enum)) gen(\"}\");\n\t    }\n\t  }\n\t\n\t  return gen(\"return m\");\n\t  /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n\t};\n\t/**\r\n\t * Generates a partial value toObject converter.\r\n\t * @param {Codegen} gen Codegen instance\r\n\t * @param {Field} field Reflected field\r\n\t * @param {number} fieldIndex Field index\r\n\t * @param {string} prop Property reference\r\n\t * @returns {Codegen} Codegen instance\r\n\t * @ignore\r\n\t */\n\t\n\t\n\tfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n\t  /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n\t  if (field.resolvedType) {\n\t    if (field.resolvedType instanceof Enum) gen(\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);else gen(\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n\t  } else {\n\t    var isUnsigned = false;\n\t\n\t    switch (field.type) {\n\t      case \"double\":\n\t      case \"float\":\n\t        gen(\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n\t        break;\n\t\n\t      case \"uint64\":\n\t        isUnsigned = true;\n\t      // eslint-disable-line no-fallthrough\n\t\n\t      case \"int64\":\n\t      case \"sint64\":\n\t      case \"fixed64\":\n\t      case \"sfixed64\":\n\t        gen(\"if(typeof m%s===\\\"number\\\")\", prop)(\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)(\"else\") // Long-like\n\t        (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\" : \"\", prop);\n\t        break;\n\t\n\t      case \"bytes\":\n\t        gen(\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n\t        break;\n\t\n\t      default:\n\t        gen(\"d%s=m%s\", prop, prop);\n\t        break;\n\t    }\n\t  }\n\t\n\t  return gen;\n\t  /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n\t}\n\t/**\r\n\t * Generates a runtime message to plain object converter specific to the specified message type.\r\n\t * @param {Type} mtype Message type\r\n\t * @returns {Codegen} Codegen instance\r\n\t */\n\t\n\t\n\tconverter.toObject = function toObject(mtype) {\n\t  /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n\t  var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\t  if (!fields.length) return util.codegen()(\"return {}\");\n\t  var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")(\"if(!o)\")(\"o={}\")(\"var d={}\");\n\t  var repeatedFields = [],\n\t      mapFields = [],\n\t      normalFields = [],\n\t      i = 0;\n\t\n\t  for (; i < fields.length; ++i) {\n\t    if (!fields[i].partOf) (fields[i].resolve().repeated ? repeatedFields : fields[i].map ? mapFields : normalFields).push(fields[i]);\n\t  }\n\t\n\t  if (repeatedFields.length) {\n\t    gen(\"if(o.arrays||o.defaults){\");\n\t\n\t    for (i = 0; i < repeatedFields.length; ++i) {\n\t      gen(\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n\t    }\n\t\n\t    gen(\"}\");\n\t  }\n\t\n\t  if (mapFields.length) {\n\t    gen(\"if(o.objects||o.defaults){\");\n\t\n\t    for (i = 0; i < mapFields.length; ++i) {\n\t      gen(\"d%s={}\", util.safeProp(mapFields[i].name));\n\t    }\n\t\n\t    gen(\"}\");\n\t  }\n\t\n\t  if (normalFields.length) {\n\t    gen(\"if(o.defaults){\");\n\t\n\t    for (i = 0; i < normalFields.length; ++i) {\n\t      var field = normalFields[i],\n\t          prop = util.safeProp(field.name);\n\t      if (field.resolvedType instanceof Enum) gen(\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);else if (field.long) gen(\"if(util.Long){\")(\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)(\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)(\"}else\")(\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());else if (field.bytes) {\n\t        var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n\t        gen(\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))(\"else{\")(\"d%s=%s\", prop, arrayDefault)(\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)(\"}\");\n\t      } else gen(\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n\t    }\n\t\n\t    gen(\"}\");\n\t  }\n\t\n\t  var hasKs2 = false;\n\t\n\t  for (i = 0; i < fields.length; ++i) {\n\t    var field = fields[i],\n\t        index = mtype._fieldsArray.indexOf(field),\n\t        prop = util.safeProp(field.name);\n\t\n\t    if (field.map) {\n\t      if (!hasKs2) {\n\t        hasKs2 = true;\n\t        gen(\"var ks2\");\n\t      }\n\t\n\t      gen(\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)(\"d%s={}\", prop)(\"for(var j=0;j<ks2.length;++j){\");\n\t      genValuePartial_toObject(gen, field,\n\t      /* sorted */\n\t      index, prop + \"[ks2[j]]\")(\"}\");\n\t    } else if (field.repeated) {\n\t      gen(\"if(m%s&&m%s.length){\", prop, prop)(\"d%s=[]\", prop)(\"for(var j=0;j<m%s.length;++j){\", prop);\n\t      genValuePartial_toObject(gen, field,\n\t      /* sorted */\n\t      index, prop + \"[j]\")(\"}\");\n\t    } else {\n\t      gen(\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n\t\n\t      genValuePartial_toObject(gen, field,\n\t      /* sorted */\n\t      index, prop);\n\t      if (field.partOf) gen(\"if(o.oneofs)\")(\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n\t    }\n\t\n\t    gen(\"}\");\n\t  }\n\t\n\t  return gen(\"return d\");\n\t  /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n\t};\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/**\r\n\t * Wrappers for common types.\r\n\t * @type {Object.<string,IWrapper>}\r\n\t * @const\r\n\t */\n\t\n\tvar wrappers = exports;\n\t\n\tvar Message = __webpack_require__(63);\n\t/**\r\n\t * From object converter part of an {@link IWrapper}.\r\n\t * @typedef WrapperFromObjectConverter\r\n\t * @type {function}\r\n\t * @param {Object.<string,*>} object Plain object\r\n\t * @returns {Message<{}>} Message instance\r\n\t * @this Type\r\n\t */\n\t\n\t/**\r\n\t * To object converter part of an {@link IWrapper}.\r\n\t * @typedef WrapperToObjectConverter\r\n\t * @type {function}\r\n\t * @param {Message<{}>} message Message instance\r\n\t * @param {IConversionOptions} [options] Conversion options\r\n\t * @returns {Object.<string,*>} Plain object\r\n\t * @this Type\r\n\t */\n\t\n\t/**\r\n\t * Common type wrapper part of {@link wrappers}.\r\n\t * @interface IWrapper\r\n\t * @property {WrapperFromObjectConverter} [fromObject] From object converter\r\n\t * @property {WrapperToObjectConverter} [toObject] To object converter\r\n\t */\n\t// Custom wrapper for Any\n\t\n\t\n\twrappers[\".google.protobuf.Any\"] = {\n\t  fromObject: function fromObject(object) {\n\t    // unwrap value type if mapped\n\t    if (object && object[\"@type\"]) {\n\t      var type = this.lookup(object[\"@type\"]);\n\t      /* istanbul ignore else */\n\t\n\t      if (type) {\n\t        // type_url does not accept leading \".\"\n\t        var type_url = object[\"@type\"].charAt(0) === \".\" ? object[\"@type\"].substr(1) : object[\"@type\"]; // type_url prefix is optional, but path seperator is required\n\t\n\t        return this.create({\n\t          type_url: \"/\" + type_url,\n\t          value: type.encode(type.fromObject(object)).finish()\n\t        });\n\t      }\n\t    }\n\t\n\t    return this.fromObject(object);\n\t  },\n\t  toObject: function toObject(message, options) {\n\t    // decode value if requested and unmapped\n\t    if (options && options.json && message.type_url && message.value) {\n\t      // Only use fully qualified type name after the last '/'\n\t      var name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n\t      var type = this.lookup(name);\n\t      /* istanbul ignore else */\n\t\n\t      if (type) message = type.decode(message.value);\n\t    } // wrap value if unmapped\n\t\n\t\n\t    if (!(message instanceof this.ctor) && message instanceof Message) {\n\t      var object = message.$type.toObject(message, options);\n\t      object[\"@type\"] = message.$type.fullName;\n\t      return object;\n\t    }\n\t\n\t    return this.toObject(message, options);\n\t  }\n\t};\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = Root; // extends Namespace\n\t\n\tvar Namespace = __webpack_require__(56);\n\t\n\t((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\t\n\tvar Field = __webpack_require__(57),\n\t    Enum = __webpack_require__(49),\n\t    OneOf = __webpack_require__(59),\n\t    util = __webpack_require__(51);\n\t\n\tvar Type, // cyclic\n\tparse, // might be excluded\n\tcommon; // \"\n\t\n\t/**\r\n\t * Constructs a new root namespace instance.\r\n\t * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\r\n\t * @extends NamespaceBase\r\n\t * @constructor\r\n\t * @param {Object.<string,*>} [options] Top level options\r\n\t */\n\t\n\tfunction Root(options) {\n\t  Namespace.call(this, \"\", options);\n\t  /**\r\n\t   * Deferred extension fields.\r\n\t   * @type {Field[]}\r\n\t   */\n\t\n\t  this.deferred = [];\n\t  /**\r\n\t   * Resolved file names of loaded files.\r\n\t   * @type {string[]}\r\n\t   */\n\t\n\t  this.files = [];\n\t}\n\t/**\r\n\t * Loads a namespace descriptor into a root namespace.\r\n\t * @param {INamespace} json Nameespace descriptor\r\n\t * @param {Root} [root] Root namespace, defaults to create a new one if omitted\r\n\t * @returns {Root} Root namespace\r\n\t */\n\t\n\t\n\tRoot.fromJSON = function fromJSON(json, root) {\n\t  if (!root) root = new Root();\n\t  if (json.options) root.setOptions(json.options);\n\t  return root.addJSON(json.nested);\n\t};\n\t/**\r\n\t * Resolves the path of an imported file, relative to the importing origin.\r\n\t * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\r\n\t * @function\r\n\t * @param {string} origin The file name of the importing file\r\n\t * @param {string} target The file name being imported\r\n\t * @returns {string|null} Resolved path to `target` or `null` to skip the file\r\n\t */\n\t\n\t\n\tRoot.prototype.resolvePath = util.path.resolve; // A symbol-like function to safely signal synchronous loading\n\t\n\t/* istanbul ignore next */\n\t\n\tfunction SYNC() {} // eslint-disable-line no-empty-function\n\t\n\t/**\r\n\t * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n\t * @param {string|string[]} filename Names of one or multiple files to load\r\n\t * @param {IParseOptions} options Parse options\r\n\t * @param {LoadCallback} callback Callback function\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t\n\tRoot.prototype.load = function load(filename, options, callback) {\n\t  if (typeof options === \"function\") {\n\t    callback = options;\n\t    options = undefined;\n\t  }\n\t\n\t  var self = this;\n\t  if (!callback) return util.asPromise(load, self, filename, options);\n\t  var sync = callback === SYNC; // undocumented\n\t  // Finishes loading by calling the callback (exactly once)\n\t\n\t  function finish(err, root) {\n\t    /* istanbul ignore if */\n\t    if (!callback) return;\n\t    var cb = callback;\n\t    callback = null;\n\t    if (sync) throw err;\n\t    cb(err, root);\n\t  } // Processes a single file\n\t\n\t\n\t  function process(filename, source) {\n\t    try {\n\t      if (util.isString(source) && source.charAt(0) === \"{\") source = JSON.parse(source);\n\t      if (!util.isString(source)) self.setOptions(source.options).addJSON(source.nested);else {\n\t        parse.filename = filename;\n\t        var parsed = parse(source, self, options),\n\t            resolved,\n\t            i = 0;\n\t        if (parsed.imports) for (; i < parsed.imports.length; ++i) {\n\t          if (resolved = self.resolvePath(filename, parsed.imports[i])) fetch(resolved);\n\t        }\n\t        if (parsed.weakImports) for (i = 0; i < parsed.weakImports.length; ++i) {\n\t          if (resolved = self.resolvePath(filename, parsed.weakImports[i])) fetch(resolved, true);\n\t        }\n\t      }\n\t    } catch (err) {\n\t      finish(err);\n\t    }\n\t\n\t    if (!sync && !queued) finish(null, self); // only once anyway\n\t  } // Fetches a single file\n\t\n\t\n\t  function fetch(filename, weak) {\n\t    // Strip path if this file references a bundled definition\n\t    var idx = filename.lastIndexOf(\"google/protobuf/\");\n\t\n\t    if (idx > -1) {\n\t      var altname = filename.substring(idx);\n\t      if (altname in common) filename = altname;\n\t    } // Skip if already loaded / attempted\n\t\n\t\n\t    if (self.files.indexOf(filename) > -1) return;\n\t    self.files.push(filename); // Shortcut bundled definitions\n\t\n\t    if (filename in common) {\n\t      if (sync) process(filename, common[filename]);else {\n\t        ++queued;\n\t        setTimeout(function () {\n\t          --queued;\n\t          process(filename, common[filename]);\n\t        });\n\t      }\n\t      return;\n\t    } // Otherwise fetch from disk or network\n\t\n\t\n\t    if (sync) {\n\t      var source;\n\t\n\t      try {\n\t        source = util.fs.readFileSync(filename).toString(\"utf8\");\n\t      } catch (err) {\n\t        if (!weak) finish(err);\n\t        return;\n\t      }\n\t\n\t      process(filename, source);\n\t    } else {\n\t      ++queued;\n\t      util.fetch(filename, function (err, source) {\n\t        --queued;\n\t        /* istanbul ignore if */\n\t\n\t        if (!callback) return; // terminated meanwhile\n\t\n\t        if (err) {\n\t          /* istanbul ignore else */\n\t          if (!weak) finish(err);else if (!queued) // can't be covered reliably\n\t            finish(null, self);\n\t          return;\n\t        }\n\t\n\t        process(filename, source);\n\t      });\n\t    }\n\t  }\n\t\n\t  var queued = 0; // Assembling the root namespace doesn't require working type\n\t  // references anymore, so we can load everything in parallel\n\t\n\t  if (util.isString(filename)) filename = [filename];\n\t\n\t  for (var i = 0, resolved; i < filename.length; ++i) {\n\t    if (resolved = self.resolvePath(\"\", filename[i])) fetch(resolved);\n\t  }\n\t\n\t  if (sync) return self;\n\t  if (!queued) finish(null, self);\n\t  return undefined;\n\t}; // function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\t\n\t/**\r\n\t * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n\t * @function Root#load\r\n\t * @param {string|string[]} filename Names of one or multiple files to load\r\n\t * @param {LoadCallback} callback Callback function\r\n\t * @returns {undefined}\r\n\t * @variation 2\r\n\t */\n\t// function load(filename:string, callback:LoadCallback):undefined\n\t\n\t/**\r\n\t * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\r\n\t * @function Root#load\r\n\t * @param {string|string[]} filename Names of one or multiple files to load\r\n\t * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n\t * @returns {Promise<Root>} Promise\r\n\t * @variation 3\r\n\t */\n\t// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\t\n\t/**\r\n\t * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\r\n\t * @function Root#loadSync\r\n\t * @param {string|string[]} filename Names of one or multiple files to load\r\n\t * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n\t * @returns {Root} Root namespace\r\n\t * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n\t */\n\t\n\t\n\tRoot.prototype.loadSync = function loadSync(filename, options) {\n\t  if (!util.isNode) throw Error(\"not supported\");\n\t  return this.load(filename, options, SYNC);\n\t};\n\t/**\r\n\t * @override\r\n\t */\n\t\n\t\n\tRoot.prototype.resolveAll = function resolveAll() {\n\t  if (this.deferred.length) throw Error(\"unresolvable extensions: \" + this.deferred.map(function (field) {\n\t    return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n\t  }).join(\", \"));\n\t  return Namespace.prototype.resolveAll.call(this);\n\t}; // only uppercased (and thus conflict-free) children are exposed, see below\n\t\n\t\n\tvar exposeRe = /^[A-Z]/;\n\t/**\r\n\t * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\r\n\t * @param {Root} root Root instance\r\n\t * @param {Field} field Declaring extension field witin the declaring type\r\n\t * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\r\n\t * @inner\r\n\t * @ignore\r\n\t */\n\t\n\tfunction tryHandleExtension(root, field) {\n\t  var extendedType = field.parent.lookup(field.extend);\n\t\n\t  if (extendedType) {\n\t    var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n\t    sisterField.declaringField = field;\n\t    field.extensionField = sisterField;\n\t    extendedType.add(sisterField);\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t}\n\t/**\r\n\t * Called when any object is added to this root or its sub-namespaces.\r\n\t * @param {ReflectionObject} object Object added\r\n\t * @returns {undefined}\r\n\t * @private\r\n\t */\n\t\n\t\n\tRoot.prototype._handleAdd = function _handleAdd(object) {\n\t  if (object instanceof Field) {\n\t    if (\n\t    /* an extension field (implies not part of a oneof) */\n\t    object.extend !== undefined &&\n\t    /* not already handled */\n\t    !object.extensionField) if (!tryHandleExtension(this, object)) this.deferred.push(object);\n\t  } else if (object instanceof Enum) {\n\t    if (exposeRe.test(object.name)) object.parent[object.name] = object.values; // expose enum values as property of its parent\n\t  } else if (!(object instanceof OneOf))\n\t    /* everything else is a namespace */\n\t    {\n\t      if (object instanceof Type) // Try to handle any deferred extensions\n\t        for (var i = 0; i < this.deferred.length;) {\n\t          if (tryHandleExtension(this, this.deferred[i])) this.deferred.splice(i, 1);else ++i;\n\t        }\n\t\n\t      for (var j = 0; j <\n\t      /* initializes */\n\t      object.nestedArray.length; ++j) {\n\t        // recurse into the namespace\n\t        this._handleAdd(object._nestedArray[j]);\n\t      }\n\t\n\t      if (exposeRe.test(object.name)) object.parent[object.name] = object; // expose namespace as property of its parent\n\t    } // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n\t  // properties of namespaces just like static code does. This allows using a .d.ts generated for\n\t  // a static module with reflection-based solutions where the condition is met.\n\t\n\t};\n\t/**\r\n\t * Called when any object is removed from this root or its sub-namespaces.\r\n\t * @param {ReflectionObject} object Object removed\r\n\t * @returns {undefined}\r\n\t * @private\r\n\t */\n\t\n\t\n\tRoot.prototype._handleRemove = function _handleRemove(object) {\n\t  if (object instanceof Field) {\n\t    if (\n\t    /* an extension field */\n\t    object.extend !== undefined) {\n\t      if (\n\t      /* already handled */\n\t      object.extensionField) {\n\t        // remove its sister field\n\t        object.extensionField.parent.remove(object.extensionField);\n\t        object.extensionField = null;\n\t      } else {\n\t        // cancel the extension\n\t        var index = this.deferred.indexOf(object);\n\t        /* istanbul ignore else */\n\t\n\t        if (index > -1) this.deferred.splice(index, 1);\n\t      }\n\t    }\n\t  } else if (object instanceof Enum) {\n\t    if (exposeRe.test(object.name)) delete object.parent[object.name]; // unexpose enum values\n\t  } else if (object instanceof Namespace) {\n\t    for (var i = 0; i <\n\t    /* initializes */\n\t    object.nestedArray.length; ++i) {\n\t      // recurse into the namespace\n\t      this._handleRemove(object._nestedArray[i]);\n\t    }\n\t\n\t    if (exposeRe.test(object.name)) delete object.parent[object.name]; // unexpose namespaces\n\t  }\n\t}; // Sets up cyclic dependencies (called in index-light)\n\t\n\t\n\tRoot._configure = function (Type_, parse_, common_) {\n\t  Type = Type_;\n\t  parse = parse_;\n\t  common = common_;\n\t};\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = tokenize;\n\tvar delimRe = /[\\s{}=;:[\\],'\"()<>]/g,\n\t    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n\t    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\tvar setCommentRe = /^ *[*/]+ */,\n\t    setCommentAltRe = /^\\s*\\*?\\/*/,\n\t    setCommentSplitRe = /\\n/g,\n\t    whitespaceRe = /\\s/,\n\t    unescapeRe = /\\\\(.?)/g;\n\tvar unescapeMap = {\n\t  \"0\": \"\\0\",\n\t  \"r\": \"\\r\",\n\t  \"n\": \"\\n\",\n\t  \"t\": \"\\t\"\n\t};\n\t/**\r\n\t * Unescapes a string.\r\n\t * @param {string} str String to unescape\r\n\t * @returns {string} Unescaped string\r\n\t * @property {Object.<string,string>} map Special characters map\r\n\t * @memberof tokenize\r\n\t */\n\t\n\tfunction unescape(str) {\n\t  return str.replace(unescapeRe, function ($0, $1) {\n\t    switch ($1) {\n\t      case \"\\\\\":\n\t      case \"\":\n\t        return $1;\n\t\n\t      default:\n\t        return unescapeMap[$1] || \"\";\n\t    }\n\t  });\n\t}\n\t\n\ttokenize.unescape = unescape;\n\t/**\r\n\t * Gets the next token and advances.\r\n\t * @typedef TokenizerHandleNext\r\n\t * @type {function}\r\n\t * @returns {string|null} Next token or `null` on eof\r\n\t */\n\t\n\t/**\r\n\t * Peeks for the next token.\r\n\t * @typedef TokenizerHandlePeek\r\n\t * @type {function}\r\n\t * @returns {string|null} Next token or `null` on eof\r\n\t */\n\t\n\t/**\r\n\t * Pushes a token back to the stack.\r\n\t * @typedef TokenizerHandlePush\r\n\t * @type {function}\r\n\t * @param {string} token Token\r\n\t * @returns {undefined}\r\n\t */\n\t\n\t/**\r\n\t * Skips the next token.\r\n\t * @typedef TokenizerHandleSkip\r\n\t * @type {function}\r\n\t * @param {string} expected Expected token\r\n\t * @param {boolean} [optional=false] If optional\r\n\t * @returns {boolean} Whether the token matched\r\n\t * @throws {Error} If the token didn't match and is not optional\r\n\t */\n\t\n\t/**\r\n\t * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\r\n\t * @typedef TokenizerHandleCmnt\r\n\t * @type {function}\r\n\t * @param {number} [line] Line number\r\n\t * @returns {string|null} Comment text or `null` if none\r\n\t */\n\t\n\t/**\r\n\t * Handle object returned from {@link tokenize}.\r\n\t * @interface ITokenizerHandle\r\n\t * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\r\n\t * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\r\n\t * @property {TokenizerHandlePush} push Pushes a token back to the stack\r\n\t * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\r\n\t * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\r\n\t * @property {number} line Current line number\r\n\t */\n\t\n\t/**\r\n\t * Tokenizes the given .proto source and returns an object with useful utility functions.\r\n\t * @param {string} source Source contents\r\n\t * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\r\n\t * @returns {ITokenizerHandle} Tokenizer handle\r\n\t */\n\t\n\tfunction tokenize(source, alternateCommentMode) {\n\t  /* eslint-disable callback-return */\n\t  source = source.toString();\n\t  var offset = 0,\n\t      length = source.length,\n\t      line = 1,\n\t      commentType = null,\n\t      commentText = null,\n\t      commentLine = 0,\n\t      commentLineEmpty = false;\n\t  var stack = [];\n\t  var stringDelim = null;\n\t  /* istanbul ignore next */\n\t\n\t  /**\r\n\t   * Creates an error for illegal syntax.\r\n\t   * @param {string} subject Subject\r\n\t   * @returns {Error} Error created\r\n\t   * @inner\r\n\t   */\n\t\n\t  function illegal(subject) {\n\t    return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n\t  }\n\t  /**\r\n\t   * Reads a string till its end.\r\n\t   * @returns {string} String read\r\n\t   * @inner\r\n\t   */\n\t\n\t\n\t  function readString() {\n\t    var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n\t    re.lastIndex = offset - 1;\n\t    var match = re.exec(source);\n\t    if (!match) throw illegal(\"string\");\n\t    offset = re.lastIndex;\n\t    push(stringDelim);\n\t    stringDelim = null;\n\t    return unescape(match[1]);\n\t  }\n\t  /**\r\n\t   * Gets the character at `pos` within the source.\r\n\t   * @param {number} pos Position\r\n\t   * @returns {string} Character\r\n\t   * @inner\r\n\t   */\n\t\n\t\n\t  function charAt(pos) {\n\t    return source.charAt(pos);\n\t  }\n\t  /**\r\n\t   * Sets the current comment text.\r\n\t   * @param {number} start Start offset\r\n\t   * @param {number} end End offset\r\n\t   * @returns {undefined}\r\n\t   * @inner\r\n\t   */\n\t\n\t\n\t  function setComment(start, end) {\n\t    commentType = source.charAt(start++);\n\t    commentLine = line;\n\t    commentLineEmpty = false;\n\t    var lookback;\n\t\n\t    if (alternateCommentMode) {\n\t      lookback = 2; // alternate comment parsing: \"//\" or \"/*\"\n\t    } else {\n\t      lookback = 3; // \"///\" or \"/**\"\n\t    }\n\t\n\t    var commentOffset = start - lookback,\n\t        c;\n\t\n\t    do {\n\t      if (--commentOffset < 0 || (c = source.charAt(commentOffset)) === \"\\n\") {\n\t        commentLineEmpty = true;\n\t        break;\n\t      }\n\t    } while (c === \" \" || c === \"\\t\");\n\t\n\t    var lines = source.substring(start, end).split(setCommentSplitRe);\n\t\n\t    for (var i = 0; i < lines.length; ++i) {\n\t      lines[i] = lines[i].replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\").trim();\n\t    }\n\t\n\t    commentText = lines.join(\"\\n\").trim();\n\t  }\n\t\n\t  function isDoubleSlashCommentLine(startOffset) {\n\t    var endOffset = findEndOfLine(startOffset); // see if remaining line matches comment pattern\n\t\n\t    var lineText = source.substring(startOffset, endOffset); // look for 1 or 2 slashes since startOffset would already point past\n\t    // the first slash that started the comment.\n\t\n\t    var isComment = /^\\s*\\/{1,2}/.test(lineText);\n\t    return isComment;\n\t  }\n\t\n\t  function findEndOfLine(cursor) {\n\t    // find end of cursor's line\n\t    var endOffset = cursor;\n\t\n\t    while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n\t      endOffset++;\n\t    }\n\t\n\t    return endOffset;\n\t  }\n\t  /**\r\n\t   * Obtains the next token.\r\n\t   * @returns {string|null} Next token or `null` on eof\r\n\t   * @inner\r\n\t   */\n\t\n\t\n\t  function next() {\n\t    if (stack.length > 0) return stack.shift();\n\t    if (stringDelim) return readString();\n\t    var repeat, prev, curr, start, isDoc;\n\t\n\t    do {\n\t      if (offset === length) return null;\n\t      repeat = false;\n\t\n\t      while (whitespaceRe.test(curr = charAt(offset))) {\n\t        if (curr === \"\\n\") ++line;\n\t        if (++offset === length) return null;\n\t      }\n\t\n\t      if (charAt(offset) === \"/\") {\n\t        if (++offset === length) {\n\t          throw illegal(\"comment\");\n\t        }\n\t\n\t        if (charAt(offset) === \"/\") {\n\t          // Line\n\t          if (!alternateCommentMode) {\n\t            // check for triple-slash comment\n\t            isDoc = charAt(start = offset + 1) === \"/\";\n\t\n\t            while (charAt(++offset) !== \"\\n\") {\n\t              if (offset === length) {\n\t                return null;\n\t              }\n\t            }\n\t\n\t            ++offset;\n\t\n\t            if (isDoc) {\n\t              setComment(start, offset - 1);\n\t            }\n\t\n\t            ++line;\n\t            repeat = true;\n\t          } else {\n\t            // check for double-slash comments, consolidating consecutive lines\n\t            start = offset;\n\t            isDoc = false;\n\t\n\t            if (isDoubleSlashCommentLine(offset)) {\n\t              isDoc = true;\n\t\n\t              do {\n\t                offset = findEndOfLine(offset);\n\t\n\t                if (offset === length) {\n\t                  break;\n\t                }\n\t\n\t                offset++;\n\t              } while (isDoubleSlashCommentLine(offset));\n\t            } else {\n\t              offset = Math.min(length, findEndOfLine(offset) + 1);\n\t            }\n\t\n\t            if (isDoc) {\n\t              setComment(start, offset);\n\t            }\n\t\n\t            line++;\n\t            repeat = true;\n\t          }\n\t        } else if ((curr = charAt(offset)) === \"*\") {\n\t          /* Block */\n\t          // check for /** (regular comment mode) or /* (alternate comment mode)\n\t          start = offset + 1;\n\t          isDoc = alternateCommentMode || charAt(start) === \"*\";\n\t\n\t          do {\n\t            if (curr === \"\\n\") {\n\t              ++line;\n\t            }\n\t\n\t            if (++offset === length) {\n\t              throw illegal(\"comment\");\n\t            }\n\t\n\t            prev = curr;\n\t            curr = charAt(offset);\n\t          } while (prev !== \"*\" || curr !== \"/\");\n\t\n\t          ++offset;\n\t\n\t          if (isDoc) {\n\t            setComment(start, offset - 2);\n\t          }\n\t\n\t          repeat = true;\n\t        } else {\n\t          return \"/\";\n\t        }\n\t      }\n\t    } while (repeat); // offset !== length if we got here\n\t\n\t\n\t    var end = offset;\n\t    delimRe.lastIndex = 0;\n\t    var delim = delimRe.test(charAt(end++));\n\t    if (!delim) while (end < length && !delimRe.test(charAt(end))) {\n\t      ++end;\n\t    }\n\t    var token = source.substring(offset, offset = end);\n\t    if (token === \"\\\"\" || token === \"'\") stringDelim = token;\n\t    return token;\n\t  }\n\t  /**\r\n\t   * Pushes a token back to the stack.\r\n\t   * @param {string} token Token\r\n\t   * @returns {undefined}\r\n\t   * @inner\r\n\t   */\n\t\n\t\n\t  function push(token) {\n\t    stack.push(token);\n\t  }\n\t  /**\r\n\t   * Peeks for the next token.\r\n\t   * @returns {string|null} Token or `null` on eof\r\n\t   * @inner\r\n\t   */\n\t\n\t\n\t  function peek() {\n\t    if (!stack.length) {\n\t      var token = next();\n\t      if (token === null) return null;\n\t      push(token);\n\t    }\n\t\n\t    return stack[0];\n\t  }\n\t  /**\r\n\t   * Skips a token.\r\n\t   * @param {string} expected Expected token\r\n\t   * @param {boolean} [optional=false] Whether the token is optional\r\n\t   * @returns {boolean} `true` when skipped, `false` if not\r\n\t   * @throws {Error} When a required token is not present\r\n\t   * @inner\r\n\t   */\n\t\n\t\n\t  function skip(expected, optional) {\n\t    var actual = peek(),\n\t        equals = actual === expected;\n\t\n\t    if (equals) {\n\t      next();\n\t      return true;\n\t    }\n\t\n\t    if (!optional) throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n\t    return false;\n\t  }\n\t  /**\r\n\t   * Gets a comment.\r\n\t   * @param {number} [trailingLine] Line number if looking for a trailing comment\r\n\t   * @returns {string|null} Comment text\r\n\t   * @inner\r\n\t   */\n\t\n\t\n\t  function cmnt(trailingLine) {\n\t    var ret = null;\n\t\n\t    if (trailingLine === undefined) {\n\t      if (commentLine === line - 1 && (alternateCommentMode || commentType === \"*\" || commentLineEmpty)) {\n\t        ret = commentText;\n\t      }\n\t    } else {\n\t      /* istanbul ignore else */\n\t      if (commentLine < trailingLine) {\n\t        peek();\n\t      }\n\t\n\t      if (commentLine === trailingLine && !commentLineEmpty && (alternateCommentMode || commentType === \"/\")) {\n\t        ret = commentText;\n\t      }\n\t    }\n\t\n\t    return ret;\n\t  }\n\t\n\t  return Object.defineProperty({\n\t    next: next,\n\t    peek: peek,\n\t    push: push,\n\t    skip: skip,\n\t    cmnt: cmnt\n\t  }, \"line\", {\n\t    get: function get() {\n\t      return line;\n\t    }\n\t  });\n\t  /* eslint-enable callback-return */\n\t}\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = parse;\n\tparse.filename = null;\n\tparse.defaults = {\n\t  keepCase: false\n\t};\n\t\n\tvar tokenize = __webpack_require__(69),\n\t    Root = __webpack_require__(68),\n\t    Type = __webpack_require__(55),\n\t    Field = __webpack_require__(57),\n\t    MapField = __webpack_require__(60),\n\t    OneOf = __webpack_require__(59),\n\t    Enum = __webpack_require__(49),\n\t    Service = __webpack_require__(61),\n\t    Method = __webpack_require__(62),\n\t    types = __webpack_require__(58),\n\t    util = __webpack_require__(51);\n\t\n\tvar base10Re = /^[1-9][0-9]*$/,\n\t    base10NegRe = /^-?[1-9][0-9]*$/,\n\t    base16Re = /^0[x][0-9a-fA-F]+$/,\n\t    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n\t    base8Re = /^0[0-7]+$/,\n\t    base8NegRe = /^-?0[0-7]+$/,\n\t    numberRe = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n\t    nameRe = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n\t    typeRefRe = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n\t    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\t/**\r\n\t * Result object returned from {@link parse}.\r\n\t * @interface IParserResult\r\n\t * @property {string|undefined} package Package name, if declared\r\n\t * @property {string[]|undefined} imports Imports, if any\r\n\t * @property {string[]|undefined} weakImports Weak imports, if any\r\n\t * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\r\n\t * @property {Root} root Populated root instance\r\n\t */\n\t\n\t/**\r\n\t * Options modifying the behavior of {@link parse}.\r\n\t * @interface IParseOptions\r\n\t * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\r\n\t * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\r\n\t */\n\t\n\t/**\r\n\t * Options modifying the behavior of JSON serialization.\r\n\t * @interface IToJSONOptions\r\n\t * @property {boolean} [keepComments=false] Serializes comments.\r\n\t */\n\t\n\t/**\r\n\t * Parses the given .proto source and returns an object with the parsed contents.\r\n\t * @param {string} source Source contents\r\n\t * @param {Root} root Root to populate\r\n\t * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n\t * @returns {IParserResult} Parser result\r\n\t * @property {string} filename=null Currently processing file name for error reporting, if known\r\n\t * @property {IParseOptions} defaults Default {@link IParseOptions}\r\n\t */\n\t\n\tfunction parse(source, root, options) {\n\t  /* eslint-disable callback-return */\n\t  if (!(root instanceof Root)) {\n\t    options = root;\n\t    root = new Root();\n\t  }\n\t\n\t  if (!options) options = parse.defaults;\n\t  var tn = tokenize(source, options.alternateCommentMode || false),\n\t      next = tn.next,\n\t      push = tn.push,\n\t      peek = tn.peek,\n\t      skip = tn.skip,\n\t      cmnt = tn.cmnt;\n\t  var head = true,\n\t      pkg,\n\t      imports,\n\t      weakImports,\n\t      syntax,\n\t      isProto3 = false;\n\t  var ptr = root;\n\t  var applyCase = options.keepCase ? function (name) {\n\t    return name;\n\t  } : util.camelCase;\n\t  /* istanbul ignore next */\n\t\n\t  function illegal(token, name, insideTryCatch) {\n\t    var filename = parse.filename;\n\t    if (!insideTryCatch) parse.filename = null;\n\t    return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n\t  }\n\t\n\t  function readString() {\n\t    var values = [],\n\t        token;\n\t\n\t    do {\n\t      /* istanbul ignore if */\n\t      if ((token = next()) !== \"\\\"\" && token !== \"'\") throw illegal(token);\n\t      values.push(next());\n\t      skip(token);\n\t      token = peek();\n\t    } while (token === \"\\\"\" || token === \"'\");\n\t\n\t    return values.join(\"\");\n\t  }\n\t\n\t  function readValue(acceptTypeRef) {\n\t    var token = next();\n\t\n\t    switch (token) {\n\t      case \"'\":\n\t      case \"\\\"\":\n\t        push(token);\n\t        return readString();\n\t\n\t      case \"true\":\n\t      case \"TRUE\":\n\t        return true;\n\t\n\t      case \"false\":\n\t      case \"FALSE\":\n\t        return false;\n\t    }\n\t\n\t    try {\n\t      return parseNumber(token,\n\t      /* insideTryCatch */\n\t      true);\n\t    } catch (e) {\n\t      /* istanbul ignore else */\n\t      if (acceptTypeRef && typeRefRe.test(token)) return token;\n\t      /* istanbul ignore next */\n\t\n\t      throw illegal(token, \"value\");\n\t    }\n\t  }\n\t\n\t  function readRanges(target, acceptStrings) {\n\t    var token, start;\n\t\n\t    do {\n\t      if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\")) target.push(readString());else target.push([start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start]);\n\t    } while (skip(\",\", true));\n\t\n\t    skip(\";\");\n\t  }\n\t\n\t  function parseNumber(token, insideTryCatch) {\n\t    var sign = 1;\n\t\n\t    if (token.charAt(0) === \"-\") {\n\t      sign = -1;\n\t      token = token.substring(1);\n\t    }\n\t\n\t    switch (token) {\n\t      case \"inf\":\n\t      case \"INF\":\n\t      case \"Inf\":\n\t        return sign * Infinity;\n\t\n\t      case \"nan\":\n\t      case \"NAN\":\n\t      case \"Nan\":\n\t      case \"NaN\":\n\t        return NaN;\n\t\n\t      case \"0\":\n\t        return 0;\n\t    }\n\t\n\t    if (base10Re.test(token)) return sign * parseInt(token, 10);\n\t    if (base16Re.test(token)) return sign * parseInt(token, 16);\n\t    if (base8Re.test(token)) return sign * parseInt(token, 8);\n\t    /* istanbul ignore else */\n\t\n\t    if (numberRe.test(token)) return sign * parseFloat(token);\n\t    /* istanbul ignore next */\n\t\n\t    throw illegal(token, \"number\", insideTryCatch);\n\t  }\n\t\n\t  function parseId(token, acceptNegative) {\n\t    switch (token) {\n\t      case \"max\":\n\t      case \"MAX\":\n\t      case \"Max\":\n\t        return 536870911;\n\t\n\t      case \"0\":\n\t        return 0;\n\t    }\n\t    /* istanbul ignore if */\n\t\n\t\n\t    if (!acceptNegative && token.charAt(0) === \"-\") throw illegal(token, \"id\");\n\t    if (base10NegRe.test(token)) return parseInt(token, 10);\n\t    if (base16NegRe.test(token)) return parseInt(token, 16);\n\t    /* istanbul ignore else */\n\t\n\t    if (base8NegRe.test(token)) return parseInt(token, 8);\n\t    /* istanbul ignore next */\n\t\n\t    throw illegal(token, \"id\");\n\t  }\n\t\n\t  function parsePackage() {\n\t    /* istanbul ignore if */\n\t    if (pkg !== undefined) throw illegal(\"package\");\n\t    pkg = next();\n\t    /* istanbul ignore if */\n\t\n\t    if (!typeRefRe.test(pkg)) throw illegal(pkg, \"name\");\n\t    ptr = ptr.define(pkg);\n\t    skip(\";\");\n\t  }\n\t\n\t  function parseImport() {\n\t    var token = peek();\n\t    var whichImports;\n\t\n\t    switch (token) {\n\t      case \"weak\":\n\t        whichImports = weakImports || (weakImports = []);\n\t        next();\n\t        break;\n\t\n\t      case \"public\":\n\t        next();\n\t      // eslint-disable-line no-fallthrough\n\t\n\t      default:\n\t        whichImports = imports || (imports = []);\n\t        break;\n\t    }\n\t\n\t    token = readString();\n\t    skip(\";\");\n\t    whichImports.push(token);\n\t  }\n\t\n\t  function parseSyntax() {\n\t    skip(\"=\");\n\t    syntax = readString();\n\t    isProto3 = syntax === \"proto3\";\n\t    /* istanbul ignore if */\n\t\n\t    if (!isProto3 && syntax !== \"proto2\") throw illegal(syntax, \"syntax\");\n\t    skip(\";\");\n\t  }\n\t\n\t  function parseCommon(parent, token) {\n\t    switch (token) {\n\t      case \"option\":\n\t        parseOption(parent, token);\n\t        skip(\";\");\n\t        return true;\n\t\n\t      case \"message\":\n\t        parseType(parent, token);\n\t        return true;\n\t\n\t      case \"enum\":\n\t        parseEnum(parent, token);\n\t        return true;\n\t\n\t      case \"service\":\n\t        parseService(parent, token);\n\t        return true;\n\t\n\t      case \"extend\":\n\t        parseExtension(parent, token);\n\t        return true;\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  function ifBlock(obj, fnIf, fnElse) {\n\t    var trailingLine = tn.line;\n\t\n\t    if (obj) {\n\t      obj.comment = cmnt(); // try block-type comment\n\t\n\t      obj.filename = parse.filename;\n\t    }\n\t\n\t    if (skip(\"{\", true)) {\n\t      var token;\n\t\n\t      while ((token = next()) !== \"}\") {\n\t        fnIf(token);\n\t      }\n\t\n\t      skip(\";\", true);\n\t    } else {\n\t      if (fnElse) fnElse();\n\t      skip(\";\");\n\t      if (obj && typeof obj.comment !== \"string\") obj.comment = cmnt(trailingLine); // try line-type comment if no block\n\t    }\n\t  }\n\t\n\t  function parseType(parent, token) {\n\t    /* istanbul ignore if */\n\t    if (!nameRe.test(token = next())) throw illegal(token, \"type name\");\n\t    var type = new Type(token);\n\t    ifBlock(type, function parseType_block(token) {\n\t      if (parseCommon(type, token)) return;\n\t\n\t      switch (token) {\n\t        case \"map\":\n\t          parseMapField(type, token);\n\t          break;\n\t\n\t        case \"required\":\n\t        case \"optional\":\n\t        case \"repeated\":\n\t          parseField(type, token);\n\t          break;\n\t\n\t        case \"oneof\":\n\t          parseOneOf(type, token);\n\t          break;\n\t\n\t        case \"extensions\":\n\t          readRanges(type.extensions || (type.extensions = []));\n\t          break;\n\t\n\t        case \"reserved\":\n\t          readRanges(type.reserved || (type.reserved = []), true);\n\t          break;\n\t\n\t        default:\n\t          /* istanbul ignore if */\n\t          if (!isProto3 || !typeRefRe.test(token)) throw illegal(token);\n\t          push(token);\n\t          parseField(type, \"optional\");\n\t          break;\n\t      }\n\t    });\n\t    parent.add(type);\n\t  }\n\t\n\t  function parseField(parent, rule, extend) {\n\t    var type = next();\n\t\n\t    if (type === \"group\") {\n\t      parseGroup(parent, rule);\n\t      return;\n\t    }\n\t    /* istanbul ignore if */\n\t\n\t\n\t    if (!typeRefRe.test(type)) throw illegal(type, \"type\");\n\t    var name = next();\n\t    /* istanbul ignore if */\n\t\n\t    if (!nameRe.test(name)) throw illegal(name, \"name\");\n\t    name = applyCase(name);\n\t    skip(\"=\");\n\t    var field = new Field(name, parseId(next()), type, rule, extend);\n\t    ifBlock(field, function parseField_block(token) {\n\t      /* istanbul ignore else */\n\t      if (token === \"option\") {\n\t        parseOption(field, token);\n\t        skip(\";\");\n\t      } else throw illegal(token);\n\t    }, function parseField_line() {\n\t      parseInlineOptions(field);\n\t    });\n\t    parent.add(field); // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n\t    // parsing proto2 descriptors without the option, where applicable. This must be done for\n\t    // all known packable types and anything that could be an enum (= is not a basic type).\n\t\n\t    if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined)) field.setOption(\"packed\", false,\n\t    /* ifNotSet */\n\t    true);\n\t  }\n\t\n\t  function parseGroup(parent, rule) {\n\t    var name = next();\n\t    /* istanbul ignore if */\n\t\n\t    if (!nameRe.test(name)) throw illegal(name, \"name\");\n\t    var fieldName = util.lcFirst(name);\n\t    if (name === fieldName) name = util.ucFirst(name);\n\t    skip(\"=\");\n\t    var id = parseId(next());\n\t    var type = new Type(name);\n\t    type.group = true;\n\t    var field = new Field(fieldName, id, name, rule);\n\t    field.filename = parse.filename;\n\t    ifBlock(type, function parseGroup_block(token) {\n\t      switch (token) {\n\t        case \"option\":\n\t          parseOption(type, token);\n\t          skip(\";\");\n\t          break;\n\t\n\t        case \"required\":\n\t        case \"optional\":\n\t        case \"repeated\":\n\t          parseField(type, token);\n\t          break;\n\t\n\t        /* istanbul ignore next */\n\t\n\t        default:\n\t          throw illegal(token);\n\t        // there are no groups with proto3 semantics\n\t      }\n\t    });\n\t    parent.add(type).add(field);\n\t  }\n\t\n\t  function parseMapField(parent) {\n\t    skip(\"<\");\n\t    var keyType = next();\n\t    /* istanbul ignore if */\n\t\n\t    if (types.mapKey[keyType] === undefined) throw illegal(keyType, \"type\");\n\t    skip(\",\");\n\t    var valueType = next();\n\t    /* istanbul ignore if */\n\t\n\t    if (!typeRefRe.test(valueType)) throw illegal(valueType, \"type\");\n\t    skip(\">\");\n\t    var name = next();\n\t    /* istanbul ignore if */\n\t\n\t    if (!nameRe.test(name)) throw illegal(name, \"name\");\n\t    skip(\"=\");\n\t    var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n\t    ifBlock(field, function parseMapField_block(token) {\n\t      /* istanbul ignore else */\n\t      if (token === \"option\") {\n\t        parseOption(field, token);\n\t        skip(\";\");\n\t      } else throw illegal(token);\n\t    }, function parseMapField_line() {\n\t      parseInlineOptions(field);\n\t    });\n\t    parent.add(field);\n\t  }\n\t\n\t  function parseOneOf(parent, token) {\n\t    /* istanbul ignore if */\n\t    if (!nameRe.test(token = next())) throw illegal(token, \"name\");\n\t    var oneof = new OneOf(applyCase(token));\n\t    ifBlock(oneof, function parseOneOf_block(token) {\n\t      if (token === \"option\") {\n\t        parseOption(oneof, token);\n\t        skip(\";\");\n\t      } else {\n\t        push(token);\n\t        parseField(oneof, \"optional\");\n\t      }\n\t    });\n\t    parent.add(oneof);\n\t  }\n\t\n\t  function parseEnum(parent, token) {\n\t    /* istanbul ignore if */\n\t    if (!nameRe.test(token = next())) throw illegal(token, \"name\");\n\t    var enm = new Enum(token);\n\t    ifBlock(enm, function parseEnum_block(token) {\n\t      switch (token) {\n\t        case \"option\":\n\t          parseOption(enm, token);\n\t          skip(\";\");\n\t          break;\n\t\n\t        case \"reserved\":\n\t          readRanges(enm.reserved || (enm.reserved = []), true);\n\t          break;\n\t\n\t        default:\n\t          parseEnumValue(enm, token);\n\t      }\n\t    });\n\t    parent.add(enm);\n\t  }\n\t\n\t  function parseEnumValue(parent, token) {\n\t    /* istanbul ignore if */\n\t    if (!nameRe.test(token)) throw illegal(token, \"name\");\n\t    skip(\"=\");\n\t    var value = parseId(next(), true),\n\t        dummy = {};\n\t    ifBlock(dummy, function parseEnumValue_block(token) {\n\t      /* istanbul ignore else */\n\t      if (token === \"option\") {\n\t        parseOption(dummy, token); // skip\n\t\n\t        skip(\";\");\n\t      } else throw illegal(token);\n\t    }, function parseEnumValue_line() {\n\t      parseInlineOptions(dummy); // skip\n\t    });\n\t    parent.add(token, value, dummy.comment);\n\t  }\n\t\n\t  function parseOption(parent, token) {\n\t    var isCustom = skip(\"(\", true);\n\t    /* istanbul ignore if */\n\t\n\t    if (!typeRefRe.test(token = next())) throw illegal(token, \"name\");\n\t    var name = token;\n\t\n\t    if (isCustom) {\n\t      skip(\")\");\n\t      name = \"(\" + name + \")\";\n\t      token = peek();\n\t\n\t      if (fqTypeRefRe.test(token)) {\n\t        name += token;\n\t        next();\n\t      }\n\t    }\n\t\n\t    skip(\"=\");\n\t    parseOptionValue(parent, name);\n\t  }\n\t\n\t  function parseOptionValue(parent, name) {\n\t    if (skip(\"{\", true)) {\n\t      // { a: \"foo\" b { c: \"bar\" } }\n\t      do {\n\t        /* istanbul ignore if */\n\t        if (!nameRe.test(token = next())) throw illegal(token, \"name\");\n\t        if (peek() === \"{\") parseOptionValue(parent, name + \".\" + token);else {\n\t          skip(\":\");\n\t          if (peek() === \"{\") parseOptionValue(parent, name + \".\" + token);else setOption(parent, name + \".\" + token, readValue(true));\n\t        }\n\t        skip(\",\", true);\n\t      } while (!skip(\"}\", true));\n\t    } else setOption(parent, name, readValue(true)); // Does not enforce a delimiter to be universal\n\t\n\t  }\n\t\n\t  function setOption(parent, name, value) {\n\t    if (parent.setOption) parent.setOption(name, value);\n\t  }\n\t\n\t  function parseInlineOptions(parent) {\n\t    if (skip(\"[\", true)) {\n\t      do {\n\t        parseOption(parent, \"option\");\n\t      } while (skip(\",\", true));\n\t\n\t      skip(\"]\");\n\t    }\n\t\n\t    return parent;\n\t  }\n\t\n\t  function parseService(parent, token) {\n\t    /* istanbul ignore if */\n\t    if (!nameRe.test(token = next())) throw illegal(token, \"service name\");\n\t    var service = new Service(token);\n\t    ifBlock(service, function parseService_block(token) {\n\t      if (parseCommon(service, token)) return;\n\t      /* istanbul ignore else */\n\t\n\t      if (token === \"rpc\") parseMethod(service, token);else throw illegal(token);\n\t    });\n\t    parent.add(service);\n\t  }\n\t\n\t  function parseMethod(parent, token) {\n\t    var type = token;\n\t    /* istanbul ignore if */\n\t\n\t    if (!nameRe.test(token = next())) throw illegal(token, \"name\");\n\t    var name = token,\n\t        requestType,\n\t        requestStream,\n\t        responseType,\n\t        responseStream;\n\t    skip(\"(\");\n\t    if (skip(\"stream\", true)) requestStream = true;\n\t    /* istanbul ignore if */\n\t\n\t    if (!typeRefRe.test(token = next())) throw illegal(token);\n\t    requestType = token;\n\t    skip(\")\");\n\t    skip(\"returns\");\n\t    skip(\"(\");\n\t    if (skip(\"stream\", true)) responseStream = true;\n\t    /* istanbul ignore if */\n\t\n\t    if (!typeRefRe.test(token = next())) throw illegal(token);\n\t    responseType = token;\n\t    skip(\")\");\n\t    var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n\t    ifBlock(method, function parseMethod_block(token) {\n\t      /* istanbul ignore else */\n\t      if (token === \"option\") {\n\t        parseOption(method, token);\n\t        skip(\";\");\n\t      } else throw illegal(token);\n\t    });\n\t    parent.add(method);\n\t  }\n\t\n\t  function parseExtension(parent, token) {\n\t    /* istanbul ignore if */\n\t    if (!typeRefRe.test(token = next())) throw illegal(token, \"reference\");\n\t    var reference = token;\n\t    ifBlock(null, function parseExtension_block(token) {\n\t      switch (token) {\n\t        case \"required\":\n\t        case \"repeated\":\n\t        case \"optional\":\n\t          parseField(parent, token, reference);\n\t          break;\n\t\n\t        default:\n\t          /* istanbul ignore if */\n\t          if (!isProto3 || !typeRefRe.test(token)) throw illegal(token);\n\t          push(token);\n\t          parseField(parent, \"optional\", reference);\n\t          break;\n\t      }\n\t    });\n\t  }\n\t\n\t  var token;\n\t\n\t  while ((token = next()) !== null) {\n\t    switch (token) {\n\t      case \"package\":\n\t        /* istanbul ignore if */\n\t        if (!head) throw illegal(token);\n\t        parsePackage();\n\t        break;\n\t\n\t      case \"import\":\n\t        /* istanbul ignore if */\n\t        if (!head) throw illegal(token);\n\t        parseImport();\n\t        break;\n\t\n\t      case \"syntax\":\n\t        /* istanbul ignore if */\n\t        if (!head) throw illegal(token);\n\t        parseSyntax();\n\t        break;\n\t\n\t      case \"option\":\n\t        /* istanbul ignore if */\n\t        if (!head) throw illegal(token);\n\t        parseOption(ptr, token);\n\t        skip(\";\");\n\t        break;\n\t\n\t      default:\n\t        /* istanbul ignore else */\n\t        if (parseCommon(ptr, token)) {\n\t          head = false;\n\t          continue;\n\t        }\n\t        /* istanbul ignore next */\n\t\n\t\n\t        throw illegal(token);\n\t    }\n\t  }\n\t\n\t  parse.filename = null;\n\t  return {\n\t    \"package\": pkg,\n\t    \"imports\": imports,\n\t    weakImports: weakImports,\n\t    syntax: syntax,\n\t    root: root\n\t  };\n\t}\n\t/**\r\n\t * Parses the given .proto source and returns an object with the parsed contents.\r\n\t * @name parse\r\n\t * @function\r\n\t * @param {string} source Source contents\r\n\t * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n\t * @returns {IParserResult} Parser result\r\n\t * @property {string} filename=null Currently processing file name for error reporting, if known\r\n\t * @property {IParseOptions} defaults Default {@link IParseOptions}\r\n\t * @variation 2\r\n\t */\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = common;\n\tvar commonRe = /\\/|\\./;\n\t/**\r\n\t * Provides common type definitions.\r\n\t * Can also be used to provide additional google types or your own custom types.\r\n\t * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\r\n\t * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\r\n\t * @returns {undefined}\r\n\t * @property {INamespace} google/protobuf/any.proto Any\r\n\t * @property {INamespace} google/protobuf/duration.proto Duration\r\n\t * @property {INamespace} google/protobuf/empty.proto Empty\r\n\t * @property {INamespace} google/protobuf/field_mask.proto FieldMask\r\n\t * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\r\n\t * @property {INamespace} google/protobuf/timestamp.proto Timestamp\r\n\t * @property {INamespace} google/protobuf/wrappers.proto Wrappers\r\n\t * @example\r\n\t * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\r\n\t * protobuf.common(\"descriptor\", descriptorJson);\r\n\t *\r\n\t * // manually provides a custom definition (uses my.foo namespace)\r\n\t * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\r\n\t */\n\t\n\tfunction common(name, json) {\n\t  if (!commonRe.test(name)) {\n\t    name = \"google/protobuf/\" + name + \".proto\";\n\t    json = {\n\t      nested: {\n\t        google: {\n\t          nested: {\n\t            protobuf: {\n\t              nested: json\n\t            }\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  common[name] = json;\n\t} // Not provided because of limited use (feel free to discuss or to provide yourself):\n\t//\n\t// google/protobuf/descriptor.proto\n\t// google/protobuf/source_context.proto\n\t// google/protobuf/type.proto\n\t//\n\t// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n\t// the repository or package within the google/protobuf directory.\n\t\n\t\n\tcommon(\"any\", {\n\t  /**\r\n\t   * Properties of a google.protobuf.Any message.\r\n\t   * @interface IAny\r\n\t   * @type {Object}\r\n\t   * @property {string} [typeUrl]\r\n\t   * @property {Uint8Array} [bytes]\r\n\t   * @memberof common\r\n\t   */\n\t  Any: {\n\t    fields: {\n\t      type_url: {\n\t        type: \"string\",\n\t        id: 1\n\t      },\n\t      value: {\n\t        type: \"bytes\",\n\t        id: 2\n\t      }\n\t    }\n\t  }\n\t});\n\tvar timeType;\n\tcommon(\"duration\", {\n\t  /**\r\n\t   * Properties of a google.protobuf.Duration message.\r\n\t   * @interface IDuration\r\n\t   * @type {Object}\r\n\t   * @property {number|Long} [seconds]\r\n\t   * @property {number} [nanos]\r\n\t   * @memberof common\r\n\t   */\n\t  Duration: timeType = {\n\t    fields: {\n\t      seconds: {\n\t        type: \"int64\",\n\t        id: 1\n\t      },\n\t      nanos: {\n\t        type: \"int32\",\n\t        id: 2\n\t      }\n\t    }\n\t  }\n\t});\n\tcommon(\"timestamp\", {\n\t  /**\r\n\t   * Properties of a google.protobuf.Timestamp message.\r\n\t   * @interface ITimestamp\r\n\t   * @type {Object}\r\n\t   * @property {number|Long} [seconds]\r\n\t   * @property {number} [nanos]\r\n\t   * @memberof common\r\n\t   */\n\t  Timestamp: timeType\n\t});\n\tcommon(\"empty\", {\n\t  /**\r\n\t   * Properties of a google.protobuf.Empty message.\r\n\t   * @interface IEmpty\r\n\t   * @memberof common\r\n\t   */\n\t  Empty: {\n\t    fields: {}\n\t  }\n\t});\n\tcommon(\"struct\", {\n\t  /**\r\n\t   * Properties of a google.protobuf.Struct message.\r\n\t   * @interface IStruct\r\n\t   * @type {Object}\r\n\t   * @property {Object.<string,IValue>} [fields]\r\n\t   * @memberof common\r\n\t   */\n\t  Struct: {\n\t    fields: {\n\t      fields: {\n\t        keyType: \"string\",\n\t        type: \"Value\",\n\t        id: 1\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Properties of a google.protobuf.Value message.\r\n\t   * @interface IValue\r\n\t   * @type {Object}\r\n\t   * @property {string} [kind]\r\n\t   * @property {0} [nullValue]\r\n\t   * @property {number} [numberValue]\r\n\t   * @property {string} [stringValue]\r\n\t   * @property {boolean} [boolValue]\r\n\t   * @property {IStruct} [structValue]\r\n\t   * @property {IListValue} [listValue]\r\n\t   * @memberof common\r\n\t   */\n\t  Value: {\n\t    oneofs: {\n\t      kind: {\n\t        oneof: [\"nullValue\", \"numberValue\", \"stringValue\", \"boolValue\", \"structValue\", \"listValue\"]\n\t      }\n\t    },\n\t    fields: {\n\t      nullValue: {\n\t        type: \"NullValue\",\n\t        id: 1\n\t      },\n\t      numberValue: {\n\t        type: \"double\",\n\t        id: 2\n\t      },\n\t      stringValue: {\n\t        type: \"string\",\n\t        id: 3\n\t      },\n\t      boolValue: {\n\t        type: \"bool\",\n\t        id: 4\n\t      },\n\t      structValue: {\n\t        type: \"Struct\",\n\t        id: 5\n\t      },\n\t      listValue: {\n\t        type: \"ListValue\",\n\t        id: 6\n\t      }\n\t    }\n\t  },\n\t  NullValue: {\n\t    values: {\n\t      NULL_VALUE: 0\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Properties of a google.protobuf.ListValue message.\r\n\t   * @interface IListValue\r\n\t   * @type {Object}\r\n\t   * @property {Array.<IValue>} [values]\r\n\t   * @memberof common\r\n\t   */\n\t  ListValue: {\n\t    fields: {\n\t      values: {\n\t        rule: \"repeated\",\n\t        type: \"Value\",\n\t        id: 1\n\t      }\n\t    }\n\t  }\n\t});\n\tcommon(\"wrappers\", {\n\t  /**\r\n\t   * Properties of a google.protobuf.DoubleValue message.\r\n\t   * @interface IDoubleValue\r\n\t   * @type {Object}\r\n\t   * @property {number} [value]\r\n\t   * @memberof common\r\n\t   */\n\t  DoubleValue: {\n\t    fields: {\n\t      value: {\n\t        type: \"double\",\n\t        id: 1\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Properties of a google.protobuf.FloatValue message.\r\n\t   * @interface IFloatValue\r\n\t   * @type {Object}\r\n\t   * @property {number} [value]\r\n\t   * @memberof common\r\n\t   */\n\t  FloatValue: {\n\t    fields: {\n\t      value: {\n\t        type: \"float\",\n\t        id: 1\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Properties of a google.protobuf.Int64Value message.\r\n\t   * @interface IInt64Value\r\n\t   * @type {Object}\r\n\t   * @property {number|Long} [value]\r\n\t   * @memberof common\r\n\t   */\n\t  Int64Value: {\n\t    fields: {\n\t      value: {\n\t        type: \"int64\",\n\t        id: 1\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Properties of a google.protobuf.UInt64Value message.\r\n\t   * @interface IUInt64Value\r\n\t   * @type {Object}\r\n\t   * @property {number|Long} [value]\r\n\t   * @memberof common\r\n\t   */\n\t  UInt64Value: {\n\t    fields: {\n\t      value: {\n\t        type: \"uint64\",\n\t        id: 1\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Properties of a google.protobuf.Int32Value message.\r\n\t   * @interface IInt32Value\r\n\t   * @type {Object}\r\n\t   * @property {number} [value]\r\n\t   * @memberof common\r\n\t   */\n\t  Int32Value: {\n\t    fields: {\n\t      value: {\n\t        type: \"int32\",\n\t        id: 1\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Properties of a google.protobuf.UInt32Value message.\r\n\t   * @interface IUInt32Value\r\n\t   * @type {Object}\r\n\t   * @property {number} [value]\r\n\t   * @memberof common\r\n\t   */\n\t  UInt32Value: {\n\t    fields: {\n\t      value: {\n\t        type: \"uint32\",\n\t        id: 1\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Properties of a google.protobuf.BoolValue message.\r\n\t   * @interface IBoolValue\r\n\t   * @type {Object}\r\n\t   * @property {boolean} [value]\r\n\t   * @memberof common\r\n\t   */\n\t  BoolValue: {\n\t    fields: {\n\t      value: {\n\t        type: \"bool\",\n\t        id: 1\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Properties of a google.protobuf.StringValue message.\r\n\t   * @interface IStringValue\r\n\t   * @type {Object}\r\n\t   * @property {string} [value]\r\n\t   * @memberof common\r\n\t   */\n\t  StringValue: {\n\t    fields: {\n\t      value: {\n\t        type: \"string\",\n\t        id: 1\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Properties of a google.protobuf.BytesValue message.\r\n\t   * @interface IBytesValue\r\n\t   * @type {Object}\r\n\t   * @property {Uint8Array} [value]\r\n\t   * @memberof common\r\n\t   */\n\t  BytesValue: {\n\t    fields: {\n\t      value: {\n\t        type: \"bytes\",\n\t        id: 1\n\t      }\n\t    }\n\t  }\n\t});\n\tcommon(\"field_mask\", {\n\t  /**\r\n\t   * Properties of a google.protobuf.FieldMask message.\r\n\t   * @interface IDoubleValue\r\n\t   * @type {Object}\r\n\t   * @property {number} [value]\r\n\t   * @memberof common\r\n\t   */\n\t  FieldMask: {\n\t    fields: {\n\t      paths: {\n\t        rule: \"repeated\",\n\t        type: \"string\",\n\t        id: 1\n\t      }\n\t    }\n\t  }\n\t});\n\t/**\r\n\t * Gets the root definition of the specified common proto file.\r\n\t *\r\n\t * Bundled definitions are:\r\n\t * - google/protobuf/any.proto\r\n\t * - google/protobuf/duration.proto\r\n\t * - google/protobuf/empty.proto\r\n\t * - google/protobuf/field_mask.proto\r\n\t * - google/protobuf/struct.proto\r\n\t * - google/protobuf/timestamp.proto\r\n\t * - google/protobuf/wrappers.proto\r\n\t *\r\n\t * @param {string} file Proto file name\r\n\t * @returns {INamespace|null} Root definition or `null` if not defined\r\n\t */\n\t\n\tcommon.get = function get(file) {\n\t  return common[file] || null;\n\t};\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// axios.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 89bee1a5dbefd9f783d6","module.exports = require('./lib/gaxios');\n\n\n// WEBPACK FOOTER //\n// ./index.js","/**\n * Google protocol buffer extension for axios\n *\n */\n\n// Dependecies\nconst axios = require('./axios');\nconst gbuffer = require('./helpers/gbuffer');\n\n/**\n * Method that create request to the url with payload plain json,\n * that converted to Google protocol buffer, and returned Google protocol buffer to the plain json\n *\n * @param {string} url url address\n * @param {string} method method for request\n * @param {string} protoFile .proto file which describes format of buffer\n * @param {string} message Google protocol buffer message from .proto file\n * @param {object} options options like headers and etc\n * @returns {Promise} result of axios.get and decoding Google protocol buffer buffer to plain json\n */\naxios.requestGbuf = (url, method, payload, protoFile, message, options = {}) => new Promise((resolve, reject) => {\n  // Check params\n  url = typeof (url) === 'string' && url.trim().length > 0 ? url : false;\n  method = typeof (method) === 'string'\n    && method.trim().length > 0\n    && ['delete', 'get', 'post', 'put', 'patch'].indexOf(method > -1)\n    ? method : false;\n  protoFile = typeof (protoFile) === 'string' && protoFile.trim().length > 0 ? protoFile : false;\n  message = typeof (message) === 'string' && message.trim().length > 0 ? message : false;\n  // Common options to request\n  options.method = method;\n  options.url = url;\n  options.responseType = 'arraybuffer';\n  //console.log(url, method, protoFile, message);\n  if (url && method && protoFile && message) {\n    // Handler for method with no payload\n    if (['delete', 'get', 'head', 'options'].indexOf(method) > -1) {\n      axios(options)\n        // Check response object\n        .then(response => new Uint8Array(response.data, 0, response.data.length))\n        .then((data) => {\n          resolve(gbuffer.decode(data, protoFile, message));\n        })\n        // Error handler\n        .catch((err) => {\n          reject(err);\n        });\n    } else {\n      // Handler for method (post, put, patch) with payload\n      gbuffer.encode(payload, protoFile, message)\n        // Send built-in axios requst\n        .then((data) => {\n          // Options to send data\n          data = (typeof window === 'undefined') ? data : data.buffer.slice(0, data.length);\n          options.data = data;\n          options.headers = { 'Content-Type': 'application/octet-stream' };\n          return axios(options);\n        })\n        // Check response object\n        .then(response => new Uint8Array(response.data, 0, response.data.length))\n        .then((data) => {\n          // Return decoded from Gbuf to plain json\n          resolve(gbuffer.decode(data, protoFile, message));\n        })\n        // Error handler\n        .catch((err) => {\n          reject(err);\n        });\n    }\n  } else {\n    // Reject if one of the params is invalid\n    reject(new Error('Function params are invalid'));\n  }\n});\n\n\n/**\n * Add methods that 'delete', 'get'\n * from ulr Google protocol buffer buffer and convert it to the plain json\n *\n * @param {*} url url address\n * @param {*} protoFile .proto file which describes format of buffer\n * @param {*} message Google protocol buffer message from .proto file\n * @param {object} options options like headers and etc\n * @returns {Promise} result of axios.get and decoding Google protocol buffer buffer to plain json\n */\naxios.getGbuf = (url, protoFile, message, options = {}) => axios.requestGbuf(url, 'get', {}, protoFile, message, options);\naxios.deleteGbuf = (url, protoFile, message, options = {}) => axios.requestGbuf(url, 'delete', {}, protoFile, message, options);\n\n/**\n * Add methods that 'post', 'put', 'patch' Google protocol buffer to ulr\n * and convert returned Google protocol buffer to the plain json\n *\n * @param {*} url url address\n * @param {*} protoFile .proto file which describes format of buffer\n * @param {*} message Google protocol buffer message from .proto file\n * @param {object} options options like headers and etc\n * @returns {Promise} result of axios.get and decoding Google protocol buffer to plain json\n */\naxios.postGbuf = (url, payload, protoFile, message, options = {}) => axios.requestGbuf(url, 'post', payload, protoFile, message, options);\naxios.putGbuf = (url, payload, protoFile, message, options = {}) => axios.requestGbuf(url, 'put', payload, protoFile, message, options);\naxios.patchGbuf = (url, payload, protoFile, message, options = {}) => axios.requestGbuf(url, 'patch', payload, protoFile, message, options);\n\n// Export the module\nmodule.exports = axios;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/gaxios.js","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/axios.js","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils.js","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/bind.js","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/is-buffer/index.js","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n  config.method = config.method ? config.method.toLowerCase() : 'get';\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/core/Axios.js","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/buildURL.js","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/core/InterceptorManager.js","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/core/dispatchRequest.js","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/core/transformData.js","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cancel/isCancel.js","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  // Only Node.JS has a process variable that is of [[Class]] process\n  if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  } else if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/defaults.js","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/normalizeHeaderName.js","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/adapters/xhr.js","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/core/settle.js","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/core/createError.js","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/core/enhanceError.js","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/parseHeaders.js","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/isURLSameOrigin.js","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/cookies.js","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/isAbsoluteURL.js","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/combineURLs.js","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  utils.forEach(['url', 'method', 'params', 'data'], function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(['headers', 'auth', 'proxy'], function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach([\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength',\n    'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken',\n    'socketPath'\n  ], function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/core/mergeConfig.js","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cancel/Cancel.js","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cancel/CancelToken.js","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/spread.js","/**\n * Helpers for encode/decode plain json to/from grpc buffer\n *\n */\n\n// Dependencies\nconst protobuf = require('protobufjs');\n\n// Container\nconst gbuffer = {};\n/**\n * Encode plain object to grpc buffer\n *\n * @param {String} payload json string to convert to grpc format\n * @param {String} protoFile protoFile.proto contains file in proto3 syntax\n * @param {String} message message that is described int proto file\n * @returns Promise\n *\n */\ngbuffer.encode = (payload, protoFile, message) => new Promise((resolve, reject) => {\n  // Check the protoFile\n  if (protoFile || protoFile.length === 0) {\n    // Load protoFile\n    protobuf.load(protoFile, (err, root) => {\n      if (err) {\n        reject(new Error(err));\n      }\n      // Obtain a message type\n      const ProtoMessage = root.lookupType(message);\n      // Verify the payload\n      const errMsg = ProtoMessage.verify(payload);\n      if (errMsg) {\n        reject(new Error(errMsg));\n      }\n      // Encode a message\n      const buffer = ProtoMessage.encode(ProtoMessage.create(payload)).finish();\n      resolve(buffer);\n    });\n  } else {\n    // Return error\n    reject(new Error('There is not any protoFile'));\n  }\n});\n\n/**\n * Decode the grpc buffer to plain object\n *\n * @param {String} payload json string to convert to grpc format\n * @param {String} protoFile protoFile.proto contains file in proto3 syntax\n * @param {String} message message that is described int proto file\n * @returns Promise\n *\n */\ngbuffer.decode = (payload, protoFile, message) => new Promise((resolve, reject) => {\n  // Check the protoFile\n  if (protoFile || protoFile.length === 0) {\n    // Load protoFile\n    protobuf.load(protoFile, (err, root) => {\n      if (err) {\n        reject(new Error(err));\n      }\n      // Obtain a message type\n      const ProtoMessage = root.lookupType(message);\n      // Decode a message\n      const buffer = ProtoMessage.decode(payload);\n      // Convert buffer to plain object\n      const object = ProtoMessage.toObject(buffer, {\n        enums: String,  // enums as string names\n        longs: String,  // longs as strings (requires long.js)\n        bytes: String,  // bytes as base64 encoded strings\n        defaults: true, // includes default values\n        arrays: true,   // populates empty arrays (repeated fields) even if defaults=false\n        objects: true,  // populates empty objects (map fields) even if defaults=false\n        oneofs: true    // includes virtual oneof fields set to the present field's name\n      });\n      resolve(object);\n    });\n  } else {\n    // Return error\n    reject(new Error('There is not any protoFile'));\n  }\n});\n\n\n// Export the module\nmodule.exports = gbuffer;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/gbuffer.js","// full library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index\");\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/index.js","\"use strict\";\r\nvar protobuf = module.exports = require(\"./index-light\");\r\n\r\nprotobuf.build = \"full\";\r\n\r\n// Parser\r\nprotobuf.tokenize         = require(\"./tokenize\");\r\nprotobuf.parse            = require(\"./parse\");\r\nprotobuf.common           = require(\"./common\");\r\n\r\n// Configure parser\r\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/index.js","\"use strict\";\r\nvar protobuf = module.exports = require(\"./index-minimal\");\r\n\r\nprotobuf.build = \"light\";\r\n\r\n/**\r\n * A node-style callback as used by {@link load} and {@link Root#load}.\r\n * @typedef LoadCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Root} [root] Root, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n */\r\nfunction load(filename, root, callback) {\r\n    if (typeof root === \"function\") {\r\n        callback = root;\r\n        root = new protobuf.Root();\r\n    } else if (!root)\r\n        root = new protobuf.Root();\r\n    return root.load(filename, callback);\r\n}\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @see {@link Root#load}\r\n * @variation 3\r\n */\r\n// function load(filename:string, [root:Root]):Promise<Root>\r\n\r\nprotobuf.load = load;\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n * @see {@link Root#loadSync}\r\n */\r\nfunction loadSync(filename, root) {\r\n    if (!root)\r\n        root = new protobuf.Root();\r\n    return root.loadSync(filename);\r\n}\r\n\r\nprotobuf.loadSync = loadSync;\r\n\r\n// Serialization\r\nprotobuf.encoder          = require(\"./encoder\");\r\nprotobuf.decoder          = require(\"./decoder\");\r\nprotobuf.verifier         = require(\"./verifier\");\r\nprotobuf.converter        = require(\"./converter\");\r\n\r\n// Reflection\r\nprotobuf.ReflectionObject = require(\"./object\");\r\nprotobuf.Namespace        = require(\"./namespace\");\r\nprotobuf.Root             = require(\"./root\");\r\nprotobuf.Enum             = require(\"./enum\");\r\nprotobuf.Type             = require(\"./type\");\r\nprotobuf.Field            = require(\"./field\");\r\nprotobuf.OneOf            = require(\"./oneof\");\r\nprotobuf.MapField         = require(\"./mapfield\");\r\nprotobuf.Service          = require(\"./service\");\r\nprotobuf.Method           = require(\"./method\");\r\n\r\n// Runtime\r\nprotobuf.Message          = require(\"./message\");\r\nprotobuf.wrappers         = require(\"./wrappers\");\r\n\r\n// Utility\r\nprotobuf.types            = require(\"./types\");\r\nprotobuf.util             = require(\"./util\");\r\n\r\n// Set up possibly cyclic reflection dependencies\r\nprotobuf.ReflectionObject._configure(protobuf.Root);\r\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\r\nprotobuf.Root._configure(protobuf.Type);\r\nprotobuf.Field._configure(protobuf.Type);\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/index-light.js","\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Set up buffer utility according to the environment\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/index-minimal.js","\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/writer.js","\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n// global object reference\r\nutil.global = typeof window !== \"undefined\" && window\r\n           || typeof global !== \"undefined\" && global\r\n           || typeof self   !== \"undefined\" && self\r\n           || this; // eslint-disable-line no-invalid-this\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\r\n         || /* istanbul ignore next */ util.global.Long\r\n         || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\n// Sets up buffer utility according to the environment (called in index-minimal)\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/util/minimal.js","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/@protobufjs/aspromise/index.js","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/@protobufjs/base64/index.js","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/@protobufjs/eventemitter/index.js","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/@protobufjs/float/index.js","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/@protobufjs/inquire/index.js","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/@protobufjs/utf8/index.js","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/@protobufjs/pool/index.js","\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/util/longbits.js","\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/writer_buffer.js","\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            while ((wireType = this.uint32() & 7) !== 4) {\r\n                this.skipType(wireType);\r\n            }\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/reader.js","\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/reader_buffer.js","\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/rpc.js","\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/rpc/service.js","\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/roots.js","\"use strict\";\r\nmodule.exports = encoder;\r\n\r\nvar Enum     = require(\"./enum\"),\r\n    types    = require(\"./types\"),\r\n    util     = require(\"./util\");\r\n\r\n/**\r\n * Generates a partial message type encoder.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genTypePartial(gen, field, fieldIndex, ref) {\r\n    return field.resolvedType.group\r\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\r\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\r\n}\r\n\r\n/**\r\n * Generates an encoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction encoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\r\n    (\"if(!w)\")\r\n        (\"w=Writer.create()\");\r\n\r\n    var i, ref;\r\n\r\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\r\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field    = fields[i].resolve(),\r\n            index    = mtype._fieldsArray.indexOf(field),\r\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            wireType = types.basic[type];\r\n            ref      = \"m\" + util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) {\r\n            gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name) // !== undefined && !== null\r\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\r\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\r\n            if (wireType === undefined) gen\r\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\r\n            else gen\r\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\r\n            gen\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n            // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\r\n\r\n            // Packed repeated\r\n            if (field.packed && types.packed[type] !== undefined) { gen\r\n\r\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\r\n        (\"for(var i=0;i<%s.length;++i)\", ref)\r\n            (\"w.%s(%s[i])\", type, ref)\r\n        (\"w.ldelim()\");\r\n\r\n            // Non-packed\r\n            } else { gen\r\n\r\n        (\"for(var i=0;i<%s.length;++i)\", ref);\r\n                if (wireType === undefined)\r\n            genTypePartial(gen, field, index, ref + \"[i]\");\r\n                else gen\r\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n            } gen\r\n    (\"}\");\r\n\r\n        // Non-repeated\r\n        } else {\r\n            if (field.optional) gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j))\", ref, field.name); // !== undefined && !== null\r\n\r\n            if (wireType === undefined)\r\n        genTypePartial(gen, field, index, ref);\r\n            else gen\r\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n        }\r\n    }\r\n\r\n    return gen\r\n    (\"return w\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/encoder.js","\"use strict\";\r\nmodule.exports = Enum;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\r\n\r\nvar Namespace = require(\"./namespace\"),\r\n    util = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new enum instance.\r\n * @classdesc Reflected enum.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {Object.<string,number>} [values] Enum values as an object, by name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this enum\r\n * @param {Object.<string,string>} [comments] The value comments for this enum\r\n */\r\nfunction Enum(name, values, options, comment, comments) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (values && typeof values !== \"object\")\r\n        throw TypeError(\"values must be an object\");\r\n\r\n    /**\r\n     * Enum values by id.\r\n     * @type {Object.<number,string>}\r\n     */\r\n    this.valuesById = {};\r\n\r\n    /**\r\n     * Enum values by name.\r\n     * @type {Object.<string,number>}\r\n     */\r\n    this.values = Object.create(this.valuesById); // toJSON, marker\r\n\r\n    /**\r\n     * Enum comment text.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n\r\n    /**\r\n     * Value comment texts, if any.\r\n     * @type {Object.<string,string>}\r\n     */\r\n    this.comments = comments || {};\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\r\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\r\n    // static and reflection code alike instead of emitting generic object definitions.\r\n\r\n    if (values)\r\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\r\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\r\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\r\n}\r\n\r\n/**\r\n * Enum descriptor.\r\n * @interface IEnum\r\n * @property {Object.<string,number>} values Enum values\r\n * @property {Object.<string,*>} [options] Enum options\r\n */\r\n\r\n/**\r\n * Constructs an enum from an enum descriptor.\r\n * @param {string} name Enum name\r\n * @param {IEnum} json Enum descriptor\r\n * @returns {Enum} Created enum\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nEnum.fromJSON = function fromJSON(name, json) {\r\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\r\n    enm.reserved = json.reserved;\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Converts this enum to an enum descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IEnum} Enum descriptor\r\n */\r\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"  , this.options,\r\n        \"values\"   , this.values,\r\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"comment\"  , keepComments ? this.comment : undefined,\r\n        \"comments\" , keepComments ? this.comments : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds a value to this enum.\r\n * @param {string} name Value name\r\n * @param {number} id Value id\r\n * @param {string} [comment] Comment, if any\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a value with this name or id\r\n */\r\nEnum.prototype.add = function add(name, id, comment) {\r\n    // utilized by the parser but not by .fromJSON\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (!util.isInteger(id))\r\n        throw TypeError(\"id must be an integer\");\r\n\r\n    if (this.values[name] !== undefined)\r\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\r\n\r\n    if (this.isReservedId(id))\r\n        throw Error(\"id \" + id + \" is reserved in \" + this);\r\n\r\n    if (this.isReservedName(name))\r\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\r\n\r\n    if (this.valuesById[id] !== undefined) {\r\n        if (!(this.options && this.options.allow_alias))\r\n            throw Error(\"duplicate id \" + id + \" in \" + this);\r\n        this.values[name] = id;\r\n    } else\r\n        this.valuesById[this.values[name] = id] = name;\r\n\r\n    this.comments[name] = comment || null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a value from this enum\r\n * @param {string} name Value name\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `name` is not a name of this enum\r\n */\r\nEnum.prototype.remove = function remove(name) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    var val = this.values[name];\r\n    if (val == null)\r\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\r\n\r\n    delete this.valuesById[val];\r\n    delete this.values[name];\r\n    delete this.comments[name];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/enum.js","\"use strict\";\r\nmodule.exports = ReflectionObject;\r\n\r\nReflectionObject.className = \"ReflectionObject\";\r\n\r\nvar util = require(\"./util\");\r\n\r\nvar Root; // cyclic\r\n\r\n/**\r\n * Constructs a new reflection object instance.\r\n * @classdesc Base class of all reflection objects.\r\n * @constructor\r\n * @param {string} name Object name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @abstract\r\n */\r\nfunction ReflectionObject(name, options) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (options && !util.isObject(options))\r\n        throw TypeError(\"options must be an object\");\r\n\r\n    /**\r\n     * Options.\r\n     * @type {Object.<string,*>|undefined}\r\n     */\r\n    this.options = options; // toJSON\r\n\r\n    /**\r\n     * Unique name within its namespace.\r\n     * @type {string}\r\n     */\r\n    this.name = name;\r\n\r\n    /**\r\n     * Parent namespace.\r\n     * @type {Namespace|null}\r\n     */\r\n    this.parent = null;\r\n\r\n    /**\r\n     * Whether already resolved or not.\r\n     * @type {boolean}\r\n     */\r\n    this.resolved = false;\r\n\r\n    /**\r\n     * Comment text, if any.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = null;\r\n\r\n    /**\r\n     * Defining file name.\r\n     * @type {string|null}\r\n     */\r\n    this.filename = null;\r\n}\r\n\r\nObject.defineProperties(ReflectionObject.prototype, {\r\n\r\n    /**\r\n     * Reference to the root namespace.\r\n     * @name ReflectionObject#root\r\n     * @type {Root}\r\n     * @readonly\r\n     */\r\n    root: {\r\n        get: function() {\r\n            var ptr = this;\r\n            while (ptr.parent !== null)\r\n                ptr = ptr.parent;\r\n            return ptr;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Full name including leading dot.\r\n     * @name ReflectionObject#fullName\r\n     * @type {string}\r\n     * @readonly\r\n     */\r\n    fullName: {\r\n        get: function() {\r\n            var path = [ this.name ],\r\n                ptr = this.parent;\r\n            while (ptr) {\r\n                path.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            }\r\n            return path.join(\".\");\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Converts this reflection object to its descriptor representation.\r\n * @returns {Object.<string,*>} Descriptor\r\n * @abstract\r\n */\r\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\r\n    throw Error(); // not implemented, shouldn't happen\r\n};\r\n\r\n/**\r\n * Called when this object is added to a parent.\r\n * @param {ReflectionObject} parent Parent added to\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onAdd = function onAdd(parent) {\r\n    if (this.parent && this.parent !== parent)\r\n        this.parent.remove(this);\r\n    this.parent = parent;\r\n    this.resolved = false;\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleAdd(this);\r\n};\r\n\r\n/**\r\n * Called when this object is removed from a parent.\r\n * @param {ReflectionObject} parent Parent removed from\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onRemove = function onRemove(parent) {\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleRemove(this);\r\n    this.parent = null;\r\n    this.resolved = false;\r\n};\r\n\r\n/**\r\n * Resolves this objects type references.\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n    if (this.root instanceof Root)\r\n        this.resolved = true; // only if part of a root\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets an option value.\r\n * @param {string} name Option name\r\n * @returns {*} Option value or `undefined` if not set\r\n */\r\nReflectionObject.prototype.getOption = function getOption(name) {\r\n    if (this.options)\r\n        return this.options[name];\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Sets an option.\r\n * @param {string} name Option name\r\n * @param {*} value Option value\r\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\r\n        (this.options || (this.options = {}))[name] = value;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets multiple options.\r\n * @param {Object.<string,*>} options Options to set\r\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\r\n    if (options)\r\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\r\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts this instance to its string representation.\r\n * @returns {string} Class name[, space, full name]\r\n */\r\nReflectionObject.prototype.toString = function toString() {\r\n    var className = this.constructor.className,\r\n        fullName  = this.fullName;\r\n    if (fullName.length)\r\n        return className + \" \" + fullName;\r\n    return className;\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nReflectionObject._configure = function(Root_) {\r\n    Root = Root_;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/object.js","\"use strict\";\r\n\r\n/**\r\n * Various utility functions.\r\n * @namespace\r\n */\r\nvar util = module.exports = require(\"./util/minimal\");\r\n\r\nvar roots = require(\"./roots\");\r\n\r\nvar Type, // cyclic\r\n    Enum;\r\n\r\nutil.codegen = require(\"@protobufjs/codegen\");\r\nutil.fetch   = require(\"@protobufjs/fetch\");\r\nutil.path    = require(\"@protobufjs/path\");\r\n\r\n/**\r\n * Node's fs module if available.\r\n * @type {Object.<string,*>}\r\n */\r\nutil.fs = util.inquire(\"fs\");\r\n\r\n/**\r\n * Converts an object's values to an array.\r\n * @param {Object.<string,*>} object Object to convert\r\n * @returns {Array.<*>} Converted array\r\n */\r\nutil.toArray = function toArray(object) {\r\n    if (object) {\r\n        var keys  = Object.keys(object),\r\n            array = new Array(keys.length),\r\n            index = 0;\r\n        while (index < keys.length)\r\n            array[index] = object[keys[index++]];\r\n        return array;\r\n    }\r\n    return [];\r\n};\r\n\r\n/**\r\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n * @param {Array.<*>} array Array to convert\r\n * @returns {Object.<string,*>} Converted object\r\n */\r\nutil.toObject = function toObject(array) {\r\n    var object = {},\r\n        index  = 0;\r\n    while (index < array.length) {\r\n        var key = array[index++],\r\n            val = array[index++];\r\n        if (val !== undefined)\r\n            object[key] = val;\r\n    }\r\n    return object;\r\n};\r\n\r\nvar safePropBackslashRe = /\\\\/g,\r\n    safePropQuoteRe     = /\"/g;\r\n\r\n/**\r\n * Tests whether the specified name is a reserved word in JS.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nutil.isReserved = function isReserved(name) {\r\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\r\n};\r\n\r\n/**\r\n * Returns a safe property accessor for the specified property name.\r\n * @param {string} prop Property name\r\n * @returns {string} Safe accessor\r\n */\r\nutil.safeProp = function safeProp(prop) {\r\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\r\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\r\n    return \".\" + prop;\r\n};\r\n\r\n/**\r\n * Converts the first character of a string to upper case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.ucFirst = function ucFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n};\r\n\r\nvar camelCaseRe = /_([a-z])/g;\r\n\r\n/**\r\n * Converts a string to camel case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.camelCase = function camelCase(str) {\r\n    return str.substring(0, 1)\r\n         + str.substring(1)\r\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\r\n};\r\n\r\n/**\r\n * Compares reflected fields by id.\r\n * @param {Field} a First field\r\n * @param {Field} b Second field\r\n * @returns {number} Comparison value\r\n */\r\nutil.compareFieldsById = function compareFieldsById(a, b) {\r\n    return a.id - b.id;\r\n};\r\n\r\n/**\r\n * Decorator helper for types (TypeScript).\r\n * @param {Constructor<T>} ctor Constructor function\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {Type} Reflected type\r\n * @template T extends Message<T>\r\n * @property {Root} root Decorators root\r\n */\r\nutil.decorateType = function decorateType(ctor, typeName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (ctor.$type) {\r\n        if (typeName && ctor.$type.name !== typeName) {\r\n            util.decorateRoot.remove(ctor.$type);\r\n            ctor.$type.name = typeName;\r\n            util.decorateRoot.add(ctor.$type);\r\n        }\r\n        return ctor.$type;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Type)\r\n        Type = require(\"./type\");\r\n\r\n    var type = new Type(typeName || ctor.name);\r\n    util.decorateRoot.add(type);\r\n    type.ctor = ctor; // sets up .encode, .decode etc.\r\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\r\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\r\n    return type;\r\n};\r\n\r\nvar decorateEnumIndex = 0;\r\n\r\n/**\r\n * Decorator helper for enums (TypeScript).\r\n * @param {Object} object Enum object\r\n * @returns {Enum} Reflected enum\r\n */\r\nutil.decorateEnum = function decorateEnum(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (object.$type)\r\n        return object.$type;\r\n\r\n    /* istanbul ignore next */\r\n    if (!Enum)\r\n        Enum = require(\"./enum\");\r\n\r\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\r\n    util.decorateRoot.add(enm);\r\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Decorator root (TypeScript).\r\n * @name util.decorateRoot\r\n * @type {Root}\r\n * @readonly\r\n */\r\nObject.defineProperty(util, \"decorateRoot\", {\r\n    get: function() {\r\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/util.js","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/@protobufjs/codegen/index.js","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/@protobufjs/fetch/index.js","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/@protobufjs/path/index.js","\"use strict\";\r\nmodule.exports = Type;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    OneOf     = require(\"./oneof\"),\r\n    Field     = require(\"./field\"),\r\n    MapField  = require(\"./mapfield\"),\r\n    Service   = require(\"./service\"),\r\n    Message   = require(\"./message\"),\r\n    Reader    = require(\"./reader\"),\r\n    Writer    = require(\"./writer\"),\r\n    util      = require(\"./util\"),\r\n    encoder   = require(\"./encoder\"),\r\n    decoder   = require(\"./decoder\"),\r\n    verifier  = require(\"./verifier\"),\r\n    converter = require(\"./converter\"),\r\n    wrappers  = require(\"./wrappers\");\r\n\r\n/**\r\n * Constructs a new reflected message type instance.\r\n * @classdesc Reflected message type.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Message name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\nfunction Type(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Message fields.\r\n     * @type {Object.<string,Field>}\r\n     */\r\n    this.fields = {};  // toJSON, marker\r\n\r\n    /**\r\n     * Oneofs declared within this namespace, if any.\r\n     * @type {Object.<string,OneOf>}\r\n     */\r\n    this.oneofs = undefined; // toJSON\r\n\r\n    /**\r\n     * Extension ranges, if any.\r\n     * @type {number[][]}\r\n     */\r\n    this.extensions = undefined; // toJSON\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    /*?\r\n     * Whether this type is a legacy group.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.group = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached fields by id.\r\n     * @type {Object.<number,Field>|null}\r\n     * @private\r\n     */\r\n    this._fieldsById = null;\r\n\r\n    /**\r\n     * Cached fields as an array.\r\n     * @type {Field[]|null}\r\n     * @private\r\n     */\r\n    this._fieldsArray = null;\r\n\r\n    /**\r\n     * Cached oneofs as an array.\r\n     * @type {OneOf[]|null}\r\n     * @private\r\n     */\r\n    this._oneofsArray = null;\r\n\r\n    /**\r\n     * Cached constructor.\r\n     * @type {Constructor<{}>}\r\n     * @private\r\n     */\r\n    this._ctor = null;\r\n}\r\n\r\nObject.defineProperties(Type.prototype, {\r\n\r\n    /**\r\n     * Message fields by id.\r\n     * @name Type#fieldsById\r\n     * @type {Object.<number,Field>}\r\n     * @readonly\r\n     */\r\n    fieldsById: {\r\n        get: function() {\r\n\r\n            /* istanbul ignore if */\r\n            if (this._fieldsById)\r\n                return this._fieldsById;\r\n\r\n            this._fieldsById = {};\r\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\r\n                var field = this.fields[names[i]],\r\n                    id = field.id;\r\n\r\n                /* istanbul ignore if */\r\n                if (this._fieldsById[id])\r\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\r\n\r\n                this._fieldsById[id] = field;\r\n            }\r\n            return this._fieldsById;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fields of this message as an array for iteration.\r\n     * @name Type#fieldsArray\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    fieldsArray: {\r\n        get: function() {\r\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Oneofs of this message as an array for iteration.\r\n     * @name Type#oneofsArray\r\n     * @type {OneOf[]}\r\n     * @readonly\r\n     */\r\n    oneofsArray: {\r\n        get: function() {\r\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The registered constructor, if any registered, otherwise a generic constructor.\r\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n     * @name Type#ctor\r\n     * @type {Constructor<{}>}\r\n     */\r\n    ctor: {\r\n        get: function() {\r\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\r\n        },\r\n        set: function(ctor) {\r\n\r\n            // Ensure proper prototype\r\n            var prototype = ctor.prototype;\r\n            if (!(prototype instanceof Message)) {\r\n                (ctor.prototype = new Message()).constructor = ctor;\r\n                util.merge(ctor.prototype, prototype);\r\n            }\r\n\r\n            // Classes and messages reference their reflected type\r\n            ctor.$type = ctor.prototype.$type = this;\r\n\r\n            // Mix in static methods\r\n            util.merge(ctor, Message, true);\r\n\r\n            this._ctor = ctor;\r\n\r\n            // Messages have non-enumerable default values on their prototype\r\n            var i = 0;\r\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\r\n                this._fieldsArray[i].resolve(); // ensures a proper value\r\n\r\n            // Messages have non-enumerable getters and setters for each virtual oneof field\r\n            var ctorProperties = {};\r\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\r\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\r\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\r\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\r\n                };\r\n            if (i)\r\n                Object.defineProperties(ctor.prototype, ctorProperties);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Generates a constructor function for the specified type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nType.generateConstructor = function generateConstructor(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"p\"], mtype.name);\r\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\r\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\r\n        if ((field = mtype._fieldsArray[i]).map) gen\r\n            (\"this%s={}\", util.safeProp(field.name));\r\n        else if (field.repeated) gen\r\n            (\"this%s=[]\", util.safeProp(field.name));\r\n    return gen\r\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\r\n        (\"this[ks[i]]=p[ks[i]]\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n};\r\n\r\nfunction clearCache(type) {\r\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\r\n    delete type.encode;\r\n    delete type.decode;\r\n    delete type.verify;\r\n    return type;\r\n}\r\n\r\n/**\r\n * Message type descriptor.\r\n * @interface IType\r\n * @extends INamespace\r\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n * @property {Object.<string,IField>} fields Field descriptors\r\n * @property {number[][]} [extensions] Extension ranges\r\n * @property {number[][]} [reserved] Reserved ranges\r\n * @property {boolean} [group=false] Whether a legacy group or not\r\n */\r\n\r\n/**\r\n * Creates a message type from a message type descriptor.\r\n * @param {string} name Message name\r\n * @param {IType} json Message type descriptor\r\n * @returns {Type} Created message type\r\n */\r\nType.fromJSON = function fromJSON(name, json) {\r\n    var type = new Type(name, json.options);\r\n    type.extensions = json.extensions;\r\n    type.reserved = json.reserved;\r\n    var names = Object.keys(json.fields),\r\n        i = 0;\r\n    for (; i < names.length; ++i)\r\n        type.add(\r\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\r\n            ? MapField.fromJSON\r\n            : Field.fromJSON )(names[i], json.fields[names[i]])\r\n        );\r\n    if (json.oneofs)\r\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\r\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\r\n    if (json.nested)\r\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\r\n            var nested = json.nested[names[i]];\r\n            type.add( // most to least likely\r\n                ( nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    if (json.extensions && json.extensions.length)\r\n        type.extensions = json.extensions;\r\n    if (json.reserved && json.reserved.length)\r\n        type.reserved = json.reserved;\r\n    if (json.group)\r\n        type.group = true;\r\n    if (json.comment)\r\n        type.comment = json.comment;\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts this message type to a message type descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IType} Message type descriptor\r\n */\r\nType.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"    , inherited && inherited.options || undefined,\r\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\r\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\r\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\r\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"group\"      , this.group || undefined,\r\n        \"nested\"     , inherited && inherited.nested || undefined,\r\n        \"comment\"    , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.resolveAll = function resolveAll() {\r\n    var fields = this.fieldsArray, i = 0;\r\n    while (i < fields.length)\r\n        fields[i++].resolve();\r\n    var oneofs = this.oneofsArray; i = 0;\r\n    while (i < oneofs.length)\r\n        oneofs[i++].resolve();\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.get = function get(name) {\r\n    return this.fields[name]\r\n        || this.oneofs && this.oneofs[name]\r\n        || this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Adds a nested object to this type.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n */\r\nType.prototype.add = function add(object) {\r\n\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\r\n        // The root object takes care of adding distinct sister-fields to the respective extended\r\n        // type instead.\r\n\r\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\r\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\r\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\r\n        if (this.isReservedId(object.id))\r\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\r\n        if (this.isReservedName(object.name))\r\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\r\n\r\n        if (object.parent)\r\n            object.parent.remove(object);\r\n        this.fields[object.name] = object;\r\n        object.message = this;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n        if (!this.oneofs)\r\n            this.oneofs = {};\r\n        this.oneofs[object.name] = object;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this type.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this type\r\n */\r\nType.prototype.remove = function remove(object) {\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // See Type#add for the reason why extension fields are excluded here.\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.fields || this.fields[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.fields[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.oneofs || this.oneofs[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.oneofs[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.create = function create(properties) {\r\n    return new this.ctor(properties);\r\n};\r\n\r\n/**\r\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n * @returns {Type} `this`\r\n */\r\nType.prototype.setup = function setup() {\r\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\r\n    // multiple times (V8, soft-deopt prototype-check).\r\n\r\n    var fullName = this.fullName,\r\n        types    = [];\r\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\r\n        types.push(this._fieldsArray[i].resolve().resolvedType);\r\n\r\n    // Replace setup methods with type-specific generated functions\r\n    this.encode = encoder(this)({\r\n        Writer : Writer,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.decode = decoder(this)({\r\n        Reader : Reader,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.verify = verifier(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.fromObject = converter.fromObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.toObject = converter.toObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n\r\n    // Inject custom wrappers for common types\r\n    var wrapper = wrappers[fullName];\r\n    if (wrapper) {\r\n        var originalThis = Object.create(this);\r\n        // if (wrapper.fromObject) {\r\n            originalThis.fromObject = this.fromObject;\r\n            this.fromObject = wrapper.fromObject.bind(originalThis);\r\n        // }\r\n        // if (wrapper.toObject) {\r\n            originalThis.toObject = this.toObject;\r\n            this.toObject = wrapper.toObject.bind(originalThis);\r\n        // }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encode = function encode_setup(message, writer) {\r\n    return this.setup().encode(message, writer); // overrides this method\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @param {number} [length] Length of the message, if known beforehand\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError<{}>} If required fields are missing\r\n */\r\nType.prototype.decode = function decode_setup(reader, length) {\r\n    return this.setup().decode(reader, length); // overrides this method\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its byte length as a varint.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError} If required fields are missing\r\n */\r\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof Reader))\r\n        reader = Reader.create(reader);\r\n    return this.decode(reader, reader.uint32());\r\n};\r\n\r\n/**\r\n * Verifies that field values are valid and that required fields are present.\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n */\r\nType.prototype.verify = function verify_setup(message) {\r\n    return this.setup().verify(message); // overrides this method\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object to convert\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.fromObject = function fromObject(object) {\r\n    return this.setup().fromObject(object);\r\n};\r\n\r\n/**\r\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n * @interface IConversionOptions\r\n * @property {Function} [longs] Long conversion type.\r\n * Valid values are `String` and `Number` (the global types).\r\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n * @property {Function} [enums] Enum value conversion type.\r\n * Only valid value is `String` (the global type).\r\n * Defaults to copy the present value, which is the numeric id.\r\n * @property {Function} [bytes] Bytes value conversion type.\r\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n */\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n */\r\nType.prototype.toObject = function toObject(message, options) {\r\n    return this.setup().toObject(message, options);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Type.d} (TypeScript).\r\n * @typedef TypeDecorator\r\n * @type {function}\r\n * @param {Constructor<T>} target Target constructor\r\n * @returns {undefined}\r\n * @template T extends Message<T>\r\n */\r\n\r\n/**\r\n * Type decorator (TypeScript).\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {TypeDecorator<T>} Decorator function\r\n * @template T extends Message<T>\r\n */\r\nType.d = function decorateType(typeName) {\r\n    return function typeDecorator(target) {\r\n        util.decorateType(target, typeName);\r\n    };\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/type.js","\"use strict\";\r\nmodule.exports = Namespace;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\r\n\r\nvar Field    = require(\"./field\"),\r\n    util     = require(\"./util\");\r\n\r\nvar Type,    // cyclic\r\n    Service,\r\n    Enum;\r\n\r\n/**\r\n * Constructs a new namespace instance.\r\n * @name Namespace\r\n * @classdesc Reflected namespace.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a namespace from JSON.\r\n * @memberof Namespace\r\n * @function\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} json JSON object\r\n * @returns {Namespace} Created namespace\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nNamespace.fromJSON = function fromJSON(name, json) {\r\n    return new Namespace(name, json.options).addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Converts an array of reflection objects to JSON.\r\n * @memberof Namespace\r\n * @param {ReflectionObject[]} array Object array\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\r\n */\r\nfunction arrayToJSON(array, toJSONOptions) {\r\n    if (!(array && array.length))\r\n        return undefined;\r\n    var obj = {};\r\n    for (var i = 0; i < array.length; ++i)\r\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\r\n    return obj;\r\n}\r\n\r\nNamespace.arrayToJSON = arrayToJSON;\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedId = function isReservedId(reserved, id) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] >= id)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedName = function isReservedName(reserved, name) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (reserved[i] === name)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Namespace} instead.\r\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports NamespaceBase\r\n * @extends ReflectionObject\r\n * @abstract\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @see {@link Namespace}\r\n */\r\nfunction Namespace(name, options) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Nested objects by name.\r\n     * @type {Object.<string,ReflectionObject>|undefined}\r\n     */\r\n    this.nested = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached nested objects as an array.\r\n     * @type {ReflectionObject[]|null}\r\n     * @private\r\n     */\r\n    this._nestedArray = null;\r\n}\r\n\r\nfunction clearCache(namespace) {\r\n    namespace._nestedArray = null;\r\n    return namespace;\r\n}\r\n\r\n/**\r\n * Nested objects of this namespace as an array for iteration.\r\n * @name NamespaceBase#nestedArray\r\n * @type {ReflectionObject[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\r\n    get: function() {\r\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\r\n    }\r\n});\r\n\r\n/**\r\n * Namespace descriptor.\r\n * @interface INamespace\r\n * @property {Object.<string,*>} [options] Namespace options\r\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\r\n */\r\n\r\n/**\r\n * Any extension field descriptor.\r\n * @typedef AnyExtensionField\r\n * @type {IExtensionField|IExtensionMapField}\r\n */\r\n\r\n/**\r\n * Any nested object descriptor.\r\n * @typedef AnyNestedObject\r\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\r\n */\r\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\r\n\r\n/**\r\n * Converts this namespace to a namespace descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {INamespace} Namespace descriptor\r\n */\r\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds nested objects to this namespace from nested object descriptors.\r\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\r\n    var ns = this;\r\n    /* istanbul ignore else */\r\n    if (nestedJson) {\r\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\r\n            nested = nestedJson[names[i]];\r\n            ns.add( // most to least likely\r\n                ( nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the nested object of the specified name.\r\n * @param {string} name Nested object name\r\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\r\n */\r\nNamespace.prototype.get = function get(name) {\r\n    return this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Gets the values of the nested {@link Enum|enum} of the specified name.\r\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\r\n * @param {string} name Nested enum name\r\n * @returns {Object.<string,number>} Enum values\r\n * @throws {Error} If there is no such enum\r\n */\r\nNamespace.prototype.getEnum = function getEnum(name) {\r\n    if (this.nested && this.nested[name] instanceof Enum)\r\n        return this.nested[name].values;\r\n    throw Error(\"no such enum: \" + name);\r\n};\r\n\r\n/**\r\n * Adds a nested object to this namespace.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name\r\n */\r\nNamespace.prototype.add = function add(object) {\r\n\r\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\r\n        throw TypeError(\"object must be a valid nested object\");\r\n\r\n    if (!this.nested)\r\n        this.nested = {};\r\n    else {\r\n        var prev = this.get(object.name);\r\n        if (prev) {\r\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\r\n                // replace plain namespace but keep existing nested elements and options\r\n                var nested = prev.nestedArray;\r\n                for (var i = 0; i < nested.length; ++i)\r\n                    object.add(nested[i]);\r\n                this.remove(prev);\r\n                if (!this.nested)\r\n                    this.nested = {};\r\n                object.setOptions(prev.options, true);\r\n\r\n            } else\r\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n        }\r\n    }\r\n    this.nested[object.name] = object;\r\n    object.onAdd(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this namespace.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this namespace\r\n */\r\nNamespace.prototype.remove = function remove(object) {\r\n\r\n    if (!(object instanceof ReflectionObject))\r\n        throw TypeError(\"object must be a ReflectionObject\");\r\n    if (object.parent !== this)\r\n        throw Error(object + \" is not a member of \" + this);\r\n\r\n    delete this.nested[object.name];\r\n    if (!Object.keys(this.nested).length)\r\n        this.nested = undefined;\r\n\r\n    object.onRemove(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Defines additial namespaces within this one if not yet existing.\r\n * @param {string|string[]} path Path to create\r\n * @param {*} [json] Nested types to create from JSON\r\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\r\n */\r\nNamespace.prototype.define = function define(path, json) {\r\n\r\n    if (util.isString(path))\r\n        path = path.split(\".\");\r\n    else if (!Array.isArray(path))\r\n        throw TypeError(\"illegal path\");\r\n    if (path && path.length && path[0] === \"\")\r\n        throw Error(\"path must be relative\");\r\n\r\n    var ptr = this;\r\n    while (path.length > 0) {\r\n        var part = path.shift();\r\n        if (ptr.nested && ptr.nested[part]) {\r\n            ptr = ptr.nested[part];\r\n            if (!(ptr instanceof Namespace))\r\n                throw Error(\"path conflicts with non-namespace objects\");\r\n        } else\r\n            ptr.add(ptr = new Namespace(part));\r\n    }\r\n    if (json)\r\n        ptr.addJSON(json);\r\n    return ptr;\r\n};\r\n\r\n/**\r\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.resolveAll = function resolveAll() {\r\n    var nested = this.nestedArray, i = 0;\r\n    while (i < nested.length)\r\n        if (nested[i] instanceof Namespace)\r\n            nested[i++].resolveAll();\r\n        else\r\n            nested[i++].resolve();\r\n    return this.resolve();\r\n};\r\n\r\n/**\r\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\r\n * @param {string|string[]} path Path to look up\r\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\r\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n */\r\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof filterTypes === \"boolean\") {\r\n        parentAlreadyChecked = filterTypes;\r\n        filterTypes = undefined;\r\n    } else if (filterTypes && !Array.isArray(filterTypes))\r\n        filterTypes = [ filterTypes ];\r\n\r\n    if (util.isString(path) && path.length) {\r\n        if (path === \".\")\r\n            return this.root;\r\n        path = path.split(\".\");\r\n    } else if (!path.length)\r\n        return this;\r\n\r\n    // Start at root if path is absolute\r\n    if (path[0] === \"\")\r\n        return this.root.lookup(path.slice(1), filterTypes);\r\n\r\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\r\n    var found = this.get(path[0]);\r\n    if (found) {\r\n        if (path.length === 1) {\r\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\r\n                return found;\r\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\r\n            return found;\r\n\r\n    // Otherwise try each nested namespace\r\n    } else\r\n        for (var i = 0; i < this.nestedArray.length; ++i)\r\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\r\n                return found;\r\n\r\n    // If there hasn't been a match, try again at the parent\r\n    if (this.parent === null || parentAlreadyChecked)\r\n        return null;\r\n    return this.parent.lookup(path, filterTypes);\r\n};\r\n\r\n/**\r\n * Looks up the reflection object at the specified path, relative to this namespace.\r\n * @name NamespaceBase#lookup\r\n * @function\r\n * @param {string|string[]} path Path to look up\r\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n * @variation 2\r\n */\r\n// lookup(path: string, [parentAlreadyChecked: boolean])\r\n\r\n/**\r\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type\r\n * @throws {Error} If `path` does not point to a type\r\n */\r\nNamespace.prototype.lookupType = function lookupType(path) {\r\n    var found = this.lookup(path, [ Type ]);\r\n    if (!found)\r\n        throw Error(\"no such type: \" + path);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Enum} Looked up enum\r\n * @throws {Error} If `path` does not point to an enum\r\n */\r\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\r\n    var found = this.lookup(path, [ Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type or enum\r\n * @throws {Error} If `path` does not point to a type or enum\r\n */\r\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\r\n    var found = this.lookup(path, [ Type, Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Service} Looked up service\r\n * @throws {Error} If `path` does not point to a service\r\n */\r\nNamespace.prototype.lookupService = function lookupService(path) {\r\n    var found = this.lookup(path, [ Service ]);\r\n    if (!found)\r\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nNamespace._configure = function(Type_, Service_, Enum_) {\r\n    Type    = Type_;\r\n    Service = Service_;\r\n    Enum    = Enum_;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/namespace.js","\"use strict\";\r\nmodule.exports = Field;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\r\n\r\nvar Enum  = require(\"./enum\"),\r\n    types = require(\"./types\"),\r\n    util  = require(\"./util\");\r\n\r\nvar Type; // cyclic\r\n\r\nvar ruleRe = /^required|optional|repeated$/;\r\n\r\n/**\r\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\r\n * @name Field\r\n * @classdesc Reflected message field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a field from a field descriptor.\r\n * @param {string} name Field name\r\n * @param {IField} json Field descriptor\r\n * @returns {Field} Created field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nField.fromJSON = function fromJSON(name, json) {\r\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Field} instead.\r\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports FieldBase\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction Field(name, id, type, rule, extend, options, comment) {\r\n\r\n    if (util.isObject(rule)) {\r\n        comment = extend;\r\n        options = rule;\r\n        rule = extend = undefined;\r\n    } else if (util.isObject(extend)) {\r\n        comment = options;\r\n        options = extend;\r\n        extend = undefined;\r\n    }\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (!util.isInteger(id) || id < 0)\r\n        throw TypeError(\"id must be a non-negative integer\");\r\n\r\n    if (!util.isString(type))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\r\n        throw TypeError(\"rule must be a string rule\");\r\n\r\n    if (extend !== undefined && !util.isString(extend))\r\n        throw TypeError(\"extend must be a string\");\r\n\r\n    /**\r\n     * Field rule, if any.\r\n     * @type {string|undefined}\r\n     */\r\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\r\n\r\n    /**\r\n     * Field type.\r\n     * @type {string}\r\n     */\r\n    this.type = type; // toJSON\r\n\r\n    /**\r\n     * Unique field id.\r\n     * @type {number}\r\n     */\r\n    this.id = id; // toJSON, marker\r\n\r\n    /**\r\n     * Extended type if different from parent.\r\n     * @type {string|undefined}\r\n     */\r\n    this.extend = extend || undefined; // toJSON\r\n\r\n    /**\r\n     * Whether this field is required.\r\n     * @type {boolean}\r\n     */\r\n    this.required = rule === \"required\";\r\n\r\n    /**\r\n     * Whether this field is optional.\r\n     * @type {boolean}\r\n     */\r\n    this.optional = !this.required;\r\n\r\n    /**\r\n     * Whether this field is repeated.\r\n     * @type {boolean}\r\n     */\r\n    this.repeated = rule === \"repeated\";\r\n\r\n    /**\r\n     * Whether this field is a map or not.\r\n     * @type {boolean}\r\n     */\r\n    this.map = false;\r\n\r\n    /**\r\n     * Message this field belongs to.\r\n     * @type {Type|null}\r\n     */\r\n    this.message = null;\r\n\r\n    /**\r\n     * OneOf this field belongs to, if any,\r\n     * @type {OneOf|null}\r\n     */\r\n    this.partOf = null;\r\n\r\n    /**\r\n     * The field type's default value.\r\n     * @type {*}\r\n     */\r\n    this.typeDefault = null;\r\n\r\n    /**\r\n     * The field's default value on prototypes.\r\n     * @type {*}\r\n     */\r\n    this.defaultValue = null;\r\n\r\n    /**\r\n     * Whether this field's value should be treated as a long.\r\n     * @type {boolean}\r\n     */\r\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\r\n\r\n    /**\r\n     * Whether this field's value is a buffer.\r\n     * @type {boolean}\r\n     */\r\n    this.bytes = type === \"bytes\";\r\n\r\n    /**\r\n     * Resolved type if not a basic type.\r\n     * @type {Type|Enum|null}\r\n     */\r\n    this.resolvedType = null;\r\n\r\n    /**\r\n     * Sister-field within the extended type if a declaring extension field.\r\n     * @type {Field|null}\r\n     */\r\n    this.extensionField = null;\r\n\r\n    /**\r\n     * Sister-field within the declaring namespace if an extended field.\r\n     * @type {Field|null}\r\n     */\r\n    this.declaringField = null;\r\n\r\n    /**\r\n     * Internally remembers whether this field is packed.\r\n     * @type {boolean|null}\r\n     * @private\r\n     */\r\n    this._packed = null;\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\r\n * @name Field#packed\r\n * @type {boolean}\r\n * @readonly\r\n */\r\nObject.defineProperty(Field.prototype, \"packed\", {\r\n    get: function() {\r\n        // defaults to packed=true if not explicity set to false\r\n        if (this._packed === null)\r\n            this._packed = this.getOption(\"packed\") !== false;\r\n        return this._packed;\r\n    }\r\n});\r\n\r\n/**\r\n * @override\r\n */\r\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (name === \"packed\") // clear cached before setting\r\n        this._packed = null;\r\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\r\n};\r\n\r\n/**\r\n * Field descriptor.\r\n * @interface IField\r\n * @property {string} [rule=\"optional\"] Field rule\r\n * @property {string} type Field type\r\n * @property {number} id Field id\r\n * @property {Object.<string,*>} [options] Field options\r\n */\r\n\r\n/**\r\n * Extension field descriptor.\r\n * @interface IExtensionField\r\n * @extends IField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Converts this field to a field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IField} Field descriptor\r\n */\r\nField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Resolves this field's type references.\r\n * @returns {Field} `this`\r\n * @throws {Error} If any reference cannot be resolved\r\n */\r\nField.prototype.resolve = function resolve() {\r\n\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\r\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\r\n        if (this.resolvedType instanceof Type)\r\n            this.typeDefault = null;\r\n        else // instanceof Enum\r\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\r\n    }\r\n\r\n    // use explicitly set default value if present\r\n    if (this.options && this.options[\"default\"] != null) {\r\n        this.typeDefault = this.options[\"default\"];\r\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\r\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\r\n    }\r\n\r\n    // remove unnecessary options\r\n    if (this.options) {\r\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\r\n            delete this.options.packed;\r\n        if (!Object.keys(this.options).length)\r\n            this.options = undefined;\r\n    }\r\n\r\n    // convert to internal data type if necesssary\r\n    if (this.long) {\r\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\r\n\r\n        /* istanbul ignore else */\r\n        if (Object.freeze)\r\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\r\n\r\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\r\n        var buf;\r\n        if (util.base64.test(this.typeDefault))\r\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\r\n        else\r\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\r\n        this.typeDefault = buf;\r\n    }\r\n\r\n    // take special care of maps and repeated fields\r\n    if (this.map)\r\n        this.defaultValue = util.emptyObject;\r\n    else if (this.repeated)\r\n        this.defaultValue = util.emptyArray;\r\n    else\r\n        this.defaultValue = this.typeDefault;\r\n\r\n    // ensure proper value on prototype\r\n    if (this.parent instanceof Type)\r\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\r\n * @typedef FieldDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} fieldName Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @param {T} [defaultValue] Default value\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\r\n */\r\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\r\n\r\n    // submessage: decorate the submessage and use its name as the type\r\n    if (typeof fieldType === \"function\")\r\n        fieldType = util.decorateType(fieldType).name;\r\n\r\n    // enum reference: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldType && typeof fieldType === \"object\")\r\n        fieldType = util.decorateEnum(fieldType).name;\r\n\r\n    return function fieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\r\n    };\r\n};\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {Constructor<T>|string} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends Message<T>\r\n * @variation 2\r\n */\r\n// like Field.d but without a default value\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nField._configure = function configure(Type_) {\r\n    Type = Type_;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/field.js","\"use strict\";\r\n\r\n/**\r\n * Common type constants.\r\n * @namespace\r\n */\r\nvar types = exports;\r\n\r\nvar util = require(\"./util\");\r\n\r\nvar s = [\r\n    \"double\",   // 0\r\n    \"float\",    // 1\r\n    \"int32\",    // 2\r\n    \"uint32\",   // 3\r\n    \"sint32\",   // 4\r\n    \"fixed32\",  // 5\r\n    \"sfixed32\", // 6\r\n    \"int64\",    // 7\r\n    \"uint64\",   // 8\r\n    \"sint64\",   // 9\r\n    \"fixed64\",  // 10\r\n    \"sfixed64\", // 11\r\n    \"bool\",     // 12\r\n    \"string\",   // 13\r\n    \"bytes\"     // 14\r\n];\r\n\r\nfunction bake(values, offset) {\r\n    var i = 0, o = {};\r\n    offset |= 0;\r\n    while (i < values.length) o[s[i + offset]] = values[i++];\r\n    return o;\r\n}\r\n\r\n/**\r\n * Basic type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n * @property {number} bytes=2 Ldelim wire type\r\n */\r\ntypes.basic = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2,\r\n    /* bytes    */ 2\r\n]);\r\n\r\n/**\r\n * Basic type defaults.\r\n * @type {Object.<string,*>}\r\n * @const\r\n * @property {number} double=0 Double default\r\n * @property {number} float=0 Float default\r\n * @property {number} int32=0 Int32 default\r\n * @property {number} uint32=0 Uint32 default\r\n * @property {number} sint32=0 Sint32 default\r\n * @property {number} fixed32=0 Fixed32 default\r\n * @property {number} sfixed32=0 Sfixed32 default\r\n * @property {number} int64=0 Int64 default\r\n * @property {number} uint64=0 Uint64 default\r\n * @property {number} sint64=0 Sint32 default\r\n * @property {number} fixed64=0 Fixed64 default\r\n * @property {number} sfixed64=0 Sfixed64 default\r\n * @property {boolean} bool=false Bool default\r\n * @property {string} string=\"\" String default\r\n * @property {Array.<number>} bytes=Array(0) Bytes default\r\n * @property {null} message=null Message default\r\n */\r\ntypes.defaults = bake([\r\n    /* double   */ 0,\r\n    /* float    */ 0,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 0,\r\n    /* sfixed32 */ 0,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 0,\r\n    /* sfixed64 */ 0,\r\n    /* bool     */ false,\r\n    /* string   */ \"\",\r\n    /* bytes    */ util.emptyArray,\r\n    /* message  */ null\r\n]);\r\n\r\n/**\r\n * Basic long type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n */\r\ntypes.long = bake([\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1\r\n], 7);\r\n\r\n/**\r\n * Allowed types for map keys with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n */\r\ntypes.mapKey = bake([\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2\r\n], 2);\r\n\r\n/**\r\n * Allowed types for packed repeated fields with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n */\r\ntypes.packed = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0\r\n]);\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/types.js","\"use strict\";\r\nmodule.exports = OneOf;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\r\n\r\nvar Field = require(\"./field\"),\r\n    util  = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new oneof instance.\r\n * @classdesc Reflected oneof.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Oneof name\r\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction OneOf(name, fieldNames, options, comment) {\r\n    if (!Array.isArray(fieldNames)) {\r\n        options = fieldNames;\r\n        fieldNames = undefined;\r\n    }\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /* istanbul ignore if */\r\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\r\n        throw TypeError(\"fieldNames must be an Array\");\r\n\r\n    /**\r\n     * Field names that belong to this oneof.\r\n     * @type {string[]}\r\n     */\r\n    this.oneof = fieldNames || []; // toJSON, marker\r\n\r\n    /**\r\n     * Fields that belong to this oneof as an array for iteration.\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Oneof descriptor.\r\n * @interface IOneOf\r\n * @property {Array.<string>} oneof Oneof field names\r\n * @property {Object.<string,*>} [options] Oneof options\r\n */\r\n\r\n/**\r\n * Constructs a oneof from a oneof descriptor.\r\n * @param {string} name Oneof name\r\n * @param {IOneOf} json Oneof descriptor\r\n * @returns {OneOf} Created oneof\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nOneOf.fromJSON = function fromJSON(name, json) {\r\n    return new OneOf(name, json.oneof, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this oneof to a oneof descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IOneOf} Oneof descriptor\r\n */\r\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"oneof\"   , this.oneof,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds the fields of the specified oneof to the parent if not already done so.\r\n * @param {OneOf} oneof The oneof\r\n * @returns {undefined}\r\n * @inner\r\n * @ignore\r\n */\r\nfunction addFieldsToParent(oneof) {\r\n    if (oneof.parent)\r\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\r\n            if (!oneof.fieldsArray[i].parent)\r\n                oneof.parent.add(oneof.fieldsArray[i]);\r\n}\r\n\r\n/**\r\n * Adds a field to this oneof and removes it from its current parent, if any.\r\n * @param {Field} field Field to add\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.add = function add(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    if (field.parent && field.parent !== this.parent)\r\n        field.parent.remove(field);\r\n    this.oneof.push(field.name);\r\n    this.fieldsArray.push(field);\r\n    field.partOf = this; // field.parent remains null\r\n    addFieldsToParent(this);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a field from this oneof and puts it back to the oneof's parent.\r\n * @param {Field} field Field to remove\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.remove = function remove(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    var index = this.fieldsArray.indexOf(field);\r\n\r\n    /* istanbul ignore if */\r\n    if (index < 0)\r\n        throw Error(field + \" is not a member of \" + this);\r\n\r\n    this.fieldsArray.splice(index, 1);\r\n    index = this.oneof.indexOf(field.name);\r\n\r\n    /* istanbul ignore else */\r\n    if (index > -1) // theoretical\r\n        this.oneof.splice(index, 1);\r\n\r\n    field.partOf = null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onAdd = function onAdd(parent) {\r\n    ReflectionObject.prototype.onAdd.call(this, parent);\r\n    var self = this;\r\n    // Collect present fields\r\n    for (var i = 0; i < this.oneof.length; ++i) {\r\n        var field = parent.get(this.oneof[i]);\r\n        if (field && !field.partOf) {\r\n            field.partOf = self;\r\n            self.fieldsArray.push(field);\r\n        }\r\n    }\r\n    // Add not yet present fields\r\n    addFieldsToParent(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onRemove = function onRemove(parent) {\r\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\r\n        if ((field = this.fieldsArray[i]).parent)\r\n            field.parent.remove(field);\r\n    ReflectionObject.prototype.onRemove.call(this, parent);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n * @typedef OneOfDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} oneofName OneOf name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * OneOf decorator (TypeScript).\r\n * @function\r\n * @param {...string} fieldNames Field names\r\n * @returns {OneOfDecorator} Decorator function\r\n * @template T extends string\r\n */\r\nOneOf.d = function decorateOneOf() {\r\n    var fieldNames = new Array(arguments.length),\r\n        index = 0;\r\n    while (index < arguments.length)\r\n        fieldNames[index] = arguments[index++];\r\n    return function oneOfDecorator(prototype, oneofName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new OneOf(oneofName, fieldNames));\r\n        Object.defineProperty(prototype, oneofName, {\r\n            get: util.oneOfGetter(fieldNames),\r\n            set: util.oneOfSetter(fieldNames)\r\n        });\r\n    };\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/oneof.js","\"use strict\";\r\nmodule.exports = MapField;\r\n\r\n// extends Field\r\nvar Field = require(\"./field\");\r\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\r\n\r\nvar types   = require(\"./types\"),\r\n    util    = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new map field instance.\r\n * @classdesc Reflected map field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} keyType Key type\r\n * @param {string} type Value type\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction MapField(name, id, keyType, type, options, comment) {\r\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(keyType))\r\n        throw TypeError(\"keyType must be a string\");\r\n\r\n    /**\r\n     * Key type.\r\n     * @type {string}\r\n     */\r\n    this.keyType = keyType; // toJSON, marker\r\n\r\n    /**\r\n     * Resolved key type if not a basic type.\r\n     * @type {ReflectionObject|null}\r\n     */\r\n    this.resolvedKeyType = null;\r\n\r\n    // Overrides Field#map\r\n    this.map = true;\r\n}\r\n\r\n/**\r\n * Map field descriptor.\r\n * @interface IMapField\r\n * @extends {IField}\r\n * @property {string} keyType Key type\r\n */\r\n\r\n/**\r\n * Extension map field descriptor.\r\n * @interface IExtensionMapField\r\n * @extends IMapField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Constructs a map field from a map field descriptor.\r\n * @param {string} name Field name\r\n * @param {IMapField} json Map field descriptor\r\n * @returns {MapField} Created map field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMapField.fromJSON = function fromJSON(name, json) {\r\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this map field to a map field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMapField} Map field descriptor\r\n */\r\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"keyType\" , this.keyType,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMapField.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\r\n    if (types.mapKey[this.keyType] === undefined)\r\n        throw Error(\"invalid key type: \" + this.keyType);\r\n\r\n    return Field.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Map field decorator (TypeScript).\r\n * @name MapField.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\r\n */\r\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\r\n\r\n    // submessage value: decorate the submessage and use its name as the type\r\n    if (typeof fieldValueType === \"function\")\r\n        fieldValueType = util.decorateType(fieldValueType).name;\r\n\r\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldValueType && typeof fieldValueType === \"object\")\r\n        fieldValueType = util.decorateEnum(fieldValueType).name;\r\n\r\n    return function mapFieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\r\n    };\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/mapfield.js","\"use strict\";\r\nmodule.exports = Service;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\r\n\r\nvar Method = require(\"./method\"),\r\n    util   = require(\"./util\"),\r\n    rpc    = require(\"./rpc\");\r\n\r\n/**\r\n * Constructs a new service instance.\r\n * @classdesc Reflected service.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Service name\r\n * @param {Object.<string,*>} [options] Service options\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nfunction Service(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Service methods.\r\n     * @type {Object.<string,Method>}\r\n     */\r\n    this.methods = {}; // toJSON, marker\r\n\r\n    /**\r\n     * Cached methods as an array.\r\n     * @type {Method[]|null}\r\n     * @private\r\n     */\r\n    this._methodsArray = null;\r\n}\r\n\r\n/**\r\n * Service descriptor.\r\n * @interface IService\r\n * @extends INamespace\r\n * @property {Object.<string,IMethod>} methods Method descriptors\r\n */\r\n\r\n/**\r\n * Constructs a service from a service descriptor.\r\n * @param {string} name Service name\r\n * @param {IService} json Service descriptor\r\n * @returns {Service} Created service\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nService.fromJSON = function fromJSON(name, json) {\r\n    var service = new Service(name, json.options);\r\n    /* istanbul ignore else */\r\n    if (json.methods)\r\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\r\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\r\n    if (json.nested)\r\n        service.addJSON(json.nested);\r\n    service.comment = json.comment;\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts this service to a service descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IService} Service descriptor\r\n */\r\nService.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , inherited && inherited.options || undefined,\r\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\r\n        \"nested\"  , inherited && inherited.nested || undefined,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Methods of this service as an array for iteration.\r\n * @name Service#methodsArray\r\n * @type {Method[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Service.prototype, \"methodsArray\", {\r\n    get: function() {\r\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\r\n    }\r\n});\r\n\r\nfunction clearCache(service) {\r\n    service._methodsArray = null;\r\n    return service;\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.get = function get(name) {\r\n    return this.methods[name]\r\n        || Namespace.prototype.get.call(this, name);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.resolveAll = function resolveAll() {\r\n    var methods = this.methodsArray;\r\n    for (var i = 0; i < methods.length; ++i)\r\n        methods[i].resolve();\r\n    return Namespace.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.add = function add(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Method) {\r\n        this.methods[object.name] = object;\r\n        object.parent = this;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.remove = function remove(object) {\r\n    if (object instanceof Method) {\r\n\r\n        /* istanbul ignore if */\r\n        if (this.methods[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.methods[object.name];\r\n        object.parent = null;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Creates a runtime service using the specified rpc implementation.\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\r\n */\r\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\r\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\r\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\r\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\r\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\r\n            m: method,\r\n            q: method.resolvedRequestType.ctor,\r\n            s: method.resolvedResponseType.ctor\r\n        });\r\n    }\r\n    return rpcService;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/service.js","\"use strict\";\r\nmodule.exports = Method;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\r\n\r\nvar util = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new service method instance.\r\n * @classdesc Reflected service method.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Method name\r\n * @param {string|undefined} type Method type, usually `\"rpc\"`\r\n * @param {string} requestType Request message type\r\n * @param {string} responseType Response message type\r\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\r\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this method\r\n */\r\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\r\n\r\n    /* istanbul ignore next */\r\n    if (util.isObject(requestStream)) {\r\n        options = requestStream;\r\n        requestStream = responseStream = undefined;\r\n    } else if (util.isObject(responseStream)) {\r\n        options = responseStream;\r\n        responseStream = undefined;\r\n    }\r\n\r\n    /* istanbul ignore if */\r\n    if (!(type === undefined || util.isString(type)))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(requestType))\r\n        throw TypeError(\"requestType must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(responseType))\r\n        throw TypeError(\"responseType must be a string\");\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Method type.\r\n     * @type {string}\r\n     */\r\n    this.type = type || \"rpc\"; // toJSON\r\n\r\n    /**\r\n     * Request type.\r\n     * @type {string}\r\n     */\r\n    this.requestType = requestType; // toJSON, marker\r\n\r\n    /**\r\n     * Whether requests are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.requestStream = requestStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Response type.\r\n     * @type {string}\r\n     */\r\n    this.responseType = responseType; // toJSON\r\n\r\n    /**\r\n     * Whether responses are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.responseStream = responseStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Resolved request type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedRequestType = null;\r\n\r\n    /**\r\n     * Resolved response type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedResponseType = null;\r\n\r\n    /**\r\n     * Comment for this method\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Method descriptor.\r\n * @interface IMethod\r\n * @property {string} [type=\"rpc\"] Method type\r\n * @property {string} requestType Request type\r\n * @property {string} responseType Response type\r\n * @property {boolean} [requestStream=false] Whether requests are streamed\r\n * @property {boolean} [responseStream=false] Whether responses are streamed\r\n * @property {Object.<string,*>} [options] Method options\r\n */\r\n\r\n/**\r\n * Constructs a method from a method descriptor.\r\n * @param {string} name Method name\r\n * @param {IMethod} json Method descriptor\r\n * @returns {Method} Created method\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMethod.fromJSON = function fromJSON(name, json) {\r\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this method to a method descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMethod} Method descriptor\r\n */\r\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\r\n        \"requestType\"    , this.requestType,\r\n        \"requestStream\"  , this.requestStream,\r\n        \"responseType\"   , this.responseType,\r\n        \"responseStream\" , this.responseStream,\r\n        \"options\"        , this.options,\r\n        \"comment\"        , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMethod.prototype.resolve = function resolve() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\r\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/method.js","\"use strict\";\r\nmodule.exports = Message;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new message instance.\r\n * @classdesc Abstract runtime message.\r\n * @constructor\r\n * @param {Properties<T>} [properties] Properties to set\r\n * @template T extends object = object\r\n */\r\nfunction Message(properties) {\r\n    // not used internally\r\n    if (properties)\r\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n            this[keys[i]] = properties[keys[i]];\r\n}\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message.$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message#$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/*eslint-disable valid-jsdoc*/\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<T>} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.create = function create(properties) {\r\n    return this.$type.create(properties);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encode = function encode(message, writer) {\r\n    return this.$type.encode(message, writer);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its length as a varint.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.$type.encodeDelimited(message, writer);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @name Message.decode\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decode = function decode(reader) {\r\n    return this.$type.decode(reader);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its length as a varint.\r\n * @name Message.decodeDelimited\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decodeDelimited = function decodeDelimited(reader) {\r\n    return this.$type.decodeDelimited(reader);\r\n};\r\n\r\n/**\r\n * Verifies a message of this type.\r\n * @name Message.verify\r\n * @function\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n */\r\nMessage.verify = function verify(message) {\r\n    return this.$type.verify(message);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {T} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.fromObject = function fromObject(object) {\r\n    return this.$type.fromObject(object);\r\n};\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {T} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.toObject = function toObject(message, options) {\r\n    return this.$type.toObject(message, options);\r\n};\r\n\r\n/**\r\n * Converts this message to JSON.\r\n * @returns {Object.<string,*>} JSON object\r\n */\r\nMessage.prototype.toJSON = function toJSON() {\r\n    return this.$type.toObject(this, util.toJSONOptions);\r\n};\r\n\r\n/*eslint-enable valid-jsdoc*/\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/message.js","\"use strict\";\r\nmodule.exports = decoder;\r\n\r\nvar Enum    = require(\"./enum\"),\r\n    types   = require(\"./types\"),\r\n    util    = require(\"./util\");\r\n\r\nfunction missing(field) {\r\n    return \"missing required '\" + field.name + \"'\";\r\n}\r\n\r\n/**\r\n * Generates a decoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction decoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\r\n    (\"if(!(r instanceof Reader))\")\r\n        (\"r=Reader.create(r)\")\r\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k\" : \"\"))\r\n    (\"while(r.pos<c){\")\r\n        (\"var t=r.uint32()\");\r\n    if (mtype.group) gen\r\n        (\"if((t&7)===4)\")\r\n            (\"break\");\r\n    gen\r\n        (\"switch(t>>>3){\");\r\n\r\n    var i = 0;\r\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            ref   = \"m\" + util.safeProp(field.name); gen\r\n            (\"case %i:\", field.id);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n                (\"r.skip().pos++\") // assumes id 1 + key wireType\r\n                (\"if(%s===util.emptyObject)\", ref)\r\n                    (\"%s={}\", ref)\r\n                (\"k=r.%s()\", field.keyType)\r\n                (\"r.pos++\"); // assumes id 2 + value wireType\r\n            if (types.long[field.keyType] !== undefined) {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);\r\n            } else {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[k]=r.%s()\", ref, type);\r\n            }\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n\r\n                (\"if(!(%s&&%s.length))\", ref, ref)\r\n                    (\"%s=[]\", ref);\r\n\r\n            // Packable (always check for forward and backward compatiblity)\r\n            if (types.packed[type] !== undefined) gen\r\n                (\"if((t&7)===2){\")\r\n                    (\"var c2=r.uint32()+r.pos\")\r\n                    (\"while(r.pos<c2)\")\r\n                        (\"%s.push(r.%s())\", ref, type)\r\n                (\"}else\");\r\n\r\n            // Non-packed\r\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                    ? \"%s.push(types[%i].decode(r))\"\r\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\r\n            else gen\r\n                    (\"%s.push(r.%s())\", ref, type);\r\n\r\n        // Non-repeated\r\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                ? \"%s=types[%i].decode(r)\"\r\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\r\n        else gen\r\n                (\"%s=r.%s()\", ref, type);\r\n        gen\r\n                (\"break\");\r\n    // Unknown fields\r\n    } gen\r\n            (\"default:\")\r\n                (\"r.skipType(t&7)\")\r\n                (\"break\")\r\n\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n    // Field presence\r\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\r\n        var rfield = mtype._fieldsArray[i];\r\n        if (rfield.required) gen\r\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\r\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\r\n    }\r\n\r\n    return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/decoder.js","\"use strict\";\r\nmodule.exports = verifier;\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    util      = require(\"./util\");\r\n\r\nfunction invalid(field, expected) {\r\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\r\n}\r\n\r\n/**\r\n * Generates a partial value verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(%s){\", ref)\r\n                (\"default:\")\r\n                    (\"return%j\", invalid(field, \"enum value\"));\r\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\r\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\r\n            gen\r\n                    (\"break\")\r\n            (\"}\");\r\n        } else {\r\n            gen\r\n            (\"{\")\r\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\r\n                (\"if(e)\")\r\n                    (\"return%j+e\", field.name + \".\")\r\n            (\"}\");\r\n        }\r\n    } else {\r\n        switch (field.type) {\r\n            case \"int32\":\r\n            case \"uint32\":\r\n            case \"sint32\":\r\n            case \"fixed32\":\r\n            case \"sfixed32\": gen\r\n                (\"if(!util.isInteger(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"integer\"));\r\n                break;\r\n            case \"int64\":\r\n            case \"uint64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"integer|Long\"));\r\n                break;\r\n            case \"float\":\r\n            case \"double\": gen\r\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"number\"));\r\n                break;\r\n            case \"bool\": gen\r\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"boolean\"));\r\n                break;\r\n            case \"string\": gen\r\n                (\"if(!util.isString(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"string\"));\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"buffer\"));\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a partial key verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyKey(gen, field, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    switch (field.keyType) {\r\n        case \"int32\":\r\n        case \"uint32\":\r\n        case \"sint32\":\r\n        case \"fixed32\":\r\n        case \"sfixed32\": gen\r\n            (\"if(!util.key32Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"integer key\"));\r\n            break;\r\n        case \"int64\":\r\n        case \"uint64\":\r\n        case \"sint64\":\r\n        case \"fixed64\":\r\n        case \"sfixed64\": gen\r\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\r\n                (\"return%j\", invalid(field, \"integer|Long key\"));\r\n            break;\r\n        case \"bool\": gen\r\n            (\"if(!util.key2Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"boolean key\"));\r\n            break;\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a verifier specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction verifier(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n\r\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\r\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\r\n        (\"return%j\", \"object expected\");\r\n    var oneofs = mtype.oneofsArray,\r\n        seenFirstField = {};\r\n    if (oneofs.length) gen\r\n    (\"var p={}\");\r\n\r\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            ref   = \"m\" + util.safeProp(field.name);\r\n\r\n        if (field.optional) gen\r\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\r\n\r\n        // map fields\r\n        if (field.map) { gen\r\n            (\"if(!util.isObject(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"object\"))\r\n            (\"var k=Object.keys(%s)\", ref)\r\n            (\"for(var i=0;i<k.length;++i){\");\r\n                genVerifyKey(gen, field, \"k[i]\");\r\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\r\n            (\"}\");\r\n\r\n        // repeated fields\r\n        } else if (field.repeated) { gen\r\n            (\"if(!Array.isArray(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"array\"))\r\n            (\"for(var i=0;i<%s.length;++i){\", ref);\r\n                genVerifyValue(gen, field, i, ref + \"[i]\")\r\n            (\"}\");\r\n\r\n        // required or present fields\r\n        } else {\r\n            if (field.partOf) {\r\n                var oneofProp = util.safeProp(field.partOf.name);\r\n                if (seenFirstField[field.partOf.name] === 1) gen\r\n            (\"if(p%s===1)\", oneofProp)\r\n                (\"return%j\", field.partOf.name + \": multiple values\");\r\n                seenFirstField[field.partOf.name] = 1;\r\n                gen\r\n            (\"p%s=1\", oneofProp);\r\n            }\r\n            genVerifyValue(gen, field, i, ref);\r\n        }\r\n        if (field.optional) gen\r\n        (\"}\");\r\n    }\r\n    return gen\r\n    (\"return null\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/verifier.js","\"use strict\";\r\n/**\r\n * Runtime message from/to plain object converters.\r\n * @namespace\r\n */\r\nvar converter = exports;\r\n\r\nvar Enum = require(\"./enum\"),\r\n    util = require(\"./util\");\r\n\r\n/**\r\n * Generates a partial value fromObject conveter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(d%s){\", prop);\r\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\r\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\r\n                (\"default:\");\r\n                gen\r\n                (\"case%j:\", keys[i])\r\n                (\"case %i:\", values[keys[i]])\r\n                    (\"m%s=%j\", prop, values[keys[i]])\r\n                    (\"break\");\r\n            } gen\r\n            (\"}\");\r\n        } else gen\r\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\r\n                break;\r\n            case \"uint32\":\r\n            case \"fixed32\": gen\r\n                (\"m%s=d%s>>>0\", prop, prop);\r\n                break;\r\n            case \"int32\":\r\n            case \"sint32\":\r\n            case \"sfixed32\": gen\r\n                (\"m%s=d%s|0\", prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(util.Long)\")\r\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\r\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\r\n                    (\"m%s=d%s\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\r\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\r\n                (\"else if(d%s.length)\", prop)\r\n                    (\"m%s=d%s\", prop, prop);\r\n                break;\r\n            case \"string\": gen\r\n                (\"m%s=String(d%s)\", prop, prop);\r\n                break;\r\n            case \"bool\": gen\r\n                (\"m%s=Boolean(d%s)\", prop, prop);\r\n                break;\r\n            /* default: gen\r\n                (\"m%s=d%s\", prop, prop);\r\n                break; */\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a plain object to runtime message converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.fromObject = function fromObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray;\r\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\r\n    (\"if(d instanceof this.ctor)\")\r\n        (\"return d\");\r\n    if (!fields.length) return gen\r\n    (\"return new this.ctor\");\r\n    gen\r\n    (\"var m=new this.ctor\");\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field  = fields[i].resolve(),\r\n            prop   = util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n        (\"m%s={}\", prop)\r\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(!Array.isArray(d%s))\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\r\n        (\"m%s=[]\", prop)\r\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Non-repeated fields\r\n        } else {\r\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\r\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\r\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\r\n            if (!(field.resolvedType instanceof Enum)) gen\r\n    (\"}\");\r\n        }\r\n    } return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\r\n/**\r\n * Generates a partial value toObject converter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) gen\r\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\r\n        else gen\r\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\r\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\r\n            (\"else\") // Long-like\r\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\r\n                break;\r\n            case \"bytes\": gen\r\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\r\n                break;\r\n            default: gen\r\n            (\"d%s=m%s\", prop, prop);\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a runtime message to plain object converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.toObject = function toObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n    if (!fields.length)\r\n        return util.codegen()(\"return {}\");\r\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\r\n    (\"if(!o)\")\r\n        (\"o={}\")\r\n    (\"var d={}\");\r\n\r\n    var repeatedFields = [],\r\n        mapFields = [],\r\n        normalFields = [],\r\n        i = 0;\r\n    for (; i < fields.length; ++i)\r\n        if (!fields[i].partOf)\r\n            ( fields[i].resolve().repeated ? repeatedFields\r\n            : fields[i].map ? mapFields\r\n            : normalFields).push(fields[i]);\r\n\r\n    if (repeatedFields.length) { gen\r\n    (\"if(o.arrays||o.defaults){\");\r\n        for (i = 0; i < repeatedFields.length; ++i) gen\r\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (mapFields.length) { gen\r\n    (\"if(o.objects||o.defaults){\");\r\n        for (i = 0; i < mapFields.length; ++i) gen\r\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (normalFields.length) { gen\r\n    (\"if(o.defaults){\");\r\n        for (i = 0; i < normalFields.length; ++i) {\r\n            var field = normalFields[i],\r\n                prop  = util.safeProp(field.name);\r\n            if (field.resolvedType instanceof Enum) gen\r\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\r\n            else if (field.long) gen\r\n        (\"if(util.Long){\")\r\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\r\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\r\n        (\"}else\")\r\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\r\n            else if (field.bytes) {\r\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\r\n                gen\r\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\r\n        (\"else{\")\r\n            (\"d%s=%s\", prop, arrayDefault)\r\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\r\n        (\"}\");\r\n            } else gen\r\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\r\n        } gen\r\n    (\"}\");\r\n    }\r\n    var hasKs2 = false;\r\n    for (i = 0; i < fields.length; ++i) {\r\n        var field = fields[i],\r\n            index = mtype._fieldsArray.indexOf(field),\r\n            prop  = util.safeProp(field.name);\r\n        if (field.map) {\r\n            if (!hasKs2) { hasKs2 = true; gen\r\n    (\"var ks2\");\r\n            } gen\r\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\r\n        (\"d%s={}\", prop)\r\n        (\"for(var j=0;j<ks2.length;++j){\");\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\r\n        (\"}\");\r\n        } else if (field.repeated) { gen\r\n    (\"if(m%s&&m%s.length){\", prop, prop)\r\n        (\"d%s=[]\", prop)\r\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\r\n        (\"}\");\r\n        } else { gen\r\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\r\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\r\n        if (field.partOf) gen\r\n        (\"if(o.oneofs)\")\r\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\r\n        }\r\n        gen\r\n    (\"}\");\r\n    }\r\n    return gen\r\n    (\"return d\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/converter.js","\"use strict\";\r\n\r\n/**\r\n * Wrappers for common types.\r\n * @type {Object.<string,IWrapper>}\r\n * @const\r\n */\r\nvar wrappers = exports;\r\n\r\nvar Message = require(\"./message\");\r\n\r\n/**\r\n * From object converter part of an {@link IWrapper}.\r\n * @typedef WrapperFromObjectConverter\r\n * @type {function}\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {Message<{}>} Message instance\r\n * @this Type\r\n */\r\n\r\n/**\r\n * To object converter part of an {@link IWrapper}.\r\n * @typedef WrapperToObjectConverter\r\n * @type {function}\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @this Type\r\n */\r\n\r\n/**\r\n * Common type wrapper part of {@link wrappers}.\r\n * @interface IWrapper\r\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\r\n * @property {WrapperToObjectConverter} [toObject] To object converter\r\n */\r\n\r\n// Custom wrapper for Any\r\nwrappers[\".google.protobuf.Any\"] = {\r\n\r\n    fromObject: function(object) {\r\n\r\n        // unwrap value type if mapped\r\n        if (object && object[\"@type\"]) {\r\n            var type = this.lookup(object[\"@type\"]);\r\n            /* istanbul ignore else */\r\n            if (type) {\r\n                // type_url does not accept leading \".\"\r\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\r\n                    object[\"@type\"].substr(1) : object[\"@type\"];\r\n                // type_url prefix is optional, but path seperator is required\r\n                return this.create({\r\n                    type_url: \"/\" + type_url,\r\n                    value: type.encode(type.fromObject(object)).finish()\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.fromObject(object);\r\n    },\r\n\r\n    toObject: function(message, options) {\r\n\r\n        // decode value if requested and unmapped\r\n        if (options && options.json && message.type_url && message.value) {\r\n            // Only use fully qualified type name after the last '/'\r\n            var name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type)\r\n                message = type.decode(message.value);\r\n        }\r\n\r\n        // wrap value if unmapped\r\n        if (!(message instanceof this.ctor) && message instanceof Message) {\r\n            var object = message.$type.toObject(message, options);\r\n            object[\"@type\"] = message.$type.fullName;\r\n            return object;\r\n        }\r\n\r\n        return this.toObject(message, options);\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/wrappers.js","\"use strict\";\r\nmodule.exports = Root;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\r\n\r\nvar Field   = require(\"./field\"),\r\n    Enum    = require(\"./enum\"),\r\n    OneOf   = require(\"./oneof\"),\r\n    util    = require(\"./util\");\r\n\r\nvar Type,   // cyclic\r\n    parse,  // might be excluded\r\n    common; // \"\r\n\r\n/**\r\n * Constructs a new root namespace instance.\r\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {Object.<string,*>} [options] Top level options\r\n */\r\nfunction Root(options) {\r\n    Namespace.call(this, \"\", options);\r\n\r\n    /**\r\n     * Deferred extension fields.\r\n     * @type {Field[]}\r\n     */\r\n    this.deferred = [];\r\n\r\n    /**\r\n     * Resolved file names of loaded files.\r\n     * @type {string[]}\r\n     */\r\n    this.files = [];\r\n}\r\n\r\n/**\r\n * Loads a namespace descriptor into a root namespace.\r\n * @param {INamespace} json Nameespace descriptor\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\r\n * @returns {Root} Root namespace\r\n */\r\nRoot.fromJSON = function fromJSON(json, root) {\r\n    if (!root)\r\n        root = new Root();\r\n    if (json.options)\r\n        root.setOptions(json.options);\r\n    return root.addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Resolves the path of an imported file, relative to the importing origin.\r\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\r\n * @function\r\n * @param {string} origin The file name of the importing file\r\n * @param {string} target The file name being imported\r\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\r\n */\r\nRoot.prototype.resolvePath = util.path.resolve;\r\n\r\n// A symbol-like function to safely signal synchronous loading\r\n/* istanbul ignore next */\r\nfunction SYNC() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} options Parse options\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.load = function load(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = undefined;\r\n    }\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(load, self, filename, options);\r\n\r\n    var sync = callback === SYNC; // undocumented\r\n\r\n    // Finishes loading by calling the callback (exactly once)\r\n    function finish(err, root) {\r\n        /* istanbul ignore if */\r\n        if (!callback)\r\n            return;\r\n        var cb = callback;\r\n        callback = null;\r\n        if (sync)\r\n            throw err;\r\n        cb(err, root);\r\n    }\r\n\r\n    // Processes a single file\r\n    function process(filename, source) {\r\n        try {\r\n            if (util.isString(source) && source.charAt(0) === \"{\")\r\n                source = JSON.parse(source);\r\n            if (!util.isString(source))\r\n                self.setOptions(source.options).addJSON(source.nested);\r\n            else {\r\n                parse.filename = filename;\r\n                var parsed = parse(source, self, options),\r\n                    resolved,\r\n                    i = 0;\r\n                if (parsed.imports)\r\n                    for (; i < parsed.imports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.imports[i]))\r\n                            fetch(resolved);\r\n                if (parsed.weakImports)\r\n                    for (i = 0; i < parsed.weakImports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.weakImports[i]))\r\n                            fetch(resolved, true);\r\n            }\r\n        } catch (err) {\r\n            finish(err);\r\n        }\r\n        if (!sync && !queued)\r\n            finish(null, self); // only once anyway\r\n    }\r\n\r\n    // Fetches a single file\r\n    function fetch(filename, weak) {\r\n\r\n        // Strip path if this file references a bundled definition\r\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\r\n        if (idx > -1) {\r\n            var altname = filename.substring(idx);\r\n            if (altname in common)\r\n                filename = altname;\r\n        }\r\n\r\n        // Skip if already loaded / attempted\r\n        if (self.files.indexOf(filename) > -1)\r\n            return;\r\n        self.files.push(filename);\r\n\r\n        // Shortcut bundled definitions\r\n        if (filename in common) {\r\n            if (sync)\r\n                process(filename, common[filename]);\r\n            else {\r\n                ++queued;\r\n                setTimeout(function() {\r\n                    --queued;\r\n                    process(filename, common[filename]);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Otherwise fetch from disk or network\r\n        if (sync) {\r\n            var source;\r\n            try {\r\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\r\n            } catch (err) {\r\n                if (!weak)\r\n                    finish(err);\r\n                return;\r\n            }\r\n            process(filename, source);\r\n        } else {\r\n            ++queued;\r\n            util.fetch(filename, function(err, source) {\r\n                --queued;\r\n                /* istanbul ignore if */\r\n                if (!callback)\r\n                    return; // terminated meanwhile\r\n                if (err) {\r\n                    /* istanbul ignore else */\r\n                    if (!weak)\r\n                        finish(err);\r\n                    else if (!queued) // can't be covered reliably\r\n                        finish(null, self);\r\n                    return;\r\n                }\r\n                process(filename, source);\r\n            });\r\n        }\r\n    }\r\n    var queued = 0;\r\n\r\n    // Assembling the root namespace doesn't require working type\r\n    // references anymore, so we can load everything in parallel\r\n    if (util.isString(filename))\r\n        filename = [ filename ];\r\n    for (var i = 0, resolved; i < filename.length; ++i)\r\n        if (resolved = self.resolvePath(\"\", filename[i]))\r\n            fetch(resolved);\r\n\r\n    if (sync)\r\n        return self;\r\n    if (!queued)\r\n        finish(null, self);\r\n    return undefined;\r\n};\r\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @variation 3\r\n */\r\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\r\n * @function Root#loadSync\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n */\r\nRoot.prototype.loadSync = function loadSync(filename, options) {\r\n    if (!util.isNode)\r\n        throw Error(\"not supported\");\r\n    return this.load(filename, options, SYNC);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nRoot.prototype.resolveAll = function resolveAll() {\r\n    if (this.deferred.length)\r\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\r\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\r\n        }).join(\", \"));\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n// only uppercased (and thus conflict-free) children are exposed, see below\r\nvar exposeRe = /^[A-Z]/;\r\n\r\n/**\r\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\r\n * @param {Root} root Root instance\r\n * @param {Field} field Declaring extension field witin the declaring type\r\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\r\n * @inner\r\n * @ignore\r\n */\r\nfunction tryHandleExtension(root, field) {\r\n    var extendedType = field.parent.lookup(field.extend);\r\n    if (extendedType) {\r\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\r\n        sisterField.declaringField = field;\r\n        field.extensionField = sisterField;\r\n        extendedType.add(sisterField);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Called when any object is added to this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object added\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleAdd = function _handleAdd(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\r\n            if (!tryHandleExtension(this, object))\r\n                this.deferred.push(object);\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\r\n\r\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\r\n\r\n        if (object instanceof Type) // Try to handle any deferred extensions\r\n            for (var i = 0; i < this.deferred.length;)\r\n                if (tryHandleExtension(this, this.deferred[i]))\r\n                    this.deferred.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\r\n            this._handleAdd(object._nestedArray[j]);\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object; // expose namespace as property of its parent\r\n    }\r\n\r\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\r\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\r\n    // a static module with reflection-based solutions where the condition is met.\r\n};\r\n\r\n/**\r\n * Called when any object is removed from this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object removed\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleRemove = function _handleRemove(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field */ object.extend !== undefined) {\r\n            if (/* already handled */ object.extensionField) { // remove its sister field\r\n                object.extensionField.parent.remove(object.extensionField);\r\n                object.extensionField = null;\r\n            } else { // cancel the extension\r\n                var index = this.deferred.indexOf(object);\r\n                /* istanbul ignore else */\r\n                if (index > -1)\r\n                    this.deferred.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose enum values\r\n\r\n    } else if (object instanceof Namespace) {\r\n\r\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\r\n            this._handleRemove(object._nestedArray[i]);\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose namespaces\r\n\r\n    }\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nRoot._configure = function(Type_, parse_, common_) {\r\n    Type   = Type_;\r\n    parse  = parse_;\r\n    common = common_;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/root.js","\"use strict\";\r\nmodule.exports = tokenize;\r\n\r\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\r\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\r\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\r\n\r\nvar setCommentRe = /^ *[*/]+ */,\r\n    setCommentAltRe = /^\\s*\\*?\\/*/,\r\n    setCommentSplitRe = /\\n/g,\r\n    whitespaceRe = /\\s/,\r\n    unescapeRe = /\\\\(.?)/g;\r\n\r\nvar unescapeMap = {\r\n    \"0\": \"\\0\",\r\n    \"r\": \"\\r\",\r\n    \"n\": \"\\n\",\r\n    \"t\": \"\\t\"\r\n};\r\n\r\n/**\r\n * Unescapes a string.\r\n * @param {string} str String to unescape\r\n * @returns {string} Unescaped string\r\n * @property {Object.<string,string>} map Special characters map\r\n * @memberof tokenize\r\n */\r\nfunction unescape(str) {\r\n    return str.replace(unescapeRe, function($0, $1) {\r\n        switch ($1) {\r\n            case \"\\\\\":\r\n            case \"\":\r\n                return $1;\r\n            default:\r\n                return unescapeMap[$1] || \"\";\r\n        }\r\n    });\r\n}\r\n\r\ntokenize.unescape = unescape;\r\n\r\n/**\r\n * Gets the next token and advances.\r\n * @typedef TokenizerHandleNext\r\n * @type {function}\r\n * @returns {string|null} Next token or `null` on eof\r\n */\r\n\r\n/**\r\n * Peeks for the next token.\r\n * @typedef TokenizerHandlePeek\r\n * @type {function}\r\n * @returns {string|null} Next token or `null` on eof\r\n */\r\n\r\n/**\r\n * Pushes a token back to the stack.\r\n * @typedef TokenizerHandlePush\r\n * @type {function}\r\n * @param {string} token Token\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Skips the next token.\r\n * @typedef TokenizerHandleSkip\r\n * @type {function}\r\n * @param {string} expected Expected token\r\n * @param {boolean} [optional=false] If optional\r\n * @returns {boolean} Whether the token matched\r\n * @throws {Error} If the token didn't match and is not optional\r\n */\r\n\r\n/**\r\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\r\n * @typedef TokenizerHandleCmnt\r\n * @type {function}\r\n * @param {number} [line] Line number\r\n * @returns {string|null} Comment text or `null` if none\r\n */\r\n\r\n/**\r\n * Handle object returned from {@link tokenize}.\r\n * @interface ITokenizerHandle\r\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\r\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\r\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\r\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\r\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\r\n * @property {number} line Current line number\r\n */\r\n\r\n/**\r\n * Tokenizes the given .proto source and returns an object with useful utility functions.\r\n * @param {string} source Source contents\r\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\r\n * @returns {ITokenizerHandle} Tokenizer handle\r\n */\r\nfunction tokenize(source, alternateCommentMode) {\r\n    /* eslint-disable callback-return */\r\n    source = source.toString();\r\n\r\n    var offset = 0,\r\n        length = source.length,\r\n        line = 1,\r\n        commentType = null,\r\n        commentText = null,\r\n        commentLine = 0,\r\n        commentLineEmpty = false;\r\n\r\n    var stack = [];\r\n\r\n    var stringDelim = null;\r\n\r\n    /* istanbul ignore next */\r\n    /**\r\n     * Creates an error for illegal syntax.\r\n     * @param {string} subject Subject\r\n     * @returns {Error} Error created\r\n     * @inner\r\n     */\r\n    function illegal(subject) {\r\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\r\n    }\r\n\r\n    /**\r\n     * Reads a string till its end.\r\n     * @returns {string} String read\r\n     * @inner\r\n     */\r\n    function readString() {\r\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\r\n        re.lastIndex = offset - 1;\r\n        var match = re.exec(source);\r\n        if (!match)\r\n            throw illegal(\"string\");\r\n        offset = re.lastIndex;\r\n        push(stringDelim);\r\n        stringDelim = null;\r\n        return unescape(match[1]);\r\n    }\r\n\r\n    /**\r\n     * Gets the character at `pos` within the source.\r\n     * @param {number} pos Position\r\n     * @returns {string} Character\r\n     * @inner\r\n     */\r\n    function charAt(pos) {\r\n        return source.charAt(pos);\r\n    }\r\n\r\n    /**\r\n     * Sets the current comment text.\r\n     * @param {number} start Start offset\r\n     * @param {number} end End offset\r\n     * @returns {undefined}\r\n     * @inner\r\n     */\r\n    function setComment(start, end) {\r\n        commentType = source.charAt(start++);\r\n        commentLine = line;\r\n        commentLineEmpty = false;\r\n        var lookback;\r\n        if (alternateCommentMode) {\r\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\r\n        } else {\r\n            lookback = 3;  // \"///\" or \"/**\"\r\n        }\r\n        var commentOffset = start - lookback,\r\n            c;\r\n        do {\r\n            if (--commentOffset < 0 ||\r\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\r\n                commentLineEmpty = true;\r\n                break;\r\n            }\r\n        } while (c === \" \" || c === \"\\t\");\r\n        var lines = source\r\n            .substring(start, end)\r\n            .split(setCommentSplitRe);\r\n        for (var i = 0; i < lines.length; ++i)\r\n            lines[i] = lines[i]\r\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\r\n                .trim();\r\n        commentText = lines\r\n            .join(\"\\n\")\r\n            .trim();\r\n    }\r\n\r\n    function isDoubleSlashCommentLine(startOffset) {\r\n        var endOffset = findEndOfLine(startOffset);\r\n\r\n        // see if remaining line matches comment pattern\r\n        var lineText = source.substring(startOffset, endOffset);\r\n        // look for 1 or 2 slashes since startOffset would already point past\r\n        // the first slash that started the comment.\r\n        var isComment = /^\\s*\\/{1,2}/.test(lineText);\r\n        return isComment;\r\n    }\r\n\r\n    function findEndOfLine(cursor) {\r\n        // find end of cursor's line\r\n        var endOffset = cursor;\r\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\r\n            endOffset++;\r\n        }\r\n        return endOffset;\r\n    }\r\n\r\n    /**\r\n     * Obtains the next token.\r\n     * @returns {string|null} Next token or `null` on eof\r\n     * @inner\r\n     */\r\n    function next() {\r\n        if (stack.length > 0)\r\n            return stack.shift();\r\n        if (stringDelim)\r\n            return readString();\r\n        var repeat,\r\n            prev,\r\n            curr,\r\n            start,\r\n            isDoc;\r\n        do {\r\n            if (offset === length)\r\n                return null;\r\n            repeat = false;\r\n            while (whitespaceRe.test(curr = charAt(offset))) {\r\n                if (curr === \"\\n\")\r\n                    ++line;\r\n                if (++offset === length)\r\n                    return null;\r\n            }\r\n\r\n            if (charAt(offset) === \"/\") {\r\n                if (++offset === length) {\r\n                    throw illegal(\"comment\");\r\n                }\r\n                if (charAt(offset) === \"/\") { // Line\r\n                    if (!alternateCommentMode) {\r\n                        // check for triple-slash comment\r\n                        isDoc = charAt(start = offset + 1) === \"/\";\r\n\r\n                        while (charAt(++offset) !== \"\\n\") {\r\n                            if (offset === length) {\r\n                                return null;\r\n                            }\r\n                        }\r\n                        ++offset;\r\n                        if (isDoc) {\r\n                            setComment(start, offset - 1);\r\n                        }\r\n                        ++line;\r\n                        repeat = true;\r\n                    } else {\r\n                        // check for double-slash comments, consolidating consecutive lines\r\n                        start = offset;\r\n                        isDoc = false;\r\n                        if (isDoubleSlashCommentLine(offset)) {\r\n                            isDoc = true;\r\n                            do {\r\n                                offset = findEndOfLine(offset);\r\n                                if (offset === length) {\r\n                                    break;\r\n                                }\r\n                                offset++;\r\n                            } while (isDoubleSlashCommentLine(offset));\r\n                        } else {\r\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\r\n                        }\r\n                        if (isDoc) {\r\n                            setComment(start, offset);\r\n                        }\r\n                        line++;\r\n                        repeat = true;\r\n                    }\r\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\r\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\r\n                    start = offset + 1;\r\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\r\n                    do {\r\n                        if (curr === \"\\n\") {\r\n                            ++line;\r\n                        }\r\n                        if (++offset === length) {\r\n                            throw illegal(\"comment\");\r\n                        }\r\n                        prev = curr;\r\n                        curr = charAt(offset);\r\n                    } while (prev !== \"*\" || curr !== \"/\");\r\n                    ++offset;\r\n                    if (isDoc) {\r\n                        setComment(start, offset - 2);\r\n                    }\r\n                    repeat = true;\r\n                } else {\r\n                    return \"/\";\r\n                }\r\n            }\r\n        } while (repeat);\r\n\r\n        // offset !== length if we got here\r\n\r\n        var end = offset;\r\n        delimRe.lastIndex = 0;\r\n        var delim = delimRe.test(charAt(end++));\r\n        if (!delim)\r\n            while (end < length && !delimRe.test(charAt(end)))\r\n                ++end;\r\n        var token = source.substring(offset, offset = end);\r\n        if (token === \"\\\"\" || token === \"'\")\r\n            stringDelim = token;\r\n        return token;\r\n    }\r\n\r\n    /**\r\n     * Pushes a token back to the stack.\r\n     * @param {string} token Token\r\n     * @returns {undefined}\r\n     * @inner\r\n     */\r\n    function push(token) {\r\n        stack.push(token);\r\n    }\r\n\r\n    /**\r\n     * Peeks for the next token.\r\n     * @returns {string|null} Token or `null` on eof\r\n     * @inner\r\n     */\r\n    function peek() {\r\n        if (!stack.length) {\r\n            var token = next();\r\n            if (token === null)\r\n                return null;\r\n            push(token);\r\n        }\r\n        return stack[0];\r\n    }\r\n\r\n    /**\r\n     * Skips a token.\r\n     * @param {string} expected Expected token\r\n     * @param {boolean} [optional=false] Whether the token is optional\r\n     * @returns {boolean} `true` when skipped, `false` if not\r\n     * @throws {Error} When a required token is not present\r\n     * @inner\r\n     */\r\n    function skip(expected, optional) {\r\n        var actual = peek(),\r\n            equals = actual === expected;\r\n        if (equals) {\r\n            next();\r\n            return true;\r\n        }\r\n        if (!optional)\r\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gets a comment.\r\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\r\n     * @returns {string|null} Comment text\r\n     * @inner\r\n     */\r\n    function cmnt(trailingLine) {\r\n        var ret = null;\r\n        if (trailingLine === undefined) {\r\n            if (commentLine === line - 1 && (alternateCommentMode || commentType === \"*\" || commentLineEmpty)) {\r\n                ret = commentText;\r\n            }\r\n        } else {\r\n            /* istanbul ignore else */\r\n            if (commentLine < trailingLine) {\r\n                peek();\r\n            }\r\n            if (commentLine === trailingLine && !commentLineEmpty && (alternateCommentMode || commentType === \"/\")) {\r\n                ret = commentText;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    return Object.defineProperty({\r\n        next: next,\r\n        peek: peek,\r\n        push: push,\r\n        skip: skip,\r\n        cmnt: cmnt\r\n    }, \"line\", {\r\n        get: function() { return line; }\r\n    });\r\n    /* eslint-enable callback-return */\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/tokenize.js","\"use strict\";\r\nmodule.exports = parse;\r\n\r\nparse.filename = null;\r\nparse.defaults = { keepCase: false };\r\n\r\nvar tokenize  = require(\"./tokenize\"),\r\n    Root      = require(\"./root\"),\r\n    Type      = require(\"./type\"),\r\n    Field     = require(\"./field\"),\r\n    MapField  = require(\"./mapfield\"),\r\n    OneOf     = require(\"./oneof\"),\r\n    Enum      = require(\"./enum\"),\r\n    Service   = require(\"./service\"),\r\n    Method    = require(\"./method\"),\r\n    types     = require(\"./types\"),\r\n    util      = require(\"./util\");\r\n\r\nvar base10Re    = /^[1-9][0-9]*$/,\r\n    base10NegRe = /^-?[1-9][0-9]*$/,\r\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\r\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\r\n    base8Re     = /^0[0-7]+$/,\r\n    base8NegRe  = /^-?0[0-7]+$/,\r\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\r\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\r\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\r\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\r\n\r\n/**\r\n * Result object returned from {@link parse}.\r\n * @interface IParserResult\r\n * @property {string|undefined} package Package name, if declared\r\n * @property {string[]|undefined} imports Imports, if any\r\n * @property {string[]|undefined} weakImports Weak imports, if any\r\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\r\n * @property {Root} root Populated root instance\r\n */\r\n\r\n/**\r\n * Options modifying the behavior of {@link parse}.\r\n * @interface IParseOptions\r\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\r\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\r\n */\r\n\r\n/**\r\n * Options modifying the behavior of JSON serialization.\r\n * @interface IToJSONOptions\r\n * @property {boolean} [keepComments=false] Serializes comments.\r\n */\r\n\r\n/**\r\n * Parses the given .proto source and returns an object with the parsed contents.\r\n * @param {string} source Source contents\r\n * @param {Root} root Root to populate\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {IParserResult} Parser result\r\n * @property {string} filename=null Currently processing file name for error reporting, if known\r\n * @property {IParseOptions} defaults Default {@link IParseOptions}\r\n */\r\nfunction parse(source, root, options) {\r\n    /* eslint-disable callback-return */\r\n    if (!(root instanceof Root)) {\r\n        options = root;\r\n        root = new Root();\r\n    }\r\n    if (!options)\r\n        options = parse.defaults;\r\n\r\n    var tn = tokenize(source, options.alternateCommentMode || false),\r\n        next = tn.next,\r\n        push = tn.push,\r\n        peek = tn.peek,\r\n        skip = tn.skip,\r\n        cmnt = tn.cmnt;\r\n\r\n    var head = true,\r\n        pkg,\r\n        imports,\r\n        weakImports,\r\n        syntax,\r\n        isProto3 = false;\r\n\r\n    var ptr = root;\r\n\r\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\r\n\r\n    /* istanbul ignore next */\r\n    function illegal(token, name, insideTryCatch) {\r\n        var filename = parse.filename;\r\n        if (!insideTryCatch)\r\n            parse.filename = null;\r\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\r\n    }\r\n\r\n    function readString() {\r\n        var values = [],\r\n            token;\r\n        do {\r\n            /* istanbul ignore if */\r\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\r\n                throw illegal(token);\r\n\r\n            values.push(next());\r\n            skip(token);\r\n            token = peek();\r\n        } while (token === \"\\\"\" || token === \"'\");\r\n        return values.join(\"\");\r\n    }\r\n\r\n    function readValue(acceptTypeRef) {\r\n        var token = next();\r\n        switch (token) {\r\n            case \"'\":\r\n            case \"\\\"\":\r\n                push(token);\r\n                return readString();\r\n            case \"true\": case \"TRUE\":\r\n                return true;\r\n            case \"false\": case \"FALSE\":\r\n                return false;\r\n        }\r\n        try {\r\n            return parseNumber(token, /* insideTryCatch */ true);\r\n        } catch (e) {\r\n\r\n            /* istanbul ignore else */\r\n            if (acceptTypeRef && typeRefRe.test(token))\r\n                return token;\r\n\r\n            /* istanbul ignore next */\r\n            throw illegal(token, \"value\");\r\n        }\r\n    }\r\n\r\n    function readRanges(target, acceptStrings) {\r\n        var token, start;\r\n        do {\r\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\r\n                target.push(readString());\r\n            else\r\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\r\n        } while (skip(\",\", true));\r\n        skip(\";\");\r\n    }\r\n\r\n    function parseNumber(token, insideTryCatch) {\r\n        var sign = 1;\r\n        if (token.charAt(0) === \"-\") {\r\n            sign = -1;\r\n            token = token.substring(1);\r\n        }\r\n        switch (token) {\r\n            case \"inf\": case \"INF\": case \"Inf\":\r\n                return sign * Infinity;\r\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\r\n                return NaN;\r\n            case \"0\":\r\n                return 0;\r\n        }\r\n        if (base10Re.test(token))\r\n            return sign * parseInt(token, 10);\r\n        if (base16Re.test(token))\r\n            return sign * parseInt(token, 16);\r\n        if (base8Re.test(token))\r\n            return sign * parseInt(token, 8);\r\n\r\n        /* istanbul ignore else */\r\n        if (numberRe.test(token))\r\n            return sign * parseFloat(token);\r\n\r\n        /* istanbul ignore next */\r\n        throw illegal(token, \"number\", insideTryCatch);\r\n    }\r\n\r\n    function parseId(token, acceptNegative) {\r\n        switch (token) {\r\n            case \"max\": case \"MAX\": case \"Max\":\r\n                return 536870911;\r\n            case \"0\":\r\n                return 0;\r\n        }\r\n\r\n        /* istanbul ignore if */\r\n        if (!acceptNegative && token.charAt(0) === \"-\")\r\n            throw illegal(token, \"id\");\r\n\r\n        if (base10NegRe.test(token))\r\n            return parseInt(token, 10);\r\n        if (base16NegRe.test(token))\r\n            return parseInt(token, 16);\r\n\r\n        /* istanbul ignore else */\r\n        if (base8NegRe.test(token))\r\n            return parseInt(token, 8);\r\n\r\n        /* istanbul ignore next */\r\n        throw illegal(token, \"id\");\r\n    }\r\n\r\n    function parsePackage() {\r\n\r\n        /* istanbul ignore if */\r\n        if (pkg !== undefined)\r\n            throw illegal(\"package\");\r\n\r\n        pkg = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(pkg))\r\n            throw illegal(pkg, \"name\");\r\n\r\n        ptr = ptr.define(pkg);\r\n        skip(\";\");\r\n    }\r\n\r\n    function parseImport() {\r\n        var token = peek();\r\n        var whichImports;\r\n        switch (token) {\r\n            case \"weak\":\r\n                whichImports = weakImports || (weakImports = []);\r\n                next();\r\n                break;\r\n            case \"public\":\r\n                next();\r\n                // eslint-disable-line no-fallthrough\r\n            default:\r\n                whichImports = imports || (imports = []);\r\n                break;\r\n        }\r\n        token = readString();\r\n        skip(\";\");\r\n        whichImports.push(token);\r\n    }\r\n\r\n    function parseSyntax() {\r\n        skip(\"=\");\r\n        syntax = readString();\r\n        isProto3 = syntax === \"proto3\";\r\n\r\n        /* istanbul ignore if */\r\n        if (!isProto3 && syntax !== \"proto2\")\r\n            throw illegal(syntax, \"syntax\");\r\n\r\n        skip(\";\");\r\n    }\r\n\r\n    function parseCommon(parent, token) {\r\n        switch (token) {\r\n\r\n            case \"option\":\r\n                parseOption(parent, token);\r\n                skip(\";\");\r\n                return true;\r\n\r\n            case \"message\":\r\n                parseType(parent, token);\r\n                return true;\r\n\r\n            case \"enum\":\r\n                parseEnum(parent, token);\r\n                return true;\r\n\r\n            case \"service\":\r\n                parseService(parent, token);\r\n                return true;\r\n\r\n            case \"extend\":\r\n                parseExtension(parent, token);\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function ifBlock(obj, fnIf, fnElse) {\r\n        var trailingLine = tn.line;\r\n        if (obj) {\r\n            obj.comment = cmnt(); // try block-type comment\r\n            obj.filename = parse.filename;\r\n        }\r\n        if (skip(\"{\", true)) {\r\n            var token;\r\n            while ((token = next()) !== \"}\")\r\n                fnIf(token);\r\n            skip(\";\", true);\r\n        } else {\r\n            if (fnElse)\r\n                fnElse();\r\n            skip(\";\");\r\n            if (obj && typeof obj.comment !== \"string\")\r\n                obj.comment = cmnt(trailingLine); // try line-type comment if no block\r\n        }\r\n    }\r\n\r\n    function parseType(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"type name\");\r\n\r\n        var type = new Type(token);\r\n        ifBlock(type, function parseType_block(token) {\r\n            if (parseCommon(type, token))\r\n                return;\r\n\r\n            switch (token) {\r\n\r\n                case \"map\":\r\n                    parseMapField(type, token);\r\n                    break;\r\n\r\n                case \"required\":\r\n                case \"optional\":\r\n                case \"repeated\":\r\n                    parseField(type, token);\r\n                    break;\r\n\r\n                case \"oneof\":\r\n                    parseOneOf(type, token);\r\n                    break;\r\n\r\n                case \"extensions\":\r\n                    readRanges(type.extensions || (type.extensions = []));\r\n                    break;\r\n\r\n                case \"reserved\":\r\n                    readRanges(type.reserved || (type.reserved = []), true);\r\n                    break;\r\n\r\n                default:\r\n                    /* istanbul ignore if */\r\n                    if (!isProto3 || !typeRefRe.test(token))\r\n                        throw illegal(token);\r\n\r\n                    push(token);\r\n                    parseField(type, \"optional\");\r\n                    break;\r\n            }\r\n        });\r\n        parent.add(type);\r\n    }\r\n\r\n    function parseField(parent, rule, extend) {\r\n        var type = next();\r\n        if (type === \"group\") {\r\n            parseGroup(parent, rule);\r\n            return;\r\n        }\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(type))\r\n            throw illegal(type, \"type\");\r\n\r\n        var name = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(name))\r\n            throw illegal(name, \"name\");\r\n\r\n        name = applyCase(name);\r\n        skip(\"=\");\r\n\r\n        var field = new Field(name, parseId(next()), type, rule, extend);\r\n        ifBlock(field, function parseField_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(field, token);\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        }, function parseField_line() {\r\n            parseInlineOptions(field);\r\n        });\r\n        parent.add(field);\r\n\r\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\r\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\r\n        // all known packable types and anything that could be an enum (= is not a basic type).\r\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\r\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\r\n    }\r\n\r\n    function parseGroup(parent, rule) {\r\n        var name = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(name))\r\n            throw illegal(name, \"name\");\r\n\r\n        var fieldName = util.lcFirst(name);\r\n        if (name === fieldName)\r\n            name = util.ucFirst(name);\r\n        skip(\"=\");\r\n        var id = parseId(next());\r\n        var type = new Type(name);\r\n        type.group = true;\r\n        var field = new Field(fieldName, id, name, rule);\r\n        field.filename = parse.filename;\r\n        ifBlock(type, function parseGroup_block(token) {\r\n            switch (token) {\r\n\r\n                case \"option\":\r\n                    parseOption(type, token);\r\n                    skip(\";\");\r\n                    break;\r\n\r\n                case \"required\":\r\n                case \"optional\":\r\n                case \"repeated\":\r\n                    parseField(type, token);\r\n                    break;\r\n\r\n                /* istanbul ignore next */\r\n                default:\r\n                    throw illegal(token); // there are no groups with proto3 semantics\r\n            }\r\n        });\r\n        parent.add(type)\r\n              .add(field);\r\n    }\r\n\r\n    function parseMapField(parent) {\r\n        skip(\"<\");\r\n        var keyType = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (types.mapKey[keyType] === undefined)\r\n            throw illegal(keyType, \"type\");\r\n\r\n        skip(\",\");\r\n        var valueType = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(valueType))\r\n            throw illegal(valueType, \"type\");\r\n\r\n        skip(\">\");\r\n        var name = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(name))\r\n            throw illegal(name, \"name\");\r\n\r\n        skip(\"=\");\r\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\r\n        ifBlock(field, function parseMapField_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(field, token);\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        }, function parseMapField_line() {\r\n            parseInlineOptions(field);\r\n        });\r\n        parent.add(field);\r\n    }\r\n\r\n    function parseOneOf(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var oneof = new OneOf(applyCase(token));\r\n        ifBlock(oneof, function parseOneOf_block(token) {\r\n            if (token === \"option\") {\r\n                parseOption(oneof, token);\r\n                skip(\";\");\r\n            } else {\r\n                push(token);\r\n                parseField(oneof, \"optional\");\r\n            }\r\n        });\r\n        parent.add(oneof);\r\n    }\r\n\r\n    function parseEnum(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var enm = new Enum(token);\r\n        ifBlock(enm, function parseEnum_block(token) {\r\n          switch(token) {\r\n            case \"option\":\r\n              parseOption(enm, token);\r\n              skip(\";\");\r\n              break;\r\n\r\n            case \"reserved\":\r\n              readRanges(enm.reserved || (enm.reserved = []), true);\r\n              break;\r\n\r\n            default:\r\n              parseEnumValue(enm, token);\r\n          }\r\n        });\r\n        parent.add(enm);\r\n    }\r\n\r\n    function parseEnumValue(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token))\r\n            throw illegal(token, \"name\");\r\n\r\n        skip(\"=\");\r\n        var value = parseId(next(), true),\r\n            dummy = {};\r\n        ifBlock(dummy, function parseEnumValue_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(dummy, token); // skip\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        }, function parseEnumValue_line() {\r\n            parseInlineOptions(dummy); // skip\r\n        });\r\n        parent.add(token, value, dummy.comment);\r\n    }\r\n\r\n    function parseOption(parent, token) {\r\n        var isCustom = skip(\"(\", true);\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var name = token;\r\n        if (isCustom) {\r\n            skip(\")\");\r\n            name = \"(\" + name + \")\";\r\n            token = peek();\r\n            if (fqTypeRefRe.test(token)) {\r\n                name += token;\r\n                next();\r\n            }\r\n        }\r\n        skip(\"=\");\r\n        parseOptionValue(parent, name);\r\n    }\r\n\r\n    function parseOptionValue(parent, name) {\r\n        if (skip(\"{\", true)) { // { a: \"foo\" b { c: \"bar\" } }\r\n            do {\r\n                /* istanbul ignore if */\r\n                if (!nameRe.test(token = next()))\r\n                    throw illegal(token, \"name\");\r\n\r\n                if (peek() === \"{\")\r\n                    parseOptionValue(parent, name + \".\" + token);\r\n                else {\r\n                    skip(\":\");\r\n                    if (peek() === \"{\")\r\n                        parseOptionValue(parent, name + \".\" + token);\r\n                    else\r\n                        setOption(parent, name + \".\" + token, readValue(true));\r\n                }\r\n                skip(\",\", true);\r\n            } while (!skip(\"}\", true));\r\n        } else\r\n            setOption(parent, name, readValue(true));\r\n        // Does not enforce a delimiter to be universal\r\n    }\r\n\r\n    function setOption(parent, name, value) {\r\n        if (parent.setOption)\r\n            parent.setOption(name, value);\r\n    }\r\n\r\n    function parseInlineOptions(parent) {\r\n        if (skip(\"[\", true)) {\r\n            do {\r\n                parseOption(parent, \"option\");\r\n            } while (skip(\",\", true));\r\n            skip(\"]\");\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function parseService(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"service name\");\r\n\r\n        var service = new Service(token);\r\n        ifBlock(service, function parseService_block(token) {\r\n            if (parseCommon(service, token))\r\n                return;\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"rpc\")\r\n                parseMethod(service, token);\r\n            else\r\n                throw illegal(token);\r\n        });\r\n        parent.add(service);\r\n    }\r\n\r\n    function parseMethod(parent, token) {\r\n        var type = token;\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var name = token,\r\n            requestType, requestStream,\r\n            responseType, responseStream;\r\n\r\n        skip(\"(\");\r\n        if (skip(\"stream\", true))\r\n            requestStream = true;\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token);\r\n\r\n        requestType = token;\r\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\r\n        if (skip(\"stream\", true))\r\n            responseStream = true;\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token);\r\n\r\n        responseType = token;\r\n        skip(\")\");\r\n\r\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\r\n        ifBlock(method, function parseMethod_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(method, token);\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        });\r\n        parent.add(method);\r\n    }\r\n\r\n    function parseExtension(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token, \"reference\");\r\n\r\n        var reference = token;\r\n        ifBlock(null, function parseExtension_block(token) {\r\n            switch (token) {\r\n\r\n                case \"required\":\r\n                case \"repeated\":\r\n                case \"optional\":\r\n                    parseField(parent, token, reference);\r\n                    break;\r\n\r\n                default:\r\n                    /* istanbul ignore if */\r\n                    if (!isProto3 || !typeRefRe.test(token))\r\n                        throw illegal(token);\r\n                    push(token);\r\n                    parseField(parent, \"optional\", reference);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    var token;\r\n    while ((token = next()) !== null) {\r\n        switch (token) {\r\n\r\n            case \"package\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parsePackage();\r\n                break;\r\n\r\n            case \"import\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parseImport();\r\n                break;\r\n\r\n            case \"syntax\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parseSyntax();\r\n                break;\r\n\r\n            case \"option\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parseOption(ptr, token);\r\n                skip(\";\");\r\n                break;\r\n\r\n            default:\r\n\r\n                /* istanbul ignore else */\r\n                if (parseCommon(ptr, token)) {\r\n                    head = false;\r\n                    continue;\r\n                }\r\n\r\n                /* istanbul ignore next */\r\n                throw illegal(token);\r\n        }\r\n    }\r\n\r\n    parse.filename = null;\r\n    return {\r\n        \"package\"     : pkg,\r\n        \"imports\"     : imports,\r\n         weakImports  : weakImports,\r\n         syntax       : syntax,\r\n         root         : root\r\n    };\r\n}\r\n\r\n/**\r\n * Parses the given .proto source and returns an object with the parsed contents.\r\n * @name parse\r\n * @function\r\n * @param {string} source Source contents\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {IParserResult} Parser result\r\n * @property {string} filename=null Currently processing file name for error reporting, if known\r\n * @property {IParseOptions} defaults Default {@link IParseOptions}\r\n * @variation 2\r\n */\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/parse.js","\"use strict\";\r\nmodule.exports = common;\r\n\r\nvar commonRe = /\\/|\\./;\r\n\r\n/**\r\n * Provides common type definitions.\r\n * Can also be used to provide additional google types or your own custom types.\r\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\r\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\r\n * @returns {undefined}\r\n * @property {INamespace} google/protobuf/any.proto Any\r\n * @property {INamespace} google/protobuf/duration.proto Duration\r\n * @property {INamespace} google/protobuf/empty.proto Empty\r\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\r\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\r\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\r\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\r\n * @example\r\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\r\n * protobuf.common(\"descriptor\", descriptorJson);\r\n *\r\n * // manually provides a custom definition (uses my.foo namespace)\r\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\r\n */\r\nfunction common(name, json) {\r\n    if (!commonRe.test(name)) {\r\n        name = \"google/protobuf/\" + name + \".proto\";\r\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\r\n    }\r\n    common[name] = json;\r\n}\r\n\r\n// Not provided because of limited use (feel free to discuss or to provide yourself):\r\n//\r\n// google/protobuf/descriptor.proto\r\n// google/protobuf/source_context.proto\r\n// google/protobuf/type.proto\r\n//\r\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\r\n// the repository or package within the google/protobuf directory.\r\n\r\ncommon(\"any\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Any message.\r\n     * @interface IAny\r\n     * @type {Object}\r\n     * @property {string} [typeUrl]\r\n     * @property {Uint8Array} [bytes]\r\n     * @memberof common\r\n     */\r\n    Any: {\r\n        fields: {\r\n            type_url: {\r\n                type: \"string\",\r\n                id: 1\r\n            },\r\n            value: {\r\n                type: \"bytes\",\r\n                id: 2\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nvar timeType;\r\n\r\ncommon(\"duration\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Duration message.\r\n     * @interface IDuration\r\n     * @type {Object}\r\n     * @property {number|Long} [seconds]\r\n     * @property {number} [nanos]\r\n     * @memberof common\r\n     */\r\n    Duration: timeType = {\r\n        fields: {\r\n            seconds: {\r\n                type: \"int64\",\r\n                id: 1\r\n            },\r\n            nanos: {\r\n                type: \"int32\",\r\n                id: 2\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\ncommon(\"timestamp\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Timestamp message.\r\n     * @interface ITimestamp\r\n     * @type {Object}\r\n     * @property {number|Long} [seconds]\r\n     * @property {number} [nanos]\r\n     * @memberof common\r\n     */\r\n    Timestamp: timeType\r\n});\r\n\r\ncommon(\"empty\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Empty message.\r\n     * @interface IEmpty\r\n     * @memberof common\r\n     */\r\n    Empty: {\r\n        fields: {}\r\n    }\r\n});\r\n\r\ncommon(\"struct\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Struct message.\r\n     * @interface IStruct\r\n     * @type {Object}\r\n     * @property {Object.<string,IValue>} [fields]\r\n     * @memberof common\r\n     */\r\n    Struct: {\r\n        fields: {\r\n            fields: {\r\n                keyType: \"string\",\r\n                type: \"Value\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Value message.\r\n     * @interface IValue\r\n     * @type {Object}\r\n     * @property {string} [kind]\r\n     * @property {0} [nullValue]\r\n     * @property {number} [numberValue]\r\n     * @property {string} [stringValue]\r\n     * @property {boolean} [boolValue]\r\n     * @property {IStruct} [structValue]\r\n     * @property {IListValue} [listValue]\r\n     * @memberof common\r\n     */\r\n    Value: {\r\n        oneofs: {\r\n            kind: {\r\n                oneof: [\r\n                    \"nullValue\",\r\n                    \"numberValue\",\r\n                    \"stringValue\",\r\n                    \"boolValue\",\r\n                    \"structValue\",\r\n                    \"listValue\"\r\n                ]\r\n            }\r\n        },\r\n        fields: {\r\n            nullValue: {\r\n                type: \"NullValue\",\r\n                id: 1\r\n            },\r\n            numberValue: {\r\n                type: \"double\",\r\n                id: 2\r\n            },\r\n            stringValue: {\r\n                type: \"string\",\r\n                id: 3\r\n            },\r\n            boolValue: {\r\n                type: \"bool\",\r\n                id: 4\r\n            },\r\n            structValue: {\r\n                type: \"Struct\",\r\n                id: 5\r\n            },\r\n            listValue: {\r\n                type: \"ListValue\",\r\n                id: 6\r\n            }\r\n        }\r\n    },\r\n\r\n    NullValue: {\r\n        values: {\r\n            NULL_VALUE: 0\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.ListValue message.\r\n     * @interface IListValue\r\n     * @type {Object}\r\n     * @property {Array.<IValue>} [values]\r\n     * @memberof common\r\n     */\r\n    ListValue: {\r\n        fields: {\r\n            values: {\r\n                rule: \"repeated\",\r\n                type: \"Value\",\r\n                id: 1\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\ncommon(\"wrappers\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.DoubleValue message.\r\n     * @interface IDoubleValue\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    DoubleValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"double\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.FloatValue message.\r\n     * @interface IFloatValue\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    FloatValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"float\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Int64Value message.\r\n     * @interface IInt64Value\r\n     * @type {Object}\r\n     * @property {number|Long} [value]\r\n     * @memberof common\r\n     */\r\n    Int64Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"int64\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.UInt64Value message.\r\n     * @interface IUInt64Value\r\n     * @type {Object}\r\n     * @property {number|Long} [value]\r\n     * @memberof common\r\n     */\r\n    UInt64Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"uint64\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Int32Value message.\r\n     * @interface IInt32Value\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    Int32Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"int32\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.UInt32Value message.\r\n     * @interface IUInt32Value\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    UInt32Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"uint32\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.BoolValue message.\r\n     * @interface IBoolValue\r\n     * @type {Object}\r\n     * @property {boolean} [value]\r\n     * @memberof common\r\n     */\r\n    BoolValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"bool\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.StringValue message.\r\n     * @interface IStringValue\r\n     * @type {Object}\r\n     * @property {string} [value]\r\n     * @memberof common\r\n     */\r\n    StringValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"string\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.BytesValue message.\r\n     * @interface IBytesValue\r\n     * @type {Object}\r\n     * @property {Uint8Array} [value]\r\n     * @memberof common\r\n     */\r\n    BytesValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"bytes\",\r\n                id: 1\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\ncommon(\"field_mask\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.FieldMask message.\r\n     * @interface IDoubleValue\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    FieldMask: {\r\n        fields: {\r\n            paths: {\r\n                rule: \"repeated\",\r\n                type: \"string\",\r\n                id: 1\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Gets the root definition of the specified common proto file.\r\n *\r\n * Bundled definitions are:\r\n * - google/protobuf/any.proto\r\n * - google/protobuf/duration.proto\r\n * - google/protobuf/empty.proto\r\n * - google/protobuf/field_mask.proto\r\n * - google/protobuf/struct.proto\r\n * - google/protobuf/timestamp.proto\r\n * - google/protobuf/wrappers.proto\r\n *\r\n * @param {string} file Proto file name\r\n * @returns {INamespace|null} Root definition or `null` if not defined\r\n */\r\ncommon.get = function get(file) {\r\n    return common[file] || null;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/protobufjs/src/common.js"],"sourceRoot":""}